{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/graphql/Booking.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/graphql/Booking.js","mtime":1581372200613},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation booking($input: BookingInput!){\\n    reprocessBooking(input:$input){\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation booking($input: ScheduleBookingInput!){\\n    schedulingBookingUpsert(input:$input){\\n      id\\n      typeId\\n      statusId\\n      hostId\\n      availabilityId\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation bookingUpsert($input: BookingInput!) {\\n    bookingUpsert(input: $input) {\\n      id\\n      typeId\\n      hostId\\n      guestId\\n      start\\n      end\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query bookingTypeList {\\n    bookingTypeList {\\n      id,\\n      key,\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query bookingStatusList {\\n    bookingStatusList {\\n      id,\\n      key,\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var GET_STATUS_LIST = gql(_templateObject());\nexport var GET_TYPE_LIST = gql(_templateObject2());\nexport var UPSERT_BOOKING = gql(_templateObject3());\nexport var SCHEDULE_BOOKING = gql(_templateObject4());\nexport var REPROCESS_BOOKING = gql(_templateObject5());",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/graphql/Booking.js"],"names":["gql","GET_STATUS_LIST","GET_TYPE_LIST","UPSERT_BOOKING","SCHEDULE_BOOKING","REPROCESS_BOOKING"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,kBAAkBD,GAAlB,mBAAN;AAUP,OAAO,IAAME,gBAAgBF,GAAhB,oBAAN;AAUP,OAAO,IAAMG,iBAAiBH,GAAjB,oBAAN;AAaP,OAAO,IAAMI,mBAAmBJ,GAAnB,oBAAN;AAYP,OAAO,IAAMK,oBAAoBL,GAApB,oBAAN","sourcesContent":["import gql from 'graphql-tag'\n\nexport const GET_STATUS_LIST = gql`\n  query bookingStatusList {\n    bookingStatusList {\n      id,\n      key,\n      name\n    }\n  }\n`\n\nexport const GET_TYPE_LIST = gql`\n  query bookingTypeList {\n    bookingTypeList {\n      id,\n      key,\n      name\n    }\n  }\n`\n\nexport const UPSERT_BOOKING = gql`\n  mutation bookingUpsert($input: BookingInput!) {\n    bookingUpsert(input: $input) {\n      id\n      typeId\n      hostId\n      guestId\n      start\n      end\n    }\n  }\n`\n\nexport const SCHEDULE_BOOKING = gql`\n  mutation booking($input: ScheduleBookingInput!){\n    schedulingBookingUpsert(input:$input){\n      id\n      typeId\n      statusId\n      hostId\n      availabilityId\n    }\n  }\n`\n\nexport const REPROCESS_BOOKING = gql`\n  mutation booking($input: BookingInput!){\n    reprocessBooking(input:$input){\n      id\n    }\n  }\n`\n"]}]}