{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/graphql/GetLocaleSettings.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/graphql/GetLocaleSettings.js","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    allLegalLocales {\\n      nodes {\\n        id\\n        code\\n        name\\n        enabled\\n      }\\n    }\\n    allTimezones {\\n      nodes {\\n        id\\n        countryCode\\n        utcOffset\\n        name\\n      }\\n    }\\n    allLanguages {\\n      nodes {\\n        id\\n        name\\n        localName\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nvar LOCALE_QUERY = gql(_templateObject());\nexport default (function () {\n  return {\n    query: LOCALE_QUERY,\n    update: function update(_ref) {\n      var allLegalLocales = _ref.allLegalLocales,\n          allTimezones = _ref.allTimezones,\n          allLanguages = _ref.allLanguages;\n      return {\n        legalLocales: allLegalLocales.nodes,\n        timezones: allTimezones.nodes,\n        languages: allLanguages.nodes\n      };\n    }\n  };\n});",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/graphql/GetLocaleSettings.js"],"names":["gql","LOCALE_QUERY","query","update","allLegalLocales","allTimezones","allLanguages","legalLocales","nodes","timezones","languages"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,eAAeD,GAAf,mBAAN;AA4BA,gBAAe,YAAM;AACnB,SAAO;AACLE,WAAOD,YADF;AAELE,UAFK,wBAEmD;AAAA,UAA/CC,eAA+C,QAA/CA,eAA+C;AAAA,UAA9BC,YAA8B,QAA9BA,YAA8B;AAAA,UAAhBC,YAAgB,QAAhBA,YAAgB;AACtD,aAAO;AACLC,sBAAcH,gBAAgBI,KADzB;AAELC,mBAAWJ,aAAaG,KAFnB;AAGLE,mBAAWJ,aAAaE;AAHnB,OAAP;AAKD;AARI,GAAP;AAUD,CAXD","sourcesContent":["import gql from 'graphql-tag'\n\nconst LOCALE_QUERY = gql`\n  query {\n    allLegalLocales {\n      nodes {\n        id\n        code\n        name\n        enabled\n      }\n    }\n    allTimezones {\n      nodes {\n        id\n        countryCode\n        utcOffset\n        name\n      }\n    }\n    allLanguages {\n      nodes {\n        id\n        name\n        localName\n      }\n    }\n  }\n`\n\nexport default () => {\n  return {\n    query: LOCALE_QUERY,\n    update({ allLegalLocales, allTimezones, allLanguages }) {\n      return {\n        legalLocales: allLegalLocales.nodes,\n        timezones: allTimezones.nodes,\n        languages: allLanguages.nodes\n      }\n    }\n  }\n}\n"]}]}