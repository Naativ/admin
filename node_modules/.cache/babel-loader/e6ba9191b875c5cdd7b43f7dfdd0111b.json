{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/users/UserFrame.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/users/UserFrame.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport { StoreGetters } from '@/store';\nimport { UsersActions } from '@/users/UsersStore';\nimport UsersFrame from '@/views/users/UsersFrame.vue';\nexport default {\n  components: {\n    UsersFrame: UsersFrame\n  },\n  data: function data() {\n    return {\n      loading: false,\n      unknown: false,\n      user: null\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    access: StoreGetters.access,\n    permissions: StoreGetters.permissions\n  }), {\n    id: function id() {\n      return this.$route.params.id;\n    }\n  }),\n  methods: _objectSpread({}, mapActions({\n    view: UsersActions.START_VIEWING,\n    getUser: UsersActions.GET_USER\n  }), {\n    canPayout: function canPayout() {\n      return this.permissions.find(function (p) {\n        return p.id === 14;\n      });\n    },\n    refresh: function () {\n      var _refresh = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                _context.next = 3;\n                return this.getUser({\n                  id: ~~this.$route.params.id\n                });\n\n              case 3:\n                result = _context.sent;\n                this.unknown = result === undefined;\n                this.user = result;\n\n                if (result) {\n                  this.view(result);\n                }\n\n                this.loading = false;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function refresh() {\n        return _refresh.apply(this, arguments);\n      }\n\n      return refresh;\n    }()\n  }),\n  beforeRouteUpdate: function () {\n    var _beforeRouteUpdate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(to, from, next) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (to.params.id) {\n                this.refresh();\n              }\n\n              next();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function beforeRouteUpdate(_x, _x2, _x3) {\n      return _beforeRouteUpdate.apply(this, arguments);\n    }\n\n    return beforeRouteUpdate;\n  }(),\n  mounted: function mounted() {\n    this.refresh();\n  }\n};",{"version":3,"sources":["UserFrame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,YAAA,QAAA,SAAA;AACA,SAAA,YAAA,QAAA,oBAAA;AAEA,OAAA,UAAA,MAAA,8BAAA;AAEA,eAAA;AACA,cAAA;AACA;AADA,GADA;AAIA,MAJA,kBAIA;AACA,WAAA;AACA,eAAA,KADA;AAEA,eAAA,KAFA;AAGA,YAAA;AAHA,KAAA;AAKA,GAVA;AAWA,8BACA,WAAA;AACA,YAAA,aAAA,MADA;AAEA,iBAAA,aAAA;AAFA,GAAA,CADA;AAKA,MALA,gBAKA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA;AAPA,IAXA;AAoBA,6BACA,WAAA;AACA,UAAA,aAAA,aADA;AAEA,aAAA,aAAA;AAFA,GAAA,CADA;AAKA,aALA,uBAKA;AACA,aAAA,KAAA,WAAA,CAAA,IAAA,CAAA;AAAA,eAAA,EAAA,EAAA,KAAA,EAAA;AAAA,OAAA,CAAA;AACA,KAPA;AAQA,WARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,qBAAA,OAAA,GAAA,IAAA;AATA;AAAA,uBAUA,KAAA,OAAA,CAAA;AACA,sBAAA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AADA,iBAAA,CAVA;;AAAA;AAUA,sBAVA;AAaA,qBAAA,OAAA,GAAA,WAAA,SAAA;AACA,qBAAA,IAAA,GAAA,MAAA;;AACA,oBAAA,MAAA,EAAA;AACA,uBAAA,IAAA,CAAA,MAAA;AACA;;AACA,qBAAA,OAAA,GAAA,KAAA;;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,IApBA;AAyCA,mBAzCA;AAAA;AAAA;AAAA,8CAyCA,EAzCA,EAyCA,IAzCA,EAyCA,IAzCA;AAAA;AAAA;AAAA;AAAA;AA0CA,kBAAA,GAAA,MAAA,CAAA,EAAA,EAAA;AACA,qBAAA,OAAA;AACA;;AACA;;AA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+CA,SA/CA,qBA+CA;AACA,SAAA,OAAA;AACA;AAjDA,CAAA","sourcesContent":["<template>\n  <div>\n    <v-layout justify-center row class=\"user\">\n      <v-container v-if=\"!user\">\n        <v-alert v-if=\"!loading\" type=\"error\" :value=\"true\" xs12>Could not load the requested user</v-alert>\n      </v-container>\n      <div v-else>\n        <v-tabs centered icons-and-text>\n          <v-tabs-slider color=\"pink\"></v-tabs-slider>\n          <v-tab :to=\"'/members/' + id + '/'\">\n            Details\n            <v-icon>account_box</v-icon>\n          </v-tab>\n          <v-tab v-if=\"access.hasMembers\" :to=\"'/members/' + id + '/attributes'\">\n            Attributes\n            <v-icon>accessibility</v-icon>\n          </v-tab>\n          <v-tab v-if=\"access.hasAppointments\" :to=\"'/members/' + id + '/appointments'\">\n            Bookings\n            <v-icon>calendar_today</v-icon>\n          </v-tab>\n          <v-tab v-if=\"access.hasSurveys\" :to=\"'/members/' + id + '/surveys'\">\n            Surveys\n            <v-icon>notes</v-icon>\n          </v-tab>\n          <v-tab v-if=\"access.hasTeam\" :to=\"'/members/' + id + '/team'\">\n            Team\n            <v-icon>group</v-icon>\n          </v-tab>\n          <v-tab v-if=\"access.hasMembers\" :to=\"'/members/' + id + '/actions'\">\n            Actions\n            <v-icon>build</v-icon>\n          </v-tab>\n          <v-tab v-if=\"access.hasMembers\" :to=\"'/members/' + id + '/assets'\">\n            Assets\n            <v-icon>collections</v-icon>\n          </v-tab>\n          <v-tab v-if=\"access.hasPermissions\" :to=\"'/members/' + id + '/permissions'\">\n            Permissions\n            <v-icon>lock</v-icon>\n          </v-tab>\n          <v-tab :to=\"'/members/' + id + '/jungle'\">\n            Graph\n            <v-icon>device_hub</v-icon>\n          </v-tab>\n        </v-tabs>\n      </div>\n    </v-layout>\n    <v-divider />\n    <router-view :user=\"user\" v-if=\"user\"></router-view>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\nimport { StoreGetters } from '@/store'\nimport { UsersActions } from '@/users/UsersStore'\n\nimport UsersFrame from '@/views/users/UsersFrame.vue'\n\nexport default {\n  components: {\n    UsersFrame\n  },\n  data () {\n    return {\n      loading: false,\n      unknown: false,\n      user: null\n    }\n  },\n  computed: {\n    ...mapGetters({\n      access: StoreGetters.access,\n      permissions: StoreGetters.permissions\n    }),\n    id () {\n      return this.$route.params.id\n    }\n  },\n  methods: {\n    ...mapActions({\n      view: UsersActions.START_VIEWING,\n      getUser: UsersActions.GET_USER\n    }),\n    canPayout () {\n      return this.permissions.find(p => p.id === 14)\n    },\n    async refresh () {\n      this.loading = true\n      const result = await this.getUser({\n        id: ~~this.$route.params.id\n      })\n      this.unknown = result === undefined\n      this.user = result\n      if (result) {\n        this.view(result)\n      }\n      this.loading = false\n    }\n  },\n  async beforeRouteUpdate (to, from, next) {\n    if (to.params.id) {\n      this.refresh()\n    }\n    next()\n  },\n  mounted () {\n    this.refresh()\n  }\n}\n</script>\n\n<style scoped>\n.user {\n  background-color: white;\n}\n.user > div:first-child {\n  width: 100%;\n}\n</style>\n"],"sourceRoot":"src/views/users"}]}