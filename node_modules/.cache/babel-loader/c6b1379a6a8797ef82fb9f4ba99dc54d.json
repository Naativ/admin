{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/MemberSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/MemberSearch.vue","mtime":1577329618149},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Drag } from 'vue-drag-drop';\nimport DragImage from '@/components/DragImage';\nimport SEARCH_QUERY from '@/graphql/Search.gql';\nimport * as R from 'ramda';\nexport default {\n  props: {\n    loading: Boolean,\n    draggable: Boolean,\n    title: String\n  },\n  components: {\n    Drag: Drag,\n    DragImage: DragImage\n  },\n  data: function data() {\n    return {\n      searchTerm: '',\n      headers: [{\n        text: '',\n        value: 'drag',\n        align: 'left',\n        sortable: false,\n        width: '1%'\n      }, {\n        text: 'ID',\n        value: 'id'\n      }, {\n        text: 'Name',\n        value: 'name'\n      }, {\n        text: 'Email',\n        value: 'contactEmail'\n      }, {\n        text: 'Slug',\n        value: 'slug'\n      }, {\n        text: 'Joined On',\n        value: 'joinedOn'\n      }],\n      items: [],\n      searchLoading: false\n    };\n  },\n  methods: {\n    emitDragging: function emitDragging(e) {\n      this.$emit('emitDragging', e);\n    },\n    emitDraggingStop: function emitDraggingStop(e) {\n      this.$emit('emitDraggingStop', e);\n    },\n    search: function () {\n      var _search = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.searchLoading = true;\n                _context.next = 3;\n                return this.$apollo.query({\n                  query: SEARCH_QUERY,\n                  variables: {\n                    searchInput: {\n                      search: this.searchTerm\n                    }\n                  }\n                });\n\n              case 3:\n                res = _context.sent;\n                this.items = R.pathOr([], ['data', 'searchHierarchy', 'hierarchies'], res);\n                this.searchLoading = false;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function search() {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }(),\n    memberSelected: function memberSelected(member) {\n      this.$emit('memberSelected', member);\n    }\n  }\n};",{"version":3,"sources":["MemberSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA,SAAA,IAAA,QAAA,eAAA;AAEA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,YAAA,MAAA,sBAAA;AACA,OAAA,KAAA,CAAA,MAAA,OAAA;AAEA,eAAA;AACA,SAAA;AACA,aAAA,OADA;AAEA,eAAA,OAFA;AAGA,WAAA;AAHA,GADA;AAMA,cAAA;AACA,cADA;AAEA;AAFA,GANA;AAUA,MAVA,kBAUA;AACA,WAAA;AACA,kBAAA,EADA;AAEA,eAAA,CACA;AACA,cAAA,EADA;AAEA,eAAA,MAFA;AAGA,eAAA,MAHA;AAIA,kBAAA,KAJA;AAKA,eAAA;AALA,OADA,EAQA;AAAA,cAAA,IAAA;AAAA,eAAA;AAAA,OARA,EASA;AAAA,cAAA,MAAA;AAAA,eAAA;AAAA,OATA,EAUA;AAAA,cAAA,OAAA;AAAA,eAAA;AAAA,OAVA,EAWA;AAAA,cAAA,MAAA;AAAA,eAAA;AAAA,OAXA,EAYA;AAAA,cAAA,WAAA;AAAA,eAAA;AAAA,OAZA,CAFA;AAgBA,aAAA,EAhBA;AAiBA,qBAAA;AAjBA,KAAA;AAmBA,GA9BA;AA+BA,WAAA;AACA,gBADA,wBACA,CADA,EACA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,CAAA;AACA,KAHA;AAIA,oBAJA,4BAIA,CAJA,EAIA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,CAAA;AACA,KANA;AAOA,UAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,qBAAA,aAAA,GAAA,IAAA;AARA;AAAA,uBASA,KAAA,OAAA,CAAA,KAAA,CAAA;AACA,yBAAA,YADA;AAEA,6BAAA;AACA,iCAAA;AACA,8BAAA,KAAA;AADA;AADA;AAFA,iBAAA,CATA;;AAAA;AASA,mBATA;AAkBA,qBAAA,KAAA,GAAA,EAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,iBAAA,EAAA,aAAA,CAAA,EAAA,GAAA,CAAA;AACA,qBAAA,aAAA,GAAA,KAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBA,kBArBA,0BAqBA,MArBA,EAqBA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,MAAA;AACA;AAvBA;AA/BA,CAAA","sourcesContent":["<template>\n  <v-flex>\n    <h1 v-if=\"title\">{{title}}</h1>\n    <div>\n      <v-flex xs6 md4 lg3>\n        <v-card flat class=\"pb-3\">\n          <form @submit.prevent=\"search\" autocomplete=\"off\">\n            <v-text-field\n              v-model=\"searchTerm\"\n              append-icon=\"search\"\n              type=\"text\"\n              name=\"searchTerm\"\n              label=\"Enter name\"\n            ></v-text-field>\n          </form>\n          <v-card-actions class=\"justify-content-start\">\n            <v-btn color=\"secondary\" @click=\"search\">Submit</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-flex>\n    </div>\n    <div>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"items\"\n        class=\"elevation-1\"\n        :loading=\"loading || searchLoading\"\n        :rows-per-page-items=\"[5]\"\n      >\n        <template slot=\"items\" slot-scope=\"props\">\n          <tr>\n            <td>\n              <drag\n                class=\"draggable\"\n                @dragstart=\"emitDragging\"\n                @dragend=\"emitDraggingStop\"\n                v-if=\"draggable\"\n                :transfer-data=\"{ member: props.item }\"\n                :effect-allowed=\"['copy']\"\n                :drop-effect=\"'copy'\"\n              >\n                <div slot=\"image\" class=\"drag-image\">\n                  <DragImage :props=\"props\" />\n                </div>\n                <a v-if=\"!draggable\" @click=\"memberSelected(props.item)\">{{ props.item.name }}</a>\n                <v-icon>drag_handle</v-icon>\n              </drag>\n            </td>\n            <td>\n              <drag\n                class=\"draggable\"\n                @dragstart=\"emitDragging\"\n                @dragend=\"emitDraggingStop\"\n                v-if=\"draggable\"\n                :transfer-data=\"{ member: props.item }\"\n              >\n                <div slot=\"image\" class=\"drag-image\">\n                  <DragImage :props=\"props\" />\n                </div>\n                {{ props.item.id }}\n              </drag>\n            </td>\n            <td>\n              <drag\n                class=\"draggable\"\n                @dragstart=\"emitDragging\"\n                @dragend=\"emitDraggingStop\"\n                v-if=\"draggable\"\n                :transfer-data=\"{ member: props.item }\"\n              >\n                <div slot=\"image\" class=\"drag-image\">\n                  <DragImage :props=\"props\" />\n                </div>\n                {{ props.item.displayName }}\n              </drag>\n            </td>\n            <td>\n              <drag\n                class=\"draggable\"\n                @dragstart=\"emitDragging\"\n                @dragend=\"emitDraggingStop\"\n                v-if=\"draggable\"\n                :transfer-data=\"{ member: props.item }\"\n              >\n                <div slot=\"image\" class=\"drag-image\">\n                  <DragImage :props=\"props\" />\n                </div>\n                {{ props.item.contactEmail }}\n              </drag>\n            </td>\n            <td>\n              <drag\n                class=\"draggable\"\n                @dragstart=\"emitDragging\"\n                @dragend=\"emitDraggingStop\"\n                v-if=\"draggable\"\n                :transfer-data=\"{ member: props.item }\"\n              >\n                <div slot=\"image\" class=\"drag-image\">\n                  <DragImage :props=\"props\" />\n                </div>\n                {{ props.item.slug }}\n              </drag>\n            </td>\n            <td>\n              <drag\n                class=\"draggable\"\n                @dragstart=\"emitDragging\"\n                @dragend=\"emitDraggingStop\"\n                v-if=\"draggable\"\n                :transfer-data=\"{ member: props.item }\"\n              >\n                <div slot=\"image\" class=\"drag-image\">\n                  <DragImage :props=\"props\" />\n                </div>\n                {{ props.item.joinedOn | formatDate}}\n              </drag>\n            </td>\n          </tr>\n        </template>\n      </v-data-table>\n    </div>\n  </v-flex>\n</template>\n\n<script>\nimport { Drag } from 'vue-drag-drop'\n\nimport DragImage from '@/components/DragImage'\nimport SEARCH_QUERY from '@/graphql/Search.gql'\nimport * as R from 'ramda'\n\nexport default {\n  props: {\n    loading: Boolean,\n    draggable: Boolean,\n    title: String\n  },\n  components: {\n    Drag,\n    DragImage\n  },\n  data () {\n    return {\n      searchTerm: '',\n      headers: [\n        {\n          text: '',\n          value: 'drag',\n          align: 'left',\n          sortable: false,\n          width: '1%'\n        },\n        { text: 'ID', value: 'id' },\n        { text: 'Name', value: 'name' },\n        { text: 'Email', value: 'contactEmail' },\n        { text: 'Slug', value: 'slug' },\n        { text: 'Joined On', value: 'joinedOn' }\n      ],\n      items: [],\n      searchLoading: false\n    }\n  },\n  methods: {\n    emitDragging (e) {\n      this.$emit('emitDragging', e)\n    },\n    emitDraggingStop (e) {\n      this.$emit('emitDraggingStop', e)\n    },\n    async search () {\n      this.searchLoading = true\n      const res = await this.$apollo.query({\n        query: SEARCH_QUERY,\n        variables: {\n          searchInput: {\n            search: this.searchTerm\n          }\n        }\n      })\n\n      this.items = R.pathOr([], ['data', 'searchHierarchy', 'hierarchies'], res)\n      this.searchLoading = false\n    },\n    memberSelected (member) {\n      this.$emit('memberSelected', member)\n    }\n  }\n}\n</script>\n<style>\n.drag-image {\n  background-color: lightgray;\n  vertical-align: middle;\n}\n.draggable:hover {\n  cursor: grab !important;\n}\n.draggable:active {\n  cursor: grabbing !important;\n}\n</style>\n"],"sourceRoot":"src/components"}]}