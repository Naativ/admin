{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/appointments/BookingDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/appointments/BookingDetails.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { booking as GET_BOOKING, getBookingStatus as GET_BOOKING_STATUS, getBookingType as GET_BOOKING_TYPE } from '@/appointments/appointments.gql';\nimport { forEach, cloneDeep } from 'lodash';\nimport { UPSERT_BOOKING } from '@/graphql/Booking.js';\nimport ParticipantDialog from '@/views/users/appointments/ParticipantDialog.vue';\nimport { getPaymentFromBooking } from '@/payouts/payouts.gql';\nimport { mapGetters } from 'vuex';\nimport { StoreGetters } from '@/store';\nexport default {\n  components: {\n    ParticipantDialog: ParticipantDialog\n  },\n  data: function data() {\n    return {\n      bookingPayment: {},\n      bookingIds: [],\n      typeIds: [],\n      status: '',\n      type: '',\n      booking: {},\n      editing: false,\n      saveSpeedDial: false,\n      saving: false,\n      saveActivator: false,\n      statuses: [],\n      types: [],\n      bookingStatusArray: [],\n      bookingTypeArray: [],\n      choosingParticipant: false,\n      participantType: ''\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getBooking();\n\n            case 2:\n              _context.next = 4;\n              return this.getBookingStatusIds();\n\n            case 4:\n              _context.next = 6;\n              return this.getBookingTypeIds();\n\n            case 6:\n              _context.next = 8;\n              return this.getPayment();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: _objectSpread({}, mapGetters({\n    permissions: StoreGetters.permissions\n  }), {\n    canReadPayout: function canReadPayout() {\n      return this.permissions.find(function (p) {\n        return p.id === 14;\n      });\n    },\n    host: function host() {\n      return this.booking ? this.booking.host : '';\n    },\n    participant: function participant() {\n      return this.booking ? this.booking.guest : '';\n    },\n    id: function id() {\n      var id = this.$route.params.id;\n      var ids = id.split('_');\n      return ids[1];\n    }\n  }),\n  methods: {\n    participantSet: function participantSet(id) {\n      this.choosingParticipant = false;\n\n      if (this.participantType === 'host') {\n        this.host.id = id;\n      } else if (this.participantType === 'participant') {\n        this.participant.id = id;\n      }\n    },\n    cancelDialogue: function cancelDialogue() {\n      this.choosingParticipant = false;\n    },\n    dialogueOpened: function dialogueOpened(participantType) {\n      this.choosingParticipant = true;\n      this.participantType = participantType;\n    },\n    getBookingStatusIds: function () {\n      var _getBookingStatusIds = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$apollo.query({\n                  query: GET_BOOKING_STATUS,\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                _ref = _context2.sent;\n                data = _ref.data;\n                this.bookingStatusArray = data.getBookingStatus;\n                this.statuses = this.bookingStatusArray.map(function (r) {\n                  return r.name;\n                });\n                forEach(this.bookingStatusArray, function (_) {\n                  _this.bookingIds[~~_.id] = _.name;\n                });\n                this.status = this.bookingIds[~~this.booking.statusId];\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getBookingStatusIds() {\n        return _getBookingStatusIds.apply(this, arguments);\n      }\n\n      return getBookingStatusIds;\n    }(),\n    saveData: function () {\n      var _saveData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var booking, type, statusId, typeId;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                booking = this.bookingStatusArray.filter(function (booking) {\n                  return booking.name === _this2.status;\n                });\n                type = this.bookingTypeArray.filter(function (booking) {\n                  return booking.name === _this2.type;\n                });\n                statusId = booking[0].id;\n                typeId = type[0].id;\n                _context3.next = 6;\n                return this.$apollo.mutate({\n                  mutation: UPSERT_BOOKING,\n                  variables: {\n                    input: {\n                      id: ~~this.booking.id,\n                      availabilityId: this.booking.availabilityId,\n                      end: this.booking.end,\n                      guestId: ~~this.participant.id,\n                      hostId: ~~this.host.id,\n                      start: this.booking.start,\n                      statusId: statusId,\n                      typeId: typeId\n                    }\n                  }\n                });\n\n              case 6:\n                _context3.next = 8;\n                return this.getBooking();\n\n              case 8:\n                this.editing = false;\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveData() {\n        return _saveData.apply(this, arguments);\n      }\n\n      return saveData;\n    }(),\n    cancelEdit: function () {\n      var _cancelEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.editing = false;\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function cancelEdit() {\n        return _cancelEdit.apply(this, arguments);\n      }\n\n      return cancelEdit;\n    }(),\n    getPayment: function () {\n      var _getPayment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var _ref2, data;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$apollo.query({\n                  query: getPaymentFromBooking,\n                  variables: {\n                    bookingId: ~~this.id\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                _ref2 = _context5.sent;\n                data = _ref2.data;\n                this.bookingPayment = data.getPaymentFromBooking;\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getPayment() {\n        return _getPayment.apply(this, arguments);\n      }\n\n      return getPayment;\n    }(),\n    getBooking: function () {\n      var _getBooking = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$apollo.query({\n                  query: GET_BOOKING,\n                  variables: {\n                    input: {\n                      ids: [~~this.id]\n                    }\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                res = _context6.sent;\n                this.booking = cloneDeep(res.data.bookingSearch.results[0]);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getBooking() {\n        return _getBooking.apply(this, arguments);\n      }\n\n      return getBooking;\n    }(),\n    getBookingTypeIds: function () {\n      var _getBookingTypeIds = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var _this3 = this;\n\n        var _ref3, data;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.$apollo.query({\n                  query: GET_BOOKING_TYPE,\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                _ref3 = _context7.sent;\n                data = _ref3.data;\n                this.bookingTypeArray = data.getBookingType;\n                this.types = this.bookingTypeArray.map(function (t) {\n                  return t.name;\n                });\n                forEach(this.bookingTypeArray, function (_) {\n                  _this3.typeIds[~~_.id] = _.name;\n                });\n                this.type = this.typeIds[~~this.booking.typeId];\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getBookingTypeIds() {\n        return _getBookingTypeIds.apply(this, arguments);\n      }\n\n      return getBookingTypeIds;\n    }()\n  }\n};",{"version":3,"sources":["BookingDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-layout column>\n  <ParticipantDialog\n    @close=\"participantSet\"\n    @cancel=\"cancelDialogue\"\n    :open=\"choosingParticipant\"\n  />\n  <v-layout v-if=\"host\" justify-space-between align-center row>\n    <v-btn\n      :class=\"{ editbtn: true, sm: this.$vuetify.breakpoint.name === 'xs' }\"\n      class=\"edit-speed-dial\"\n      v-if=\"!editing\"\n      absolute\n      dark\n      fab\n      top\n      right\n      color=\"pink\"\n      @click=\"editing = true\"\n    >\n      <v-icon>edit</v-icon>\n    </v-btn>\n    <v-speed-dial\n      absolute\n      dark\n      fab\n      top\n      right\n      color=\"pink\"\n      v-model=\"saveSpeedDial\"\n      direction=\"bottom\"\n      :open-on-hover=\"true\"\n      transition=\"slide-y-transition\"\n      :disabled=\"!saving\"\n      v-else\n      class=\"edit-speed-dial\"\n    >\n      <v-btn slot=\"activator\" v-model=\"saveActivator\" color=\"pink\" dark fab>\n        <v-icon>save</v-icon>\n        <v-icon>close</v-icon>\n      </v-btn>\n      <v-btn fab dark small color=\"green\" @click=\"saveData\">\n        <v-icon>check</v-icon>\n      </v-btn>\n      <v-btn fab dark small color=\"red\" @click=\"cancelEdit\">\n        <v-icon>cancel</v-icon>\n      </v-btn>\n    </v-speed-dial>\n    <v-card class=\"booking-details\">\n      <h3>HOST</h3>\n      <a :href=\"'/members/' + host.id\">\n        <v-text-field\n          label=\"Name\"\n          v-model=\"host.name\"\n          required\n          regular\n          disabled\n        ></v-text-field>\n      </a>\n      <v-text-field\n        label=\"ID\"\n        v-model=\"host.id\"\n        required\n        :box=\"editing\"\n        @focus=\"dialogueOpened('host')\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n      <v-text-field\n        label=\"MRN\"\n        v-model=\"host.mrn\"\n        required\n        disabled\n      ></v-text-field>\n      <v-text-field\n        label=\"Contact Email\"\n        v-model=\"host.contactEmail\"\n        required\n        disabled\n      ></v-text-field>\n    </v-card>\n    <v-card class=\"booking-details\">\n      <h3>PARTICIPANT</h3>\n      <a :href=\"'/members/' + participant.id\">\n        <v-text-field\n          label=\"Name\"\n          v-model=\"participant.name\"\n          required\n          regular\n          disabled\n        ></v-text-field>\n      </a>\n      <v-text-field\n        label=\"ID\"\n        v-model=\"participant.id\"\n        required\n        :box=\"editing\"\n        @focus=\"dialogueOpened('participant')\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n      <v-text-field\n        label=\"MRN\"\n        v-model=\"participant.mrn\"\n        required\n        disabled\n      ></v-text-field>\n      <v-text-field\n        label=\"Contact Email\"\n        v-model=\"participant.contactEmail\"\n        required\n        disabled\n      ></v-text-field>\n    </v-card>\n  </v-layout>\n  <v-card class=\"booking-details\" v-if=\"bookingPayment && canReadPayout\">\n    <h3>PAYOUT</h3>\n    <v-text-field\n      :label=\"(bookingPayment.amount / 100) | toCurrency(bookingPayment.currency)\"\n      required\n      regular\n      disabled\n    ></v-text-field>\n    <v-text-field\n      label=\"Description\"\n      v-model=\"bookingPayment.description\"\n      required\n      regular\n      disabled\n    ></v-text-field>\n    <v-text-field\n      label=\"Status\"\n      v-model=\"bookingPayment.status\"\n      required\n      regular\n      disabled\n    ></v-text-field>\n  </v-card>\n  <v-card class=\"booking-details\" v-if=\"booking\">\n    <h3>BOOKING STATS</h3>\n    <v-layout column>\n      <v-text-field\n        label=\"Scheduled Start Date\"\n        v-model=\"booking.start\"\n        required\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n      <v-text-field\n        label=\"Scheduled End Date\"\n        v-model=\"booking.end\"\n        required\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n      <v-select\n        v-model=\"status\"\n        :label=\"!editing ? 'Status' : 'Select your status'\"\n        :items=\"statuses\"\n        item-text=\"name\"\n        item-value=\"id\"\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      />\n      <v-select\n        label=\"Type\"\n        v-model=\"type\"\n        :items=\"types\"\n        required\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-select>\n      <v-text-field\n        label=\"Availability ID\"\n        v-model=\"booking.availabilityId\"\n        required\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n    </v-layout>\n  </v-card>\n</v-layout>\n</template>\n\n<script>\nimport { booking as GET_BOOKING, getBookingStatus as GET_BOOKING_STATUS, getBookingType as GET_BOOKING_TYPE } from '@/appointments/appointments.gql'\nimport { forEach, cloneDeep } from 'lodash'\nimport { UPSERT_BOOKING } from '@/graphql/Booking.js'\nimport ParticipantDialog from '@/views/users/appointments/ParticipantDialog.vue'\nimport { getPaymentFromBooking } from '@/payouts/payouts.gql'\nimport { mapGetters } from 'vuex'\nimport { StoreGetters } from '@/store'\n\nexport default {\n  components: { ParticipantDialog },\n  data() {\n    return {\n      bookingPayment: {},\n      bookingIds: [],\n      typeIds: [],\n      status: '',\n      type: '',\n      booking: {},\n      editing: false,\n      saveSpeedDial: false,\n      saving: false,\n      saveActivator: false,\n      statuses: [],\n      types: [],\n      bookingStatusArray: [],\n      bookingTypeArray: [],\n      choosingParticipant: false,\n      participantType: ''\n    }\n  },\n  async mounted() {\n    await this.getBooking()\n    await this.getBookingStatusIds()\n    await this.getBookingTypeIds()\n    await this.getPayment()\n  },\n  computed: {\n    ...mapGetters({\n      permissions: StoreGetters.permissions\n    }),\n    canReadPayout() {\n      return this.permissions.find(p => p.id === 14)\n    },\n    host() {\n      return this.booking ? this.booking.host : ''\n    },\n    participant() {\n      return this.booking ? this.booking.guest : ''\n    },\n    id() {\n      const id = this.$route.params.id\n      const ids = id.split('_')\n      return ids[1]\n    }\n  },\n  methods: {\n    participantSet(id) {\n      this.choosingParticipant = false\n      if (this.participantType === 'host') {\n        this.host.id = id\n      } else if (this.participantType === 'participant') {\n        this.participant.id = id\n      }\n    },\n    cancelDialogue() {\n      this.choosingParticipant = false\n    },\n    dialogueOpened(participantType) {\n      this.choosingParticipant = true\n      this.participantType = participantType\n    },\n    async getBookingStatusIds() {\n      const { data } = await this.$apollo.query({\n        query: GET_BOOKING_STATUS,\n        fetchPolicy: 'network-only'\n      })\n      this.bookingStatusArray = data.getBookingStatus\n      this.statuses = this.bookingStatusArray.map(r => {\n        return r.name\n      })\n      forEach(this.bookingStatusArray, _ => {\n        this.bookingIds[~~_.id] = _.name\n      })\n      this.status = this.bookingIds[~~this.booking.statusId]\n    },\n    async saveData() {\n      const booking = this.bookingStatusArray.filter(booking => {\n        return booking.name === this.status\n      })\n      const type = this.bookingTypeArray.filter(booking => {\n        return booking.name === this.type\n      })\n      const statusId = booking[0].id\n      const typeId = type[0].id\n      await this.$apollo.mutate({\n        mutation: UPSERT_BOOKING,\n        variables: {\n          input: {\n            id: ~~this.booking.id,\n            availabilityId: this.booking.availabilityId,\n            end: this.booking.end,\n            guestId: ~~this.participant.id,\n            hostId: ~~this.host.id,\n            start: this.booking.start,\n            statusId: statusId,\n            typeId: typeId\n          }\n        }\n      })\n      await this.getBooking()\n      this.editing = false\n    },\n    async cancelEdit() {\n      this.editing = false\n    },\n    async getPayment() {\n      const { data } = await this.$apollo.query({\n        query: getPaymentFromBooking,\n        variables: { bookingId: ~~this.id },\n        fetchPolicy: 'network-only'\n      })\n      this.bookingPayment = data.getPaymentFromBooking\n    },\n    async getBooking() {\n      const res = await this.$apollo.query({\n        query: GET_BOOKING,\n        variables: {\n          input: {\n            ids: [~~this.id]\n          }\n        },\n        fetchPolicy: 'network-only'\n      })\n      this.booking = cloneDeep(res.data.bookingSearch.results[0])\n    },\n    async getBookingTypeIds() {\n      const { data } = await this.$apollo.query({\n        query: GET_BOOKING_TYPE,\n        fetchPolicy: 'network-only'\n      })\n      this.bookingTypeArray = data.getBookingType\n      this.types = this.bookingTypeArray.map(t => {\n        return t.name\n      })\n      forEach(this.bookingTypeArray, _ => {\n        this.typeIds[~~_.id] = _.name\n      })\n      this.type = this.typeIds[~~this.booking.typeId]\n    }\n  }\n}\n</script>\n\n<style>\n.booking-details {\n  height: 100%;\n  padding: 10px 10px;\n  width: 100%;\n  margin: 10px 10px;\n}\n.editbtn.sm {\n  top: -5px !important;\n}\n.editbtn {\n  top: 15px;\n}\n.edit-speed-dial {\n  top: 88px !important;\n}\n</style>\n"],"sourceRoot":"src/views/appointments"}]}