{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/MemberInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/MemberInfo.vue","mtime":1554331296000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport getLocalSettings from '@/graphql/GetLocaleSettings';\nimport UPDATE_MEMBER from '@/graphql/UpdateMember.gql';\nimport MEMBER_BY_ID from '@/graphql/MemberById.gql'; // import { NULL } from 'graphql/language/kinds'\n// import moment from 'moment'\n\nexport default {\n  name: 'MemberInfo',\n  props: {\n    memberId: Number\n  },\n  data: function data() {\n    return {\n      valid: false,\n      memberInfo: {\n        id: null,\n        displayName: null,\n        name: null,\n        contactEmail: null,\n        firstName: null,\n        lastName: null,\n        slug: null,\n        mrn: null,\n        claimedOn: null,\n        joinedOn: null,\n        timezoneId: null,\n        languageId: null,\n        legalLocaleId: null\n      },\n      settings: {}\n    };\n  },\n  apollo: {\n    memberInfo: {\n      query: MEMBER_BY_ID,\n      variables: function variables() {\n        return {\n          condition: {\n            ids: [this.memberId]\n          }\n        };\n      },\n      update: function update(_ref) {\n        var members = _ref.members;\n        var nodes = members && members.nodes;\n        return Object.assign({}, nodes && nodes[0]);\n      }\n    },\n    settings: getLocalSettings()\n  },\n  methods: {\n    save: function save() {\n      var _this = this;\n\n      if (this.$refs.form.validate()) {\n        this.$apollo.mutate({\n          mutation: UPDATE_MEMBER,\n          variables: {\n            memberInput: {\n              id: this.memberInfo.id,\n              displayName: this.memberInfo.displayName,\n              name: this.memberInfo.name,\n              firstName: this.memberInfo.firstName,\n              lastName: this.memberInfo.lastName,\n              slug: this.memberInfo.slug,\n              timezoneId: this.memberInfo.timezoneId,\n              languageId: this.memberInfo.languageId,\n              legalLocaleId: this.memberInfo.legalLocaleId\n            }\n          },\n          update: function () {\n            var _update = _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee(store, _ref2) {\n              var updateMember;\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      updateMember = _ref2.data.updateMember;\n                      _this.memberInfo = _objectSpread({}, updateMember);\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            function update(_x, _x2) {\n              return _update.apply(this, arguments);\n            }\n\n            return update;\n          }()\n        });\n      }\n    },\n    requiredRule: function requiredRule(field) {\n      return [function (v) {\n        return !!v || \"\".concat(field, \" is required\");\n      }];\n    }\n  }\n};",{"version":3,"sources":["MemberInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,OAAA,gBAAA,MAAA,6BAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AACA,OAAA,YAAA,MAAA,0BAAA,C,CACA;AACA;;AAEA,eAAA;AACA,QAAA,YADA;AAEA,SAAA;AACA,cAAA;AADA,GAFA;AAKA,MALA,kBAKA;AACA,WAAA;AACA,aAAA,KADA;AAEA,kBAAA;AACA,YAAA,IADA;AAEA,qBAAA,IAFA;AAGA,cAAA,IAHA;AAIA,sBAAA,IAJA;AAKA,mBAAA,IALA;AAMA,kBAAA,IANA;AAOA,cAAA,IAPA;AAQA,aAAA,IARA;AASA,mBAAA,IATA;AAUA,kBAAA,IAVA;AAWA,oBAAA,IAXA;AAYA,oBAAA,IAZA;AAaA,uBAAA;AAbA,OAFA;AAiBA,gBAAA;AAjBA,KAAA;AAmBA,GAzBA;AA0BA,UAAA;AACA,gBAAA;AACA,aAAA,YADA;AAEA,eAFA,uBAEA;AACA,eAAA;AACA,qBAAA;AACA,iBAAA,CAAA,KAAA,QAAA;AADA;AADA,SAAA;AAKA,OARA;AASA,YATA,wBASA;AAAA,YAAA,OAAA,QAAA,OAAA;AACA,YAAA,QAAA,WAAA,QAAA,KAAA;AACA,eAAA,OAAA,MAAA,CAAA,EAAA,EAAA,SAAA,MAAA,CAAA,CAAA,CAAA;AACA;AAZA,KADA;AAeA,cAAA;AAfA,GA1BA;AA2CA,WAAA;AACA,QADA,kBACA;AAAA;;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,aAAA,OAAA,CAAA,MAAA,CAAA;AACA,oBAAA,aADA;AAEA,qBAAA;AACA,yBAAA;AACA,kBAAA,KAAA,UAAA,CAAA,EADA;AAEA,2BAAA,KAAA,UAAA,CAAA,WAFA;AAGA,oBAAA,KAAA,UAAA,CAAA,IAHA;AAIA,yBAAA,KAAA,UAAA,CAAA,SAJA;AAKA,wBAAA,KAAA,UAAA,CAAA,QALA;AAMA,oBAAA,KAAA,UAAA,CAAA,IANA;AAOA,0BAAA,KAAA,UAAA,CAAA,UAPA;AAQA,0BAAA,KAAA,UAAA,CAAA,UARA;AASA,6BAAA,KAAA,UAAA,CAAA;AATA;AADA,WAFA;AAeA;AAAA;AAAA;AAAA,oCAAA,iBAAA,KAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAA,SAAA,IAAA,CAAA,YAAA;AACA,4BAAA,UAAA,qBAAA,YAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAfA,SAAA;AAmBA;AACA,KAvBA;AAwBA,gBAxBA,wBAwBA,KAxBA,EAwBA;AACA,aAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,cAAA,KAAA,iBAAA;AAAA,OAAA,CAAA;AACA;AA1BA;AA3CA,CAAA","sourcesContent":["<template>\n  <v-form @submit.prevent=\"save\" ref=\"form\" v-model=\"valid\" lazy-validation>\n    <v-text-field label=\"Name\" v-model=\"memberInfo.name\" :rules=\"requiredRule('Name')\" required></v-text-field>\n    <v-text-field\n      label=\"Display Name\"\n      v-model=\"memberInfo.displayName\"\n      :rules=\"requiredRule('Display Name')\"\n      required\n    ></v-text-field>\n    <v-text-field\n      label=\"First Name\"\n      v-model=\"memberInfo.firstName\"\n      :rules=\"requiredRule('First Name')\"\n      required\n    ></v-text-field>\n    <v-text-field\n      label=\"Last Name\"\n      v-model=\"memberInfo.lastName\"\n      :rules=\"requiredRule('Last Name')\"\n      required\n    ></v-text-field>\n    <v-text-field label=\"Slug\" v-model=\"memberInfo.slug\" :rules=\"requiredRule('Slug')\"></v-text-field>\n    <v-text-field label=\"MRN\" v-model=\"memberInfo.mrn\" disabled></v-text-field>\n    <v-text-field label=\"Contact Email\" disabled v-model=\"memberInfo.contactEmail\"></v-text-field>\n    <v-text-field label=\"Claimed On\" v-model=\"memberInfo.claimedOn\" disabled></v-text-field>\n    <v-text-field label=\"Joined On\" v-model=\"memberInfo.joinedOn\" disabled format=\"MM/DD/YYYY\"></v-text-field>\n    <v-select\n      v-model=\"memberInfo.legalLocaleId\"\n      label=\"Select your locale\"\n      :rules=\"requiredRule('Locale')\"\n      :items=\"settings.legalLocales\"\n      item-text=\"name\"\n      item-value=\"id\"\n    />\n    <v-select\n      v-model=\"memberInfo.languageId\"\n      label=\"Select your Language\"\n      :rules=\"requiredRule('Language')\"\n      :items=\"settings.languages\"\n      item-text=\"name\"\n      item-value=\"id\"\n    />\n    <v-select\n      v-model=\"memberInfo.timezoneId\"\n      label=\"Select your Timezone\"\n      :rules=\"requiredRule('Timezone')\"\n      :items=\"settings.timezones\"\n      item-text=\"name\"\n      item-value=\"id\"\n      autocomplete\n    />\n    <v-btn color=\"success\" :disabled=\"!valid\" @click=\"save()\">Save Info</v-btn>\n  </v-form>\n</template>\n\n<script>\nimport getLocalSettings from '@/graphql/GetLocaleSettings'\nimport UPDATE_MEMBER from '@/graphql/UpdateMember.gql'\nimport MEMBER_BY_ID from '@/graphql/MemberById.gql'\n// import { NULL } from 'graphql/language/kinds'\n// import moment from 'moment'\n\nexport default {\n  name: 'MemberInfo',\n  props: {\n    memberId: Number\n  },\n  data() {\n    return {\n      valid: false,\n      memberInfo: {\n        id: null,\n        displayName: null,\n        name: null,\n        contactEmail: null,\n        firstName: null,\n        lastName: null,\n        slug: null,\n        mrn: null,\n        claimedOn: null,\n        joinedOn: null,\n        timezoneId: null,\n        languageId: null,\n        legalLocaleId: null\n      },\n      settings: {}\n    }\n  },\n  apollo: {\n    memberInfo: {\n      query: MEMBER_BY_ID,\n      variables() {\n        return {\n          condition: {\n            ids: [this.memberId]\n          }\n        }\n      },\n      update({ members }) {\n        const nodes = members && members.nodes\n        return Object.assign({}, nodes && nodes[0])\n      }\n    },\n    settings: getLocalSettings()\n  },\n  methods: {\n    save() {\n      if (this.$refs.form.validate()) {\n        this.$apollo.mutate({\n          mutation: UPDATE_MEMBER,\n          variables: {\n            memberInput: {\n              id: this.memberInfo.id,\n              displayName: this.memberInfo.displayName,\n              name: this.memberInfo.name,\n              firstName: this.memberInfo.firstName,\n              lastName: this.memberInfo.lastName,\n              slug: this.memberInfo.slug,\n              timezoneId: this.memberInfo.timezoneId,\n              languageId: this.memberInfo.languageId,\n              legalLocaleId: this.memberInfo.legalLocaleId\n            }\n          },\n          update: async (store, { data: { updateMember } }) => {\n            this.memberInfo = { ...updateMember }\n          }\n        })\n      }\n    },\n    requiredRule(field) {\n      return [v => !!v || `${field} is required`]\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}