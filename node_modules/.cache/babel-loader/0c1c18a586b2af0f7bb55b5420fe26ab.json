{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/curriculum/Courses.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/curriculum/Courses.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddDialog from '@/components/courses/AddDialog.vue';\nimport { uploadCourseForm } from '@/components/courses/forms';\nimport { mapActions } from 'vuex';\nimport { CurriculumActions } from '@/curriculum/CurriculumStore';\nimport Sortable from 'sortablejs';\nexport default {\n  components: {\n    AddDialog: AddDialog\n  },\n  data: function data() {\n    return {\n      headers: [{\n        text: '',\n        sortable: false\n      }, {\n        text: 'ID',\n        value: 'id'\n      }, {\n        text: 'Key',\n        value: 'key'\n      }, {\n        text: 'Description',\n        value: 'description'\n      }],\n      courses: {},\n      sortedCourses: [],\n      showDialog: false,\n      courseForm: uploadCourseForm,\n      pageLoading: true\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var table, _self;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getCourses();\n\n            case 2:\n              this.courses = _context.sent;\n              _context.next = 5;\n              return this.courses.results.slice().sort(function (a, b) {\n                return a.id - b.id;\n              });\n\n            case 5:\n              this.sortedCourses = _context.sent;\n              this.pageLoading = false;\n              table = document.querySelector('.v-datatable tbody');\n              _self = this;\n              Sortable.create(table, {\n                onEnd: function onEnd(_ref) {\n                  var newIndex = _ref.newIndex,\n                      oldIndex = _ref.oldIndex;\n\n                  var rowSelected = _self.sortedCourses.splice(oldIndex, 1)[0];\n\n                  _self.sortedCourses.splice(newIndex, 0, rowSelected);\n                },\n                handle: '.sortHandle'\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: _objectSpread({}, mapActions([CurriculumActions.GET_COURSES, CurriculumActions.UPSERT_COURSE]), {\n    openDialog: function openDialog() {\n      this.showDialog = true;\n    },\n    closeDialog: function () {\n      var _closeDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(val) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.showDialog = false;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function closeDialog(_x) {\n        return _closeDialog.apply(this, arguments);\n      }\n\n      return closeDialog;\n    }(),\n    openUnit: function openUnit(item) {\n      this.$router.push('/curriculum/courses/' + item);\n    },\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(val) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.showDialog = false;\n                _context3.next = 3;\n                return this.upsertCourse(val);\n\n              case 3:\n                Object.keys(this.courseForm).forEach(function (index) {\n                  _this.courseForm[index] = '';\n                });\n                _context3.next = 6;\n                return this.getCourses();\n\n              case 6:\n                this.courses = _context3.sent;\n                _context3.next = 9;\n                return this.courses.results.slice().sort(function (a, b) {\n                  return a.id - b.id;\n                });\n\n              case 9:\n                this.sortedCourses = _context3.sent;\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function submitForm(_x2) {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }()\n  })\n};",{"version":3,"sources":["Courses.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout justify-space-around align-center column>\n    <v-progress-circular v-if=\"pageLoading\" color=\"blue\" indeterminate></v-progress-circular>\n    <h3>Available Courses</h3>\n    <v-container class=\"table\">\n      <v-btn\n        @click=\"openDialog\"\n        color=\"pink\"\n        dark\n        absolute\n        right\n        fab\n      >\n        <v-icon>add</v-icon>\n      </v-btn>\n      <v-data-table\n        :items=\"sortedCourses\"\n        :headers=\"headers\"\n        hide-actions\n      >\n      <template slot=\"items\" slot-scope=\"props\">\n        <tr @click=\"openUnit(props.item.id)\">\n          <td class=\"px-1\" style=\"width: 0.1%\">\n            <v-btn style=\"cursor: move\" icon class=\"sortHandle\"><v-icon>drag_handle</v-icon></v-btn>\n          </td>\n          <td class=\"text-xs\">{{ props.item.id}}</td>\n          <td class=\"text-xs\">{{ props.item.key}}</td>\n          <td class=\"text-xs\">{{ props.item.description}}</td>\n        </tr>\n      </template>\n      </v-data-table>\n    </v-container>\n    <AddDialog\n      :showDialog=\"showDialog\"\n      :uploadConfig=\"courseForm\"\n      @closeDialog=\"closeDialog\"\n      @submitForm=\"submitForm\"\n    />\n  </v-layout>\n</template>\n\n<script>\nimport AddDialog from '@/components/courses/AddDialog.vue'\n\nimport { uploadCourseForm } from '@/components/courses/forms'\nimport { mapActions } from 'vuex'\nimport { CurriculumActions } from '@/curriculum/CurriculumStore'\n\nimport Sortable from 'sortablejs'\n\nexport default {\n  components: {\n    AddDialog\n  },\n  data () {\n    return {\n      headers: [\n        { text: '', sortable: false },\n        { text: 'ID', value: 'id' },\n        { text: 'Key', value: 'key' },\n        { text: 'Description', value: 'description' }\n      ],\n      courses: {},\n      sortedCourses: [],\n      showDialog: false,\n      courseForm: uploadCourseForm,\n      pageLoading: true\n    }\n  },\n  async mounted () {\n    this.courses = await this.getCourses()\n    this.sortedCourses = await this.courses.results.slice().sort(function(a, b) {\n      return a.id - b.id\n    })\n    this.pageLoading = false\n    const table = document.querySelector('.v-datatable tbody')\n    const _self = this\n    Sortable.create(table, {\n      onEnd({ newIndex, oldIndex }) {\n        const rowSelected = _self.sortedCourses.splice(oldIndex, 1)[0]\n        _self.sortedCourses.splice(newIndex, 0, rowSelected)\n      },\n      handle: '.sortHandle'\n    })\n  },\n  methods: {\n    ...mapActions([CurriculumActions.GET_COURSES, CurriculumActions.UPSERT_COURSE]),\n    openDialog () {\n      this.showDialog = true\n    },\n    async closeDialog (val) {\n      this.showDialog = false\n    },\n    openUnit(item) {\n      this.$router.push('/curriculum/courses/' + item)\n    },\n    async submitForm(val) {\n      this.showDialog = false\n      await this.upsertCourse(val)\n\n      Object.keys(this.courseForm).forEach(index => {\n        this.courseForm[index] = ''\n      })\n\n      this.courses = await this.getCourses()\n      this.sortedCourses = await this.courses.results.slice().sort(function(a, b) {\n        return a.id - b.id\n      })\n    }\n  }\n}\n</script>\n\n<style>\n.link {\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.table {\n  text-align: left !important;\n}\n</style>\n"],"sourceRoot":"src/views/curriculum"}]}