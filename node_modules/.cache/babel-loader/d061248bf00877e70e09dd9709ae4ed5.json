{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/Address.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/Address.vue","mtime":1555089484000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapMutations } from 'vuex';\nimport { UsersActions, UsersMutations } from '@/users/UsersStore';\nexport default {\n  name: 'AddressForm',\n  props: {\n    memberId: Number\n  },\n  data: function data() {\n    return {\n      address: {\n        id: null,\n        name: null,\n        street: null,\n        city: null,\n        province: null,\n        country: null,\n        postalCode: null,\n        street2: null\n      },\n      loading: false,\n      valid: false\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var address;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getAddress(this.memberId);\n\n            case 2:\n              address = _context.sent;\n              this.address = _objectSpread({}, address);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: _objectSpread({}, mapActions({\n    getAddress: UsersActions.GET_ADDRESS\n  }), mapMutations({\n    updateAddress: UsersMutations.UPDATE_ADDRESS\n  }), {\n    save: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.$refs.form.validate()) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.prev = 1;\n                this.loading = true;\n                _context2.next = 5;\n                return this.updateAddress({\n                  id: this.address.id,\n                  name: this.address.name,\n                  street: this.address.street,\n                  city: this.address.city,\n                  province: this.address.province,\n                  country: this.address.country,\n                  postalCode: this.address.postalCode,\n                  street2: this.address.street2 || '',\n                  memberId: this.memberId\n                });\n\n              case 5:\n                this.loading = false;\n                _context2.next = 12;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.error({\n                  e: _context2.t0\n                });\n                this.loading = false;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  })\n};",{"version":3,"sources":["Address.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,SAAA,UAAA,EAAA,YAAA,QAAA,MAAA;AAEA,SAAA,YAAA,EAAA,cAAA,QAAA,oBAAA;AAEA,eAAA;AACA,QAAA,aADA;AAEA,SAAA;AACA,cAAA;AADA,GAFA;AAKA,MALA,kBAKA;AACA,WAAA;AACA,eAAA;AACA,YAAA,IADA;AAEA,cAAA,IAFA;AAGA,gBAAA,IAHA;AAIA,cAAA,IAJA;AAKA,kBAAA,IALA;AAMA,iBAAA,IANA;AAOA,oBAAA,IAPA;AAQA,iBAAA;AARA,OADA;AAWA,eAAA,KAXA;AAYA,aAAA;AAZA,KAAA;AAcA,GApBA;AAqBA,SArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAsBA,KAAA,UAAA,CAAA,KAAA,QAAA,CAtBA;;AAAA;AAsBA,qBAtBA;AAuBA,mBAAA,OAAA,qBAAA,OAAA;;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyBA,6BACA,WAAA;AAAA,gBAAA,aAAA;AAAA,GAAA,CADA,EAEA,aAAA;AAAA,mBAAA,eAAA;AAAA,GAAA,CAFA;AAGA,QAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAIA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAJA;AAAA;AAAA;AAAA;;AAAA;AAMA,qBAAA,OAAA,GAAA,IAAA;AANA;AAAA,uBAOA,KAAA,aAAA,CAAA;AACA,sBAAA,KAAA,OAAA,CAAA,EADA;AAEA,wBAAA,KAAA,OAAA,CAAA,IAFA;AAGA,0BAAA,KAAA,OAAA,CAAA,MAHA;AAIA,wBAAA,KAAA,OAAA,CAAA,IAJA;AAKA,4BAAA,KAAA,OAAA,CAAA,QALA;AAMA,2BAAA,KAAA,OAAA,CAAA,OANA;AAOA,8BAAA,KAAA,OAAA,CAAA,UAPA;AAQA,2BAAA,KAAA,OAAA,CAAA,OAAA,IAAA,EARA;AASA,4BAAA,KAAA;AATA,iBAAA,CAPA;;AAAA;AAkBA,qBAAA,OAAA,GAAA,KAAA;AAlBA;AAAA;;AAAA;AAAA;AAAA;AAoBA,wBAAA,KAAA,CAAA;AAAA;AAAA,iBAAA;AACA,qBAAA,OAAA,GAAA,KAAA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzBA,CAAA","sourcesContent":["<template>\n    <v-form @submit.prevent=\"save\" ref=\"form\" v-model=\"valid\" lazy-validation>\n      <v-text-field\n        label=\"Name\"\n        v-model=\"address.name\"\n        :rules=\"[v => !!v || 'Name is required']\"\n        required\n      />\n      <v-text-field\n        label=\"Street\"\n        v-model=\"address.street\"\n        :rules=\"[v => !!v || 'Street is required']\"\n        required\n      />\n      <v-text-field label=\"Street 2\" v-model=\"address.street2\"/>\n      <v-text-field\n        label=\"City\"\n        v-model=\"address.city\"\n        :rules=\"[v => !!v || 'City is required']\"\n        required\n      />\n      <v-text-field\n        label=\"State/Province\"\n        v-model=\"address.province\"\n        :rules=\"[v => !!v || 'State/Province is required']\"\n        required\n      />\n      <v-text-field\n        label=\"Postal Code\"\n        v-model=\"address.postalCode\"\n        :rules=\"[v => !!v || 'Postal Code is required']\"\n        required\n      />\n      <v-text-field\n        label=\"Country\"\n        v-model=\"address.country\"\n        :rules=\"[v => !!v || 'Country is required']\"\n        required\n      />\n      <v-btn\n        @click=\"save()\"\n        :disabled=\"!valid\"\n        :loading=\"loading\"\n        color=\"success\"\n      >\n        Save Address\n      </v-btn>\n    </v-form>\n</template>\n\n<script>\nimport { mapActions, mapMutations } from 'vuex'\n\nimport { UsersActions, UsersMutations } from '@/users/UsersStore'\n\nexport default {\n  name: 'AddressForm',\n  props: {\n    memberId: Number\n  },\n  data() {\n    return {\n      address: {\n        id: null,\n        name: null,\n        street: null,\n        city: null,\n        province: null,\n        country: null,\n        postalCode: null,\n        street2: null\n      },\n      loading: false,\n      valid: false\n    }\n  },\n  async mounted() {\n    const address = await this.getAddress(this.memberId)\n    this.address = { ...address }\n  },\n  methods: {\n    ...mapActions({ getAddress: UsersActions.GET_ADDRESS }),\n    ...mapMutations({ updateAddress: UsersMutations.UPDATE_ADDRESS }),\n    async save() {\n      if (this.$refs.form.validate()) {\n        try {\n          this.loading = true\n          await this.updateAddress({\n            id: this.address.id,\n            name: this.address.name,\n            street: this.address.street,\n            city: this.address.city,\n            province: this.address.province,\n            country: this.address.country,\n            postalCode: this.address.postalCode,\n            street2: this.address.street2 || '',\n            memberId: this.memberId\n          })\n          this.loading = false\n        } catch (e) {\n          console.error({ e })\n          this.loading = false\n        }\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}