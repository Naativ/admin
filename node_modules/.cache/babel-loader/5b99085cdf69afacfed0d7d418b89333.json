{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/graphql/GetTeam.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/graphql/GetTeam.js","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ImmediateTeamByMemberId(\\n    $sponsor: MemberSearchCondition!\\n    $target: MemberSearchCondition!\\n    $children: MemberSearchCondition!\\n  ) {\\n    sponsor: members(condition: $sponsor) {\\n      nodes {\\n        memberId: id\\n        tenantId\\n        name\\n        displayName\\n        firstName\\n        lastName\\n        mrn\\n        slug\\n        email: contactEmail\\n        profileUrl\\n        claimedOn\\n        joinedOn\\n        timezoneId\\n        languageId\\n        legalLocaleId\\n      }\\n    }\\n    target: members(condition: $target) {\\n      nodes {\\n        memberId: id\\n        tenantId\\n        name\\n        displayName\\n        firstName\\n        lastName\\n        mrn\\n        slug\\n        email: contactEmail\\n        profileUrl\\n        claimedOn\\n        joinedOn\\n        timezoneId\\n        languageId\\n        legalLocaleId\\n      }\\n    }\\n    children: members(condition: $children) {\\n      nodes {\\n        memberId: id\\n        tenantId\\n        name\\n        displayName\\n        mrn\\n        slug\\n        email: contactEmail\\n        profileUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query TeamByMemberId(\\n    $bySponsor: MemberSearchCondition!\\n    $byTarget: MemberSearchCondition!\\n    $limit: Int\\n  ) {\\n    target: members(first: $limit, condition: $byTarget) {\\n      nodes {\\n        memberId: id\\n        tenantId\\n        tenantOid\\n        name\\n        displayName\\n        firstName\\n        lastName\\n        mrn\\n        slug\\n        contacts {\\n          id\\n          memberId\\n          tenantId\\n          emails {\\n            email\\n          }\\n        }\\n        profileUrl\\n        claimedOn\\n        joinedOn\\n        timezoneId\\n        languageId\\n        legalLocaleId\\n      }\\n    }\\n    team: members(first: $limit, condition: $bySponsor) {\\n      nodes {\\n        memberId: id\\n        tenantId\\n        tenantOid\\n        name\\n        displayName\\n        mrn\\n        slug\\n        contacts {\\n          id\\n          memberId\\n          tenantId\\n          emails {\\n            email\\n          }\\n        }\\n        profileUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { get } from 'lodash';\nexport var OLD_QUERY = gql(_templateObject());\nexport var getTeamByMemberId = function getTeamByMemberId(memberIdfn, tenantId, limit) {\n  return {\n    query: OLD_QUERY,\n    variables: function variables() {\n      var memberId = parseInt(this[memberIdfn]) || null;\n      return {\n        byTarget: {\n          ids: [memberId]\n        },\n        bySponsor: {\n          sponsorIds: [memberId]\n        },\n        limit: limit\n      };\n    },\n    update: function update(_ref) {\n      var target = _ref.target,\n          team = _ref.team;\n      var info = {\n        target: this[memberIdfn] ? target.nodes[0] : null,\n        team: team && team.nodes\n      };\n      return info;\n    },\n    skip: function skip() {\n      return tenantId === undefined;\n    }\n  };\n}; // not sure wtf is up with the old code. but i was dumb when I wrote it\n\nexport var NEW_QUERY = gql(_templateObject2());\nexport var getImmediateTeamByMemberId = function getImmediateTeamByMemberId(memberId, sponsorOid, tenantId) {\n  return {\n    query: NEW_QUERY,\n    variables: {\n      sponsor: {\n        tenantOids: [sponsorOid]\n      },\n      target: {\n        ids: [memberId]\n      },\n      children: {\n        sponsorIds: [memberId]\n      }\n    },\n    update: function update(_ref2) {\n      var sponsor = _ref2.sponsor,\n          target = _ref2.target,\n          children = _ref2.children;\n      var info = {\n        sponsor: get(sponsor, 'nodes.0'),\n        target: get(target, 'nodes.0'),\n        children: get(children, 'nodes', [])\n      };\n      return info;\n    },\n    skip: function skip() {\n      return tenantId === undefined;\n    }\n  };\n};\nexport default getTeamByMemberId;",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/graphql/GetTeam.js"],"names":["gql","get","OLD_QUERY","getTeamByMemberId","memberIdfn","tenantId","limit","query","variables","memberId","parseInt","byTarget","ids","bySponsor","sponsorIds","update","target","team","info","nodes","skip","undefined","NEW_QUERY","getImmediateTeamByMemberId","sponsorOid","sponsor","tenantOids","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,SAASC,GAAT,QAAoB,QAApB;AAEA,OAAO,IAAMC,YAAYF,GAAZ,mBAAN;AAwDP,OAAO,IAAMG,oBAAoB,SAApBA,iBAAoB,CAACC,UAAD,EAAaC,QAAb,EAAuBC,KAAvB;AAAA,SAAkC;AACjEC,WAAOL,SAD0D;AAEjEM,eAAW,qBAAW;AACpB,UAAMC,WAAWC,SAAS,KAAKN,UAAL,CAAT,KAA8B,IAA/C;AACA,aAAO;AACLO,kBAAU;AACRC,eAAK,CAACH,QAAD;AADG,SADL;AAILI,mBAAW;AACTC,sBAAY,CAACL,QAAD;AADH,SAJN;AAOLH;AAPK,OAAP;AASD,KAbgE;AAcjES,UAdiE,wBAcxC;AAAA,UAAhBC,MAAgB,QAAhBA,MAAgB;AAAA,UAARC,IAAQ,QAARA,IAAQ;AACvB,UAAMC,OAAO;AACXF,gBAAQ,KAAKZ,UAAL,IAAmBY,OAAOG,KAAP,CAAa,CAAb,CAAnB,GAAqC,IADlC;AAEXF,cAAMA,QAAQA,KAAKE;AAFR,OAAb;AAIA,aAAOD,IAAP;AACD,KApBgE;AAqBjEE,QArBiE,kBAqB1D;AACL,aAAOf,aAAagB,SAApB;AACD;AAvBgE,GAAlC;AAAA,CAA1B,C,CA0BP;;AACA,OAAO,IAAMC,YAAYtB,GAAZ,oBAAN;AA2DP,OAAO,IAAMuB,6BAA6B,SAA7BA,0BAA6B,CAACd,QAAD,EAAWe,UAAX,EAAuBnB,QAAvB;AAAA,SAAqC;AAC7EE,WAAOe,SADsE;AAE7Ed,eAAW;AACTiB,eAAS;AACPC,oBAAY,CAACF,UAAD;AADL,OADA;AAITR,cAAQ;AACNJ,aAAK,CAACH,QAAD;AADC,OAJC;AAOTkB,gBAAU;AACRb,oBAAY,CAACL,QAAD;AADJ;AAPD,KAFkE;AAa7EM,UAb6E,yBAavC;AAAA,UAA7BU,OAA6B,SAA7BA,OAA6B;AAAA,UAApBT,MAAoB,SAApBA,MAAoB;AAAA,UAAZW,QAAY,SAAZA,QAAY;AACpC,UAAMT,OAAO;AACXO,iBAASxB,IAAIwB,OAAJ,EAAa,SAAb,CADE;AAEXT,gBAAQf,IAAIe,MAAJ,EAAY,SAAZ,CAFG;AAGXW,kBAAU1B,IAAI0B,QAAJ,EAAc,OAAd,EAAuB,EAAvB;AAHC,OAAb;AAKA,aAAOT,IAAP;AACD,KApB4E;AAqB7EE,QArB6E,kBAqBtE;AACL,aAAOf,aAAagB,SAApB;AACD;AAvB4E,GAArC;AAAA,CAAnC;AA0BP,eAAelB,iBAAf","sourcesContent":["import gql from 'graphql-tag'\n\nimport { get } from 'lodash'\n\nexport const OLD_QUERY = gql`\n  query TeamByMemberId(\n    $bySponsor: MemberSearchCondition!\n    $byTarget: MemberSearchCondition!\n    $limit: Int\n  ) {\n    target: members(first: $limit, condition: $byTarget) {\n      nodes {\n        memberId: id\n        tenantId\n        tenantOid\n        name\n        displayName\n        firstName\n        lastName\n        mrn\n        slug\n        contacts {\n          id\n          memberId\n          tenantId\n          emails {\n            email\n          }\n        }\n        profileUrl\n        claimedOn\n        joinedOn\n        timezoneId\n        languageId\n        legalLocaleId\n      }\n    }\n    team: members(first: $limit, condition: $bySponsor) {\n      nodes {\n        memberId: id\n        tenantId\n        tenantOid\n        name\n        displayName\n        mrn\n        slug\n        contacts {\n          id\n          memberId\n          tenantId\n          emails {\n            email\n          }\n        }\n        profileUrl\n      }\n    }\n  }\n`\n\nexport const getTeamByMemberId = (memberIdfn, tenantId, limit) => ({\n  query: OLD_QUERY,\n  variables: function() {\n    const memberId = parseInt(this[memberIdfn]) || null\n    return {\n      byTarget: {\n        ids: [memberId]\n      },\n      bySponsor: {\n        sponsorIds: [memberId]\n      },\n      limit\n    }\n  },\n  update({ target, team }) {\n    const info = {\n      target: this[memberIdfn] ? target.nodes[0] : null,\n      team: team && team.nodes\n    }\n    return info\n  },\n  skip() {\n    return tenantId === undefined\n  }\n})\n\n// not sure wtf is up with the old code. but i was dumb when I wrote it\nexport const NEW_QUERY = gql`\n  query ImmediateTeamByMemberId(\n    $sponsor: MemberSearchCondition!\n    $target: MemberSearchCondition!\n    $children: MemberSearchCondition!\n  ) {\n    sponsor: members(condition: $sponsor) {\n      nodes {\n        memberId: id\n        tenantId\n        name\n        displayName\n        firstName\n        lastName\n        mrn\n        slug\n        email: contactEmail\n        profileUrl\n        claimedOn\n        joinedOn\n        timezoneId\n        languageId\n        legalLocaleId\n      }\n    }\n    target: members(condition: $target) {\n      nodes {\n        memberId: id\n        tenantId\n        name\n        displayName\n        firstName\n        lastName\n        mrn\n        slug\n        email: contactEmail\n        profileUrl\n        claimedOn\n        joinedOn\n        timezoneId\n        languageId\n        legalLocaleId\n      }\n    }\n    children: members(condition: $children) {\n      nodes {\n        memberId: id\n        tenantId\n        name\n        displayName\n        mrn\n        slug\n        email: contactEmail\n        profileUrl\n      }\n    }\n  }\n`\n\nexport const getImmediateTeamByMemberId = (memberId, sponsorOid, tenantId) => ({\n  query: NEW_QUERY,\n  variables: {\n    sponsor: {\n      tenantOids: [sponsorOid]\n    },\n    target: {\n      ids: [memberId]\n    },\n    children: {\n      sponsorIds: [memberId]\n    }\n  },\n  update({ sponsor, target, children }) {\n    const info = {\n      sponsor: get(sponsor, 'nodes.0'),\n      target: get(target, 'nodes.0'),\n      children: get(children, 'nodes', [])\n    }\n    return info\n  },\n  skip() {\n    return tenantId === undefined\n  }\n})\n\nexport default getTeamByMemberId\n"]}]}