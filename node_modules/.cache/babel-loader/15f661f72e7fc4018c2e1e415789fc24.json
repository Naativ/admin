{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/assets/ViewAll.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/assets/ViewAll.vue","mtime":1559148307000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AssetDialog from '@/content/AssetDialog.vue';\nimport { getAssetVisibility } from '@/content/content.gql.js';\nimport { forEach } from 'lodash';\nimport { mapActions, mapGetters } from 'vuex';\nimport { ContentActions, ContentGetters } from '@/content/ContentStore';\nexport default {\n  components: {\n    AssetDialog: AssetDialog\n  },\n  data: function data() {\n    return {\n      filtered: [],\n      headers: [{\n        text: 'ID',\n        value: 'id',\n        width: '50px'\n      }, {\n        text: 'Name',\n        value: 'name',\n        width: '50px'\n      }, {\n        text: 'Description',\n        value: 'description',\n        width: '75px'\n      }, {\n        text: 'Owner',\n        value: 'owner',\n        width: '150px'\n      }, {\n        text: 'Category',\n        value: 'category',\n        width: '150px'\n      }, {\n        text: 'Visibility ID',\n        value: 'visibilityId',\n        width: '100px'\n      }, {\n        text: 'Tags',\n        value: 'tags'\n      }, {\n        text: 'url',\n        value: 'url'\n      }],\n      loading: true,\n      search: '',\n      selectedAsset: {},\n      showAssetDialog: false,\n      visibilityIds: {},\n      assetSearch: {\n        pageSize: 25,\n        page: 1,\n        anyTags: [],\n        owners: []\n      }\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.goSearchAssets();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: _objectSpread({}, mapActions({\n    refreshLibrary: ContentActions.REFRESH_LIBRARY_ASSETS\n  }), {\n    convert: function convert(id) {\n      return this.visibilityIds[id];\n    },\n    showAsset: function showAsset(asset) {\n      this.showAssetDialog = true;\n      this.selectedAsset = asset;\n    },\n    closeAssetDialog: function closeAssetDialog() {\n      this.showAssetDialog = false;\n      this.selectedAsset = {};\n    },\n    getVisibilityIds: function () {\n      var _getVisibilityIds = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var _ref, data, visibilityArray;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$apollo.query({\n                  query: getAssetVisibility,\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                _ref = _context2.sent;\n                data = _ref.data;\n                visibilityArray = data.getAssetVisibility;\n                forEach(visibilityArray, function (_) {\n                  _this.visibilityIds[_.id] = _.name;\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getVisibilityIds() {\n        return _getVisibilityIds.apply(this, arguments);\n      }\n\n      return getVisibilityIds;\n    }(),\n    goSearchAssets: function () {\n      var _goSearchAssets = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var anyTags;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                anyTags = this.assetSearch.anyTags;\n                this.loading = true;\n                this.assetSearch.owners = this.assetSearch.owners.map(function (v) {\n                  return ~~v;\n                });\n\n                if (anyTags.length) {\n                  anyTags = anyTags.map(function (assMap) {\n                    return assMap.id;\n                  });\n                }\n\n                _context3.next = 6;\n                return this.refreshLibrary(_objectSpread({}, this.assetSearch, {\n                  anyTags: anyTags\n                }));\n\n              case 6:\n                _context3.next = 8;\n                return this.getVisibilityIds();\n\n              case 8:\n                this.loading = false;\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function goSearchAssets() {\n        return _goSearchAssets.apply(this, arguments);\n      }\n\n      return goSearchAssets;\n    }()\n  }),\n  computed: _objectSpread({}, mapGetters({\n    library: ContentGetters.libraryAssets,\n    assetMeta: ContentGetters.assetMeta\n  })),\n  watch: {\n    'assetSearch.page': function assetSearchPage(newVal, oldVal) {\n      this.goSearchAssets();\n    }\n  }\n};",{"version":3,"sources":["ViewAll.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <AssetDialog\n      :showAssetDialog=\"showAssetDialog\"\n      :asset=\"this.selectedAsset\"\n      @closeAssetDialog=\"closeAssetDialog\"\n    />\n    <v-form>\n      <v-layout row just-space-around align-center>\n        <!-- <v-combobox\n          v-model=\"assetSearch.owners\"\n          hide-selected\n          label=\"Search by Owner\"\n          multiple\n          small-chips\n          solo\n        ></v-combobox> -->\n        <v-combobox\n          solo\n          label=\"Search Assets By Tag\"\n          v-model=\"assetSearch.anyTags\"\n          item-text=\"name\"\n          item-value=\"id\"\n          :items=\"assetMeta.allTags\"\n          chips\n          multiple\n        />\n        <v-btn @click=\"goSearchAssets\">Search</v-btn>\n      </v-layout>\n    </v-form>\n    <div class=\"text-xs-center\">\n      <v-pagination v-model=\"assetSearch.page\" :length=\"library.totalPages\" :total-visible=\"7\"></v-pagination>\n    </div>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"library.assets\"\n      :expand=\"true\"\n      :hide-actions=\"true\"\n      :loading=\"loading\"\n    >\n      <v-progress-linear slot=\"progress\" color=\"blue\" indeterminate></v-progress-linear>\n      <template slot=\"items\" slot-scope=\"props\">\n        <td>{{ props.item.id }}</td>\n        <td>\n          <a slot=\"activator\" @click=\"showAsset(props.item)\">\n            {{ props.item.name }}\n          </a>\n        </td>\n        <td>{{ props.item.description }}</td>\n        <td>{{ props.item.owner.displayName }}</td>\n        <td>{{ props.item.categoryKey }}</td>\n        <td>{{ convert(props.item.visibilityId) }}</td>\n        <td>\n          <ul v-for=\"p in props.item.tags\" :key=p.id>\n            <li>{{ p.name }}</li>\n          </ul>\n        </td>\n        <td>{{ props.item.url }}</td>\n      </template>\n    </v-data-table>\n    <div class=\"text-xs-center\">\n      <v-pagination v-model=\"assetSearch.page\" :length=\"library.totalPages\" :total-visible=\"7\"></v-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AssetDialog from '@/content/AssetDialog.vue'\n\nimport { getAssetVisibility } from '@/content/content.gql.js'\nimport { forEach } from 'lodash'\nimport { mapActions, mapGetters } from 'vuex'\nimport { ContentActions, ContentGetters } from '@/content/ContentStore'\n\nexport default {\n  components: {\n    AssetDialog\n  },\n  data() {\n    return {\n      filtered: [],\n      headers: [\n        { text: 'ID', value: 'id', width: '50px' },\n        { text: 'Name', value: 'name', width: '50px' },\n        { text: 'Description', value: 'description', width: '75px' },\n        { text: 'Owner', value: 'owner', width: '150px' },\n        { text: 'Category', value: 'category', width: '150px' },\n        { text: 'Visibility ID', value: 'visibilityId', width: '100px' },\n        { text: 'Tags', value: 'tags' },\n        { text: 'url', value: 'url' }\n      ],\n      loading: true,\n      search: '',\n      selectedAsset: {},\n      showAssetDialog: false,\n      visibilityIds: {},\n      assetSearch: {\n        pageSize: 25,\n        page: 1,\n        anyTags: [],\n        owners: []\n      }\n    }\n  },\n  async mounted() {\n    this.goSearchAssets()\n  },\n  methods: {\n    ...mapActions({\n      refreshLibrary: ContentActions.REFRESH_LIBRARY_ASSETS\n    }),\n    convert(id) {\n      return this.visibilityIds[id]\n    },\n    showAsset(asset) {\n      this.showAssetDialog = true\n      this.selectedAsset = asset\n    },\n    closeAssetDialog() {\n      this.showAssetDialog = false\n      this.selectedAsset = {}\n    },\n    async getVisibilityIds() {\n      const { data } = await this.$apollo.query({\n        query: getAssetVisibility,\n        fetchPolicy: 'network-only'\n      })\n      const visibilityArray = data.getAssetVisibility\n      forEach(visibilityArray, _ => {\n        this.visibilityIds[_.id] = _.name\n      })\n    },\n    async goSearchAssets() {\n      let { anyTags } = this.assetSearch\n      this.loading = true\n      this.assetSearch.owners = this.assetSearch.owners.map(v => ~~v)\n      if (anyTags.length) {\n        anyTags = anyTags.map(assMap => {\n          return assMap.id\n        })\n      }\n      await this.refreshLibrary({ ...this.assetSearch, anyTags })\n      await this.getVisibilityIds()\n      this.loading = false\n    }\n  },\n  computed: {\n    ...mapGetters({\n      library: ContentGetters.libraryAssets,\n      assetMeta: ContentGetters.assetMeta\n    })\n  },\n  watch: {\n    'assetSearch.page'(newVal, oldVal) {\n      this.goSearchAssets()\n    }\n  }\n}\n</script>\n\n<style>\n.search-box {\n  width: 90%;\n  justify-content: center;\n}\n</style>\n"],"sourceRoot":"src/views/assets"}]}