{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/users/UserAttributes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/users/UserAttributes.vue","mtime":1581353753564},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueJsonPretty from 'vue-json-pretty';\nimport { getMemberAttribute, removeMemberAttribute, upsertMemberAttribute, queryDurations, removeDuration as _removeDuration, addDuration } from '@/users/users.gql';\nimport { pathOr } from 'ramda';\nimport { cloneDeep } from 'lodash';\nexport default {\n  data: function data() {\n    return {\n      editing: false,\n      attributes: [],\n      removalKey: null,\n      showConfirmationDialog: false,\n      durations: [],\n      newDuration: '',\n      newAmount: '',\n      addingDuration: false,\n      saving: false,\n      rules: [function (v) {\n        return v >= 5 || 'Duration length must be greater than 5 minutes';\n      }]\n    };\n  },\n  components: {\n    VueJsonPretty: VueJsonPretty\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.loadAttributes();\n\n            case 2:\n              _context.next = 4;\n              return this.getDurations();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: {\n    id: function id() {\n      return ~~this.$route.params.id;\n    },\n    locked: function locked() {\n      return this.saving || !this.editing;\n    }\n  },\n  methods: {\n    getDurations: function () {\n      var _getDurations = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$apollo.query({\n                  query: queryDurations,\n                  variables: {\n                    input: {\n                      hostId: this.id,\n                      bookingTypeKey: 'vip-session',\n                      priority: 0\n                    }\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                _ref = _context2.sent;\n                data = _ref.data;\n                this.durations = data.durations[0];\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getDurations() {\n        return _getDurations.apply(this, arguments);\n      }\n\n      return getDurations;\n    }(),\n    saveDuration: function () {\n      var _saveDuration = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.addingDuration = true;\n                _context3.next = 3;\n                return this.$apollo.mutate({\n                  mutation: addDuration,\n                  variables: {\n                    input: {\n                      hostId: this.id,\n                      unitId: 1,\n                      bookingTypeId: 1005,\n                      duration: ~~this.newDuration,\n                      amount: ~~this.newAmount * 100,\n                      priority: 0\n                    }\n                  }\n                });\n\n              case 3:\n                _context3.next = 5;\n                return this.getDurations();\n\n              case 5:\n                this.addingDuration = false;\n                this.newDuration = '';\n                this.newAmount = '';\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveDuration() {\n        return _saveDuration.apply(this, arguments);\n      }\n\n      return saveDuration;\n    }(),\n    getAmount: function getAmount(amount) {\n      var a = amount / 100;\n      return a.toFixed(2);\n    },\n    removeDuration: function () {\n      var _removeDuration2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(duration) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$apollo.mutate({\n                  mutation: _removeDuration,\n                  variables: {\n                    input: {\n                      hostId: this.id,\n                      unitId: 1,\n                      bookingTypeId: 1005,\n                      duration: duration.duration,\n                      amount: duration.amount,\n                      priority: 0\n                    }\n                  }\n                });\n\n              case 2:\n                _context4.next = 4;\n                return this.getDurations();\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function removeDuration(_x) {\n        return _removeDuration2.apply(this, arguments);\n      }\n\n      return removeDuration;\n    }(),\n    loadAttributes: function () {\n      var _loadAttributes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.getAttributes();\n\n              case 2:\n                result = _context5.sent;\n                this.attributes = cloneDeep(result);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function loadAttributes() {\n        return _loadAttributes.apply(this, arguments);\n      }\n\n      return loadAttributes;\n    }(),\n    getAttributes: function () {\n      var _getAttributes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var res, parsedRes;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$apollo.query({\n                  query: getMemberAttribute,\n                  variables: {\n                    input: {\n                      memberId: this.id\n                    }\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                res = _context6.sent;\n                parsedRes = pathOr([], ['data', 'getMemberAttributes'], res);\n                return _context6.abrupt(\"return\", parsedRes);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getAttributes() {\n        return _getAttributes.apply(this, arguments);\n      }\n\n      return getAttributes;\n    }(),\n    removalConfirmation: function removalConfirmation(key) {\n      this.removalKey = key;\n      this.showConfirmationDialog = true;\n    },\n    removeOneAttribute: function () {\n      var _removeOneAttribute = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.saving = true;\n                _context7.next = 3;\n                return this.$apollo.mutate({\n                  mutation: removeMemberAttribute,\n                  variables: {\n                    input: {\n                      memberId: this.id,\n                      key: this.removalKey\n                    }\n                  }\n                });\n\n              case 3:\n                this.saving = false;\n                this.showConfirmationDialog = false;\n                this.loadAttributes();\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function removeOneAttribute() {\n        return _removeOneAttribute.apply(this, arguments);\n      }\n\n      return removeOneAttribute;\n    }(),\n    upsertAttribute: function () {\n      var _upsertAttribute = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(attribute) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$apollo.mutate({\n                  mutation: upsertMemberAttribute,\n                  variables: {\n                    input: {\n                      id: attribute.id,\n                      key: attribute.key,\n                      value: attribute.value\n                    }\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function upsertAttribute(_x2) {\n        return _upsertAttribute.apply(this, arguments);\n      }\n\n      return upsertAttribute;\n    }(),\n    saveData: function () {\n      var _saveData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        var _this = this;\n\n        var promises;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.saving = true;\n                promises = this.attributes.map(function (data) {\n                  return _this.upsertAttribute(data);\n                });\n                _context9.next = 4;\n                return Promise.all(promises);\n\n              case 4:\n                this.editing = false;\n                this.saving = false;\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function saveData() {\n        return _saveData.apply(this, arguments);\n      }\n\n      return saveData;\n    }(),\n    cancelEdit: function () {\n      var _cancelEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10() {\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.editing = false;\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function cancelEdit() {\n        return _cancelEdit.apply(this, arguments);\n      }\n\n      return cancelEdit;\n    }()\n  }\n};",{"version":3,"sources":["UserAttributes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container xs6>\n    <v-layout justify-space-around v-if=\"attributes.length\">\n      <template v-for=\"(data, index) in attributes\">\n        <v-flex class=\"attribute-remove-button-center\" xs12 column wrap :key=\"index\" >\n          <v-card class=\"attribute\">\n            <v-container>\n              <v-card-title class=\"card-title\">{{data.key}}</v-card-title>\n              <vue-json-pretty\n                :data=\"data\"\n                :deep=\"1\"\n                showLength\n              />\n            </v-container>\n          </v-card>\n          <v-btn @click=\"removalConfirmation(attributes[index].key)\">Remove</v-btn>\n        </v-flex>\n      </template>\n    </v-layout>\n    <v-layout justify-space-around v-else-if=\"!$apollo.loading\">\n      <h3>There are no attributes for this member</h3>\n    </v-layout>\n    <v-layout v-if=\"this.$store.state.user.principal.tenantId === 1007\">\n      <v-card class=\"pa-4 my-5\">\n        <v-flex xs12>\n          <div class=\"text-xs-left duration\">Session Length</div>\n          <v-list v-if=\"durations && durations.rates\">\n            <template v-for=\"(data, index) in durations.rates\">\n              <v-list-tile class=\"text-xs-left\" :key=\"index\">\n                <v-flex xs6>\n                  Session Length: {{data.duration}} {{~~data.duration === 1 ? 'minute' : 'minutes'}}\n                </v-flex>\n                <v-flex xs6>\n                  Amount: ${{getAmount(data.amount)}}\n                </v-flex>\n                <v-icon @click=\"removeDuration(data)\">cancel</v-icon>\n              </v-list-tile>\n            </template>\n          </v-list>\n          <v-list v-else>\n            <v-list-tile class=\"text-xs-left\">\n              There are no current session length/amounts defined.\n            </v-list-tile>\n          </v-list>\n          <v-layout v-if=\"addingDuration\" row>\n            <v-text-field\n              class=\"mx-3\"\n              placeholder=\"0\"\n              label=\"Session Length\"\n              suffix=\"minutes\"\n              v-model=\"newDuration\"\n              type=\"number\"\n              :rules=\"rules\"\n            />\n            <v-text-field\n              placeholder=\"0.00\"\n              prefix=\"$\"\n              label=\"Amount\"\n              v-model=\"newAmount\"\n              type=\"number\"\n            />\n          </v-layout>\n          <v-flex right>\n            <v-btn\n              v-if=\"!addingDuration\"\n              class=\"primary text-capitalize\"\n              @click=\"addingDuration = true\"\n            >\n              Add new session length\n            </v-btn>\n            <v-btn\n              v-else\n              :disabled=\"!newAmount || !newDuration\"\n              class=\"primary text-capitalize\"\n              @click=\"saveDuration\"\n            >\n              Save Session Length\n            </v-btn>\n          </v-flex>\n        </v-flex >\n      </v-card>\n    </v-layout>\n    <v-dialog max-width=\"25vw\" v-model=\"showConfirmationDialog\">\n      <v-card>\n        <v-card-text class=\"text-xs-center\">\n          <v-card-text>Are you sure you want to remove this attribute? This cannot be undone!</v-card-text>\n          <v-btn color=\"error\" @click=\"removeOneAttribute()\" :disabled=\"saving\" :loading=\"saving\">Confirm</v-btn>\n          <v-btn color=\"secondary\" @click=\"showConfirmationDialog = false\">Cancel</v-btn>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\n\nimport VueJsonPretty from 'vue-json-pretty'\n\nimport { getMemberAttribute, removeMemberAttribute, upsertMemberAttribute, queryDurations, removeDuration, addDuration } from '@/users/users.gql'\n\nimport { pathOr } from 'ramda'\nimport { cloneDeep } from 'lodash'\n\nexport default {\n  data() {\n    return {\n      editing: false,\n      attributes: [],\n      removalKey: null,\n      showConfirmationDialog: false,\n      durations: [],\n      newDuration: '',\n      newAmount: '',\n      addingDuration: false,\n      saving: false,\n      rules: [\n        v =>\n          (v >= 5) ||\n        'Duration length must be greater than 5 minutes'\n      ]\n    }\n  },\n  components: {\n    VueJsonPretty\n  },\n  async mounted() {\n    await this.loadAttributes()\n    await this.getDurations()\n  },\n  computed: {\n    id() {\n      return ~~this.$route.params.id\n    },\n    locked() {\n      return this.saving || !this.editing\n    }\n  },\n  methods: {\n    async getDurations() {\n      const { data } = await this.$apollo.query({\n        query: queryDurations,\n        variables: { input: { hostId: this.id, bookingTypeKey: 'vip-session', priority: 0 } },\n        fetchPolicy: 'network-only'\n      })\n      this.durations = data.durations[0]\n    },\n    async saveDuration() {\n      this.addingDuration = true\n      await this.$apollo.mutate({\n        mutation: addDuration,\n        variables: { input: {\n          hostId: this.id,\n          unitId: 1,\n          bookingTypeId: 1005,\n          duration: ~~this.newDuration,\n          amount: ~~this.newAmount * 100,\n          priority: 0 } }\n      })\n      await this.getDurations()\n      this.addingDuration = false\n      this.newDuration = ''\n      this.newAmount = ''\n    },\n    getAmount(amount) {\n      const a = amount / 100\n      return a.toFixed(2)\n    },\n    async removeDuration(duration) {\n      await this.$apollo.mutate({\n        mutation: removeDuration,\n        variables: { input: {\n          hostId: this.id,\n          unitId: 1,\n          bookingTypeId: 1005,\n          duration: duration.duration,\n          amount: duration.amount,\n          priority: 0\n        } }\n      })\n      await this.getDurations()\n    },\n    async loadAttributes() {\n      const result = await this.getAttributes()\n      this.attributes = cloneDeep(result)\n    },\n    async getAttributes() {\n      const res = await this.$apollo.query({\n        query: getMemberAttribute,\n        variables: {\n          input: {\n            memberId: this.id\n          }\n        },\n        fetchPolicy: 'network-only'\n      })\n      const parsedRes = pathOr([], ['data', 'getMemberAttributes'], res)\n      return parsedRes\n    },\n    removalConfirmation(key) {\n      this.removalKey = key\n      this.showConfirmationDialog = true\n    },\n    async removeOneAttribute() {\n      this.saving = true\n      await this.$apollo.mutate({\n        mutation: removeMemberAttribute,\n        variables: {\n          input: {\n            memberId: this.id,\n            key: this.removalKey\n          }\n        }\n      })\n      this.saving = false\n      this.showConfirmationDialog = false\n      this.loadAttributes()\n    },\n    async upsertAttribute(attribute) {\n      await this.$apollo.mutate({\n        mutation: upsertMemberAttribute,\n        variables: {\n          input: {\n            id: attribute.id,\n            key: attribute.key,\n            value: attribute.value\n          }\n        }\n      })\n    },\n    async saveData() {\n      this.saving = true\n      const promises = this.attributes.map(data => this.upsertAttribute(data))\n      await Promise.all(promises)\n      this.editing = false\n      this.saving = false\n    },\n    async cancelEdit () {\n      this.editing = false\n    }\n  }\n}\n</script>\n\n<style>\n.duration {\n  min-width: 650px;\n}\n\n.attribute {\n  margin: 20px 10px;\n  text-align: left;\n}\n\n.attribute-remove-button-center {\n  text-align: center;\n}\n\n.text {\n  padding: 0 10px;\n}\n\n.edit-btn {\n  position: absolute !important;\n  top: 50 !important;\n  right: 100px;\n  z-index: 1;\n}\n.edit-speed-dial {\n  top: 88px !important;\n}\n.vjs-value, .vjs-value__string {\n  word-break: break-word;\n}\n.card-title {\n  text-align: center;\n  font-size: 29px;\n  font-weight: 500;\n  margin: auto;\n  width: fit-content;\n  font-variant-caps: small-caps;\n  padding-top: 0;\n}\n</style>\n"],"sourceRoot":"src/views/users"}]}