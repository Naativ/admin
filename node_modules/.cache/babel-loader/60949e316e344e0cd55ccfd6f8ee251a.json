{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/curriculum/CurriculumStore.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/curriculum/CurriculumStore.js","mtime":1554331296000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _actions;\n\nimport * as Curriculum from \"./CurriculumService.js\";\nimport { get } from 'lodash';\nexport var CurriculumActions = {\n  GET_COURSES: 'getCourses',\n  UPSERT_COURSE: 'upsertCourse',\n  GET_BLOCKS: 'getBlocks',\n  UPSERT_BLOCK: 'upsertBlock',\n  UPSERT_UNIT: 'upsertUnit',\n  GET_UNITS: 'getUnits',\n  GET_LESSONS: 'getLessons',\n  GET_LESSONS_BY_ID: 'getLessonsById',\n  UPSERT_LESSON: 'upsertLesson',\n  UPSERT_SLIDE: 'upsertSlide',\n  REMOVE_ASSET_FROM_SLIDE: 'removeAsset',\n  ATTACH_ASSET: 'attachAsset',\n  LESSON_PROGRESSION: 'lessonProgression'\n};\nexport var CurriculumStore = {\n  state: {\n    viewing: []\n  },\n  mutations: {},\n  actions: (_actions = {}, _defineProperty(_actions, CurriculumActions.GET_COURSES, function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, filter) {\n      var commit, state, result, value;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit, state = _ref.state;\n              _context.next = 3;\n              return Curriculum.searchCourse();\n\n            case 3:\n              result = _context.sent;\n              value = get(result, 'data.getCourses', {});\n              return _context.abrupt(\"return\", value);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.GET_UNITS, function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref3, input) {\n      var commit, state, result, value;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit, state = _ref3.state;\n              _context2.next = 3;\n              return Curriculum.getUnits(input);\n\n            case 3:\n              result = _context2.sent;\n              value = get(result, 'data.getUnits', {});\n              return _context2.abrupt(\"return\", value);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.UPSERT_UNIT, function () {\n    var _ref6 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref5, unit) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context3.next = 3;\n              return Curriculum.upsertUnit(unit);\n\n            case 3:\n              result = _context3.sent;\n              return _context3.abrupt(\"return\", result);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.UPSERT_COURSE, function () {\n    var _ref8 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref7, course) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context4.next = 3;\n              return Curriculum.upsertCourse(course);\n\n            case 3:\n              result = _context4.sent;\n              return _context4.abrupt(\"return\", result);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.GET_BLOCKS, function () {\n    var _ref10 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref9, input) {\n      var commit, state, result, value;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref9.commit, state = _ref9.state;\n              _context5.next = 3;\n              return Curriculum.getBlocks(input);\n\n            case 3:\n              result = _context5.sent;\n              value = get(result, 'data.getBlocks', {});\n              return _context5.abrupt(\"return\", value);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref10.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.UPSERT_BLOCK, function () {\n    var _ref12 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(_ref11, block) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref11.commit;\n              _context6.next = 3;\n              return Curriculum.upsertBlock(block);\n\n            case 3:\n              result = _context6.sent;\n              return _context6.abrupt(\"return\", result);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref12.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.GET_LESSONS, function () {\n    var _ref14 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(_ref13, input) {\n      var commit, state, result, value;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref13.commit, state = _ref13.state;\n              _context7.next = 3;\n              return Curriculum.getLessons(input);\n\n            case 3:\n              result = _context7.sent;\n              value = get(result, 'data.getLessons', {});\n              return _context7.abrupt(\"return\", value);\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x13, _x14) {\n      return _ref14.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.GET_LESSONS_BY_ID, function () {\n    var _ref16 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(_ref15, input) {\n      var commit, state, result, value;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref15.commit, state = _ref15.state;\n              _context8.next = 3;\n              return Curriculum.getLessonsById(input);\n\n            case 3:\n              result = _context8.sent;\n              value = get(result, 'data.getLessonById', {});\n              return _context8.abrupt(\"return\", value);\n\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function (_x15, _x16) {\n      return _ref16.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.UPSERT_SLIDE, function () {\n    var _ref18 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(_ref17, slide) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              commit = _ref17.commit;\n              _context9.next = 3;\n              return Curriculum.upsertSlide(slide);\n\n            case 3:\n              result = _context9.sent;\n              return _context9.abrupt(\"return\", result);\n\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function (_x17, _x18) {\n      return _ref18.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.REMOVE_ASSET_FROM_SLIDE, function () {\n    var _ref20 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(_ref19, slide) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              commit = _ref19.commit;\n              _context10.next = 3;\n              return Curriculum.detachAssetFromSlide(slide);\n\n            case 3:\n              result = _context10.sent;\n              return _context10.abrupt(\"return\", result);\n\n            case 5:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x19, _x20) {\n      return _ref20.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.ATTACH_ASSET, function () {\n    var _ref22 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(_ref21, slide) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              commit = _ref21.commit;\n              _context11.next = 3;\n              return Curriculum.attachAssetToSlide(slide);\n\n            case 3:\n              result = _context11.sent;\n              return _context11.abrupt(\"return\", result);\n\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function (_x21, _x22) {\n      return _ref22.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.UPSERT_LESSON, function () {\n    var _ref24 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(_ref23, lesson) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              commit = _ref23.commit;\n              _context12.next = 3;\n              return Curriculum.upsertLesson(lesson);\n\n            case 3:\n              result = _context12.sent;\n              return _context12.abrupt(\"return\", result);\n\n            case 5:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function (_x23, _x24) {\n      return _ref24.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, CurriculumActions.LESSON_PROGRESSION, function () {\n    var _ref26 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee13(_ref25, lesson) {\n      var commit, result, value;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              commit = _ref25.commit;\n              _context13.next = 3;\n              return Curriculum.lessonProgression(lesson);\n\n            case 3:\n              result = _context13.sent;\n              value = get(result, 'data.lessonProgression', {});\n              return _context13.abrupt(\"return\", value);\n\n            case 6:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function (_x25, _x26) {\n      return _ref26.apply(this, arguments);\n    };\n  }()), _actions)\n};",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/curriculum/CurriculumStore.js"],"names":["Curriculum","get","CurriculumActions","GET_COURSES","UPSERT_COURSE","GET_BLOCKS","UPSERT_BLOCK","UPSERT_UNIT","GET_UNITS","GET_LESSONS","GET_LESSONS_BY_ID","UPSERT_LESSON","UPSERT_SLIDE","REMOVE_ASSET_FROM_SLIDE","ATTACH_ASSET","LESSON_PROGRESSION","CurriculumStore","state","viewing","mutations","actions","filter","commit","searchCourse","result","value","input","getUnits","unit","upsertUnit","course","upsertCourse","getBlocks","block","upsertBlock","getLessons","getLessonsById","slide","upsertSlide","detachAssetFromSlide","attachAssetToSlide","lesson","upsertLesson","lessonProgression"],"mappings":"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","sourcesContent":["import * as Curriculum from './CurriculumService.js'\n\nimport { get } from 'lodash'\n\nexport const CurriculumActions = {\n  GET_COURSES: 'getCourses',\n  UPSERT_COURSE: 'upsertCourse',\n  GET_BLOCKS: 'getBlocks',\n  UPSERT_BLOCK: 'upsertBlock',\n  UPSERT_UNIT: 'upsertUnit',\n  GET_UNITS: 'getUnits',\n  GET_LESSONS: 'getLessons',\n  GET_LESSONS_BY_ID: 'getLessonsById',\n  UPSERT_LESSON: 'upsertLesson',\n  UPSERT_SLIDE: 'upsertSlide',\n  REMOVE_ASSET_FROM_SLIDE: 'removeAsset',\n  ATTACH_ASSET: 'attachAsset',\n  LESSON_PROGRESSION: 'lessonProgression'\n}\n\nexport const CurriculumStore = {\n  state: {\n    viewing: []\n  },\n  mutations: {\n\n  },\n  actions: {\n    [CurriculumActions.GET_COURSES]: async ({ commit, state }, filter) => {\n      const result = await Curriculum.searchCourse()\n      const value = get(result, 'data.getCourses', {})\n      return value\n    },\n    [CurriculumActions.GET_UNITS]: async ({ commit, state }, input) => {\n      const result = await Curriculum.getUnits(input)\n      const value = get(result, 'data.getUnits', {})\n      return value\n    },\n    [CurriculumActions.UPSERT_UNIT]: async ({ commit }, unit) => {\n      const result = await Curriculum.upsertUnit(unit)\n      return result\n    },\n    [CurriculumActions.UPSERT_COURSE]: async ({ commit }, course) => {\n      const result = await Curriculum.upsertCourse(course)\n      return result\n    },\n    [CurriculumActions.GET_BLOCKS]: async ({ commit, state }, input) => {\n      const result = await Curriculum.getBlocks(input)\n      const value = get(result, 'data.getBlocks', {})\n      return value\n    },\n    [CurriculumActions.UPSERT_BLOCK]: async ({ commit }, block) => {\n      const result = await Curriculum.upsertBlock(block)\n      return result\n    },\n    [CurriculumActions.GET_LESSONS]: async ({ commit, state }, input) => {\n      const result = await Curriculum.getLessons(input)\n      const value = get(result, 'data.getLessons', {})\n      return value\n    },\n    [CurriculumActions.GET_LESSONS_BY_ID]: async ({ commit, state }, input) => {\n      const result = await Curriculum.getLessonsById(input)\n      const value = get(result, 'data.getLessonById', {})\n      return value\n    },\n    [CurriculumActions.UPSERT_SLIDE]: async ({ commit }, slide) => {\n      const result = await Curriculum.upsertSlide(slide)\n      return result\n    },\n    [CurriculumActions.REMOVE_ASSET_FROM_SLIDE]: async ({ commit }, slide) => {\n      const result = await Curriculum.detachAssetFromSlide(slide)\n      return result\n    },\n    [CurriculumActions.ATTACH_ASSET]: async ({ commit }, slide) => {\n      const result = await Curriculum.attachAssetToSlide(slide)\n      return result\n    },\n    [CurriculumActions.UPSERT_LESSON]: async ({ commit }, lesson) => {\n      const result = await Curriculum.upsertLesson(lesson)\n      return result\n    },\n    [CurriculumActions.LESSON_PROGRESSION]: async ({ commit }, lesson) => {\n      const result = await Curriculum.lessonProgression(lesson)\n      const value = get(result, 'data.lessonProgression', {})\n      return value\n    }\n  }\n}\n"]}]}