{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/stores/FeedStore.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/stores/FeedStore.js","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations;\n\nimport { feed } from '@/api/feeds';\nexport var FeedActions = {\n  JOB_ACTION: 'jobActions'\n};\nexport var FeedMutations = {\n  JOB_ACTION_LOADING: 'jobLoading',\n  JOB_ACTION_ERROR: 'jobError'\n};\nexport var FeedStore = {\n  state: {\n    loading: false,\n    error: ''\n  },\n  mutations: (_mutations = {}, _defineProperty(_mutations, FeedMutations.JOB_ACTION_ERROR, function (state, error) {\n    state.error = error;\n  }), _defineProperty(_mutations, FeedMutations.JOB_ACTION_LOADING, function (state, loading) {\n    state.loading = loading;\n  }), _mutations),\n  actions: _defineProperty({}, FeedActions.JOB_ACTION, function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var state, commit, id, action;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              state = _ref.state, commit = _ref.commit;\n              id = _ref2.id, action = _ref2.action;\n              _context.prev = 2;\n              commit(FeedMutations.JOB_ACTION_LOADING, true);\n              _context.next = 6;\n              return feed.action(id, action, state.user.principal.tenantId);\n\n            case 6:\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              commit(FeedMutations.JOB_ACTION_ERROR, _context.t0);\n\n            case 11:\n              commit(FeedMutations.JOB_ACTION_LOADING, false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }()),\n  getters: {}\n};",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/stores/FeedStore.js"],"names":["feed","FeedActions","JOB_ACTION","FeedMutations","JOB_ACTION_LOADING","JOB_ACTION_ERROR","FeedStore","state","loading","error","mutations","actions","commit","id","action","user","principal","tenantId","getters"],"mappings":";;;;;;AAAA,SAASA,IAAT,QAAqB,aAArB;AAEA,OAAO,IAAMC,cAAc;AACzBC,cAAY;AADa,CAApB;AAIP,OAAO,IAAMC,gBAAgB;AAC3BC,sBAAoB,YADO;AAE3BC,oBAAkB;AAFS,CAAtB;AAKP,OAAO,IAAMC,YAAY;AACvBC,SAAO;AACLC,aAAS,KADJ;AAELC,WAAO;AAFF,GADgB;AAKvBC,2DACGP,cAAcE,gBADjB,YACmCE,KADnC,EAC0CE,KAD1C,EACiD;AAC7CF,UAAME,KAAN,GAAcA,KAAd;AACD,GAHH,+BAIGN,cAAcC,kBAJjB,YAIqCG,KAJrC,EAI4CC,OAJ5C,EAIqD;AACjDD,UAAMC,OAAN,GAAgBA,OAAhB;AACD,GANH,cALuB;AAavBG,+BACGV,YAAYC,UADf;AAAA;AAAA;AAAA,4BAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASK,mBAAT,QAASA,KAAT,EAAgBK,MAAhB,QAAgBA,MAAhB;AAA4BC,gBAA5B,SAA4BA,EAA5B,EAAgCC,MAAhC,SAAgCA,MAAhC;AAAA;AAEtBF,qBAAOT,cAAcC,kBAArB,EAAyC,IAAzC;AAFsB;AAAA,qBAGhBJ,KAAKc,MAAL,CAAYD,EAAZ,EAAgBC,MAAhB,EAAwBP,MAAMQ,IAAN,CAAWC,SAAX,CAAqBC,QAA7C,CAHgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKtBL,qBAAOT,cAAcE,gBAArB;;AALsB;AAOxBO,qBAAOT,cAAcC,kBAArB,EAAyC,KAAzC;;AAPwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD5B;;AAAA;AAAA;AAAA;AAAA,MAbuB;AAwBvBc,WAAS;AAxBc,CAAlB","sourcesContent":["import { feed } from '@/api/feeds'\n\nexport const FeedActions = {\n  JOB_ACTION: 'jobActions'\n}\n\nexport const FeedMutations = {\n  JOB_ACTION_LOADING: 'jobLoading',\n  JOB_ACTION_ERROR: 'jobError'\n}\n\nexport const FeedStore = {\n  state: {\n    loading: false,\n    error: ''\n  },\n  mutations: {\n    [FeedMutations.JOB_ACTION_ERROR](state, error) {\n      state.error = error\n    },\n    [FeedMutations.JOB_ACTION_LOADING](state, loading) {\n      state.loading = loading\n    }\n  },\n  actions: {\n    [FeedActions.JOB_ACTION]: async ({ state, commit }, { id, action }) => {\n      try {\n        commit(FeedMutations.JOB_ACTION_LOADING, true)\n        await feed.action(id, action, state.user.principal.tenantId)\n      } catch (error) {\n        commit(FeedMutations.JOB_ACTION_ERROR, error)\n      }\n      commit(FeedMutations.JOB_ACTION_LOADING, false)\n    }\n  },\n  getters: {}\n}\n"]}]}