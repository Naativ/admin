{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/stores/ClaimStore.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/stores/ClaimStore.js","mtime":1551323450000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _actions;\n\nimport ClaimApi from '@/api/claim';\nexport var ClaimActions = {\n  CLAIM: 'claim',\n  RESET: 'reset'\n};\nexport var ClaimStore = {\n  state: {},\n  mutations: {},\n  actions: (_actions = {}, _defineProperty(_actions, ClaimActions.CLAIM, function (_ref, _ref2) {\n    var state = _ref.state;\n    var memberId = _ref2.memberId,\n        email = _ref2.email,\n        tenantId = _ref2.tenantId;\n    return ClaimApi.create({\n      tenantId: tenantId,\n      memberId: memberId,\n      email: email,\n      type: 'claim'\n    });\n  }), _defineProperty(_actions, ClaimActions.RESET, function (_ref3, _ref4) {\n    var state = _ref3.state;\n    var memberId = _ref4.memberId,\n        email = _ref4.email,\n        tenantId = _ref4.tenantId;\n    return ClaimApi.create({\n      tenantId: tenantId,\n      memberId: memberId,\n      email: email,\n      type: 'reset'\n    });\n  }), _actions),\n  getters: {}\n};",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/stores/ClaimStore.js"],"names":["ClaimApi","ClaimActions","CLAIM","RESET","ClaimStore","state","mutations","actions","memberId","email","tenantId","create","type","getters"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,OAAO,IAAMC,eAAe;AAC1BC,SAAO,OADmB;AAE1BC,SAAO;AAFmB,CAArB;AAKP,OAAO,IAAMC,aAAa;AACxBC,SAAO,EADiB;AAExBC,aAAW,EAFa;AAGxBC,qDACGN,aAAaC,KADhB,EACwB,uBAA8C;AAAA,QAA3CG,KAA2C,QAA3CA,KAA2C;AAAA,QAAhCG,QAAgC,SAAhCA,QAAgC;AAAA,QAAtBC,KAAsB,SAAtBA,KAAsB;AAAA,QAAfC,QAAe,SAAfA,QAAe;AAClE,WAAOV,SAASW,MAAT,CAAgB;AAAED,wBAAF;AAAYF,wBAAZ;AAAsBC,kBAAtB;AAA6BG,YAAM;AAAnC,KAAhB,CAAP;AACD,GAHH,6BAIGX,aAAaE,KAJhB,EAIwB,wBAA8C;AAAA,QAA3CE,KAA2C,SAA3CA,KAA2C;AAAA,QAAhCG,QAAgC,SAAhCA,QAAgC;AAAA,QAAtBC,KAAsB,SAAtBA,KAAsB;AAAA,QAAfC,QAAe,SAAfA,QAAe;AAClE,WAAOV,SAASW,MAAT,CAAgB;AAAED,wBAAF;AAAYF,wBAAZ;AAAsBC,kBAAtB;AAA6BG,YAAM;AAAnC,KAAhB,CAAP;AACD,GANH,YAHwB;AAWxBC,WAAS;AAXe,CAAnB","sourcesContent":["import ClaimApi from '@/api/claim'\n\nexport const ClaimActions = {\n  CLAIM: 'claim',\n  RESET: 'reset'\n}\n\nexport const ClaimStore = {\n  state: {},\n  mutations: {},\n  actions: {\n    [ClaimActions.CLAIM]: ({ state }, { memberId, email, tenantId }) => {\n      return ClaimApi.create({ tenantId, memberId, email, type: 'claim' })\n    },\n    [ClaimActions.RESET]: ({ state }, { memberId, email, tenantId }) => {\n      return ClaimApi.create({ tenantId, memberId, email, type: 'reset' })\n    }\n  },\n  getters: {}\n}\n"]}]}