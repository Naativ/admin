{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/PayoutDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/PayoutDialog.vue","mtime":1574205294000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { createMemberPayout, linkAppointmentToPayout } from '@/users/users.gql';\nexport default {\n  props: {\n    addDialog: {\n      type: Boolean,\n      default: false\n    },\n    integrationId: Number\n  },\n  data: function data() {\n    return {\n      currencyList: ['USD', 'CAD'],\n      statusList: [{\n        value: 'PENDING',\n        text: 'Pending'\n      }, {\n        value: 'APPROVAL_PENDING',\n        text: 'Approval Pending'\n      }, {\n        value: 'PENDING_RELEASE',\n        text: 'Pending Release'\n      }, {\n        value: 'RELEASED',\n        text: 'Released'\n      }],\n      currency: 'USD',\n      status: 'PENDING',\n      amount: '',\n      note: '',\n      appointmentId: null,\n      loading: false\n    };\n  },\n  computed: {\n    show: {\n      get: function get() {\n        return this.addDialog;\n      },\n      set: function set(v) {\n        this.$emit('closeDialog');\n      }\n    },\n    id: function id() {\n      return ~~this.$route.params.id;\n    }\n  },\n  methods: {\n    createPayout: function () {\n      var _createPayout = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.$refs.form.validate()) {\n                  _context.next = 11;\n                  break;\n                }\n\n                this.loading = true;\n                _context.next = 4;\n                return this.$apollo.mutate({\n                  mutation: createMemberPayout,\n                  variables: {\n                    input: {\n                      status: this.status,\n                      currency: this.currency,\n                      amount: parseFloat(this.amount) * 100,\n                      note: this.note,\n                      params: {},\n                      memberId: this.id,\n                      tenantIntegrationId: this.integrationId\n                    }\n                  }\n                });\n\n              case 4:\n                data = _context.sent;\n\n                if (!this.appointmentId) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 8;\n                return this.$apollo.mutate({\n                  mutation: linkAppointmentToPayout,\n                  variables: {\n                    input: {\n                      appointmentId: ~~this.appointmentId,\n                      payoutId: ~~data.data.createPayoutForMember.id\n                    }\n                  }\n                });\n\n              case 8:\n                this.loading = false;\n                this.show = false;\n                this.$emit('submitted');\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createPayout() {\n        return _createPayout.apply(this, arguments);\n      }\n\n      return createPayout;\n    }()\n  }\n};",{"version":3,"sources":["PayoutDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,SAAA,kBAAA,EAAA,uBAAA,QAAA,mBAAA;AAEA,eAAA;AACA,SAAA;AACA,eAAA;AAAA,YAAA,OAAA;AAAA,eAAA;AAAA,KADA;AAEA,mBAAA;AAFA,GADA;AAKA,MALA,kBAKA;AACA,WAAA;AACA,oBAAA,CACA,KADA,EACA,KADA,CADA;AAIA,kBAAA,CACA;AAAA,eAAA,SAAA;AAAA,cAAA;AAAA,OADA,EAEA;AAAA,eAAA,kBAAA;AAAA,cAAA;AAAA,OAFA,EAGA;AAAA,eAAA,iBAAA;AAAA,cAAA;AAAA,OAHA,EAIA;AAAA,eAAA,UAAA;AAAA,cAAA;AAAA,OAJA,CAJA;AAUA,gBAAA,KAVA;AAWA,cAAA,SAXA;AAYA,cAAA,EAZA;AAaA,YAAA,EAbA;AAcA,qBAAA,IAdA;AAeA,eAAA;AAfA,KAAA;AAiBA,GAvBA;AAwBA,YAAA;AACA,UAAA;AACA,SADA,iBACA;AAAA,eAAA,KAAA,SAAA;AAAA,OADA;AAEA,SAFA,eAEA,CAFA,EAEA;AAAA,aAAA,KAAA,CAAA,aAAA;AAAA;AAFA,KADA;AAKA,MALA,gBAKA;AAAA,aAAA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAAA;AALA,GAxBA;AA+BA,WAAA;AACA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAFA;AAAA;AAAA;AAAA;;AAGA,qBAAA,OAAA,GAAA,IAAA;AAHA;AAAA,uBAIA,KAAA,OAAA,CAAA,MAAA,CAAA;AACA,4BAAA,kBADA;AAEA,6BAAA;AACA,2BAAA;AACA,8BAAA,KAAA,MADA;AAEA,gCAAA,KAAA,QAFA;AAGA,8BAAA,WAAA,KAAA,MAAA,IAAA,GAHA;AAIA,4BAAA,KAAA,IAJA;AAKA,8BAAA,EALA;AAMA,gCAAA,KAAA,EANA;AAOA,2CAAA,KAAA;AAPA;AADA;AAFA,iBAAA,CAJA;;AAAA;AAIA,oBAJA;;AAAA,qBAmBA,KAAA,aAnBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAoBA,KAAA,OAAA,CAAA,MAAA,CAAA;AACA,4BAAA,uBADA;AAEA,6BAAA;AACA,2BAAA;AACA,qCAAA,CAAA,CAAA,KAAA,aADA;AAEA,gCAAA,CAAA,CAAA,KAAA,IAAA,CAAA,qBAAA,CAAA;AAFA;AADA;AAFA,iBAAA,CApBA;;AAAA;AA8BA,qBAAA,OAAA,GAAA,KAAA;AACA,qBAAA,IAAA,GAAA,KAAA;AACA,qBAAA,KAAA,CAAA,WAAA;;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA/BA,CAAA","sourcesContent":["<template>\n  <v-dialog v-model=\"show\" max-width=\"768\" persistent>\n      <v-card class=\"dialog\">\n        <v-flex pa-4>\n          <h1>Add Payouts</h1>\n          <v-form ref=\"form\" lazy-validation>\n            <v-layout row>\n              <v-select\n                class=\"currency\"\n                px-2\n                :items=\"currencyList\"\n                label=\"Currency\"\n                v-model=\"currency\"\n              ></v-select>\n              <v-text-field\n                label=\"Amount\"\n                prefix=\"$\"\n                placeholder=\"0.00\"\n                :rules=\"[v => !!v || 'Amount is required!']\"\n                v-model=\"amount\"\n              >\n              </v-text-field>\n            </v-layout>\n            <v-layout column>\n              <v-select\n                class=\"status\"\n                px-2\n                :items=\"statusList\"\n                label=\"Status\"\n                v-model=\"status\"\n              ></v-select>\n            </v-layout>\n            <v-layout column>\n              <v-textarea\n                :auto-grow=\"true\"\n                row-height=\"1\"\n                label=\"Description of Payment\"\n                :rules=\"[v => !!v || 'Discription is required!']\"\n                v-model=\"note\"\n              >\n              </v-textarea>\n            </v-layout>\n            <!-- <v-divider/>\n            <h3>Optional</h3> -->\n            <v-text-field\n              label=\"Enter Appointment ID (Optional)\"\n              v-model=\"appointmentId\"\n            ></v-text-field>\n          </v-form>\n          <v-card-actions>\n            <v-btn\n              flat\n              @click=\"$emit('closeDialog')\"\n            >Close</v-btn>\n            <v-spacer/>\n            <v-btn\n              :loading=\"loading\"\n              flat\n              class=\"primary\"\n              @click=\"createPayout\"\n            >Submit</v-btn>\n          </v-card-actions>\n        </v-flex>\n      </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { createMemberPayout, linkAppointmentToPayout } from '@/users/users.gql'\n\nexport default {\n  props: {\n    addDialog: { type: Boolean, default: false },\n    integrationId: Number\n  },\n  data() {\n    return {\n      currencyList: [\n        'USD', 'CAD'\n      ],\n      statusList: [\n        { value: 'PENDING', text: 'Pending' },\n        { value: 'APPROVAL_PENDING', text: 'Approval Pending' },\n        { value: 'PENDING_RELEASE', text: 'Pending Release' },\n        { value: 'RELEASED', text: 'Released' }\n      ],\n      currency: 'USD',\n      status: 'PENDING',\n      amount: '',\n      note: '',\n      appointmentId: null,\n      loading: false\n    }\n  },\n  computed: {\n    show: {\n      get() { return this.addDialog },\n      set(v) { this.$emit('closeDialog') }\n    },\n    id () { return ~~this.$route.params.id }\n  },\n  methods: {\n    async createPayout() {\n      if (this.$refs.form.validate()) {\n        this.loading = true\n        const data = await this.$apollo.mutate({\n          mutation: createMemberPayout,\n          variables: {\n            input: {\n              status: this.status,\n              currency: this.currency,\n              amount: parseFloat(this.amount) * 100,\n              note: this.note,\n              params: {},\n              memberId: this.id,\n              tenantIntegrationId: this.integrationId\n            }\n          }\n        })\n\n        if (this.appointmentId) {\n          await this.$apollo.mutate({\n            mutation: linkAppointmentToPayout,\n            variables: {\n              input: {\n                appointmentId: ~~this.appointmentId,\n                payoutId: ~~data.data.createPayoutForMember.id\n              }\n            }\n          })\n        }\n        this.loading = false\n        this.show = false\n        this.$emit('submitted')\n      }\n    }\n  }\n\n}\n</script>\n\n<style>\n.dialog {\n  padding: 10px;\n}\n.currency {\n  max-width: 100px;\n  margin-right: 20px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}