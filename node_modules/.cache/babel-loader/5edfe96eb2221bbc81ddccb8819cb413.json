{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/members/MemberDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/members/MemberDetails.vue","mtime":1581353753564},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { cloneDeep } from 'lodash';\nimport moment from 'moment';\nimport { mapGetters, mapState } from 'vuex';\nimport MemberCard from \"./MemberCard\";\nimport MemberDetailsCard from \"./MemberDetailsCard\";\nimport MiscDetailsCard from \"./MiscDetailsCard\";\nimport CredentialCard from \"./CredentialCard\";\nimport ContactCard from \"./ContactCard\";\nimport Unwrapper from '@/components/util/Unwrapper';\nimport { StoreGetters } from '@/store';\nimport ChangeSponsorDialog from '@/components/ChangeSponsorDialog';\nimport EditButton from \"./EditButton\";\nimport PrepImpersonate from '@/iam/PrepImpersonate.vue';\nimport { ClaimActions } from '@/stores/ClaimStore';\n\nvar _require = require('@/users/members.gql.js'),\n    MemberDetailsQuery = _require.MemberDetailsQuery,\n    COMP_STATS_QUERY = _require.COMP_STATS_QUERY;\n\nexport default {\n  components: {\n    MemberCard: MemberCard,\n    Unwrapper: Unwrapper,\n    ChangeSponsorDialog: ChangeSponsorDialog,\n    EditButton: EditButton,\n    CredentialCard: CredentialCard,\n    PrepImpersonate: PrepImpersonate,\n    ContactCard: ContactCard,\n    MemberDetailsCard: MemberDetailsCard,\n    MiscDetailsCard: MiscDetailsCard\n  },\n  data: function data() {\n    return {\n      month: new Date().getMonth() + 1,\n      year: new Date().getFullYear(),\n      showPrepDialog: false,\n      Unwrapper: Unwrapper,\n      memberId: ~~this.$route.params.id,\n      member: null,\n      // the untainted data\n      defaultMember: {},\n      model: null,\n      // the working copy for this view\n      sponsorChange: {\n        show: false\n      },\n      snackbar: {\n        show: false,\n        message: undefined,\n        mandatory: false\n      }\n    };\n  },\n  methods: {\n    resendPasswordReset: function () {\n      var _resendPasswordReset = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this$model, memberId, tenantId, username;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$model = this.model, memberId = _this$model.id, tenantId = _this$model.tenantId;\n                username = this.model.credentials[0].username;\n                _context.prev = 2;\n                _context.next = 5;\n                return this.$store.dispatch(ClaimActions.RESET, {\n                  memberId: memberId,\n                  tenantId: tenantId,\n                  email: username\n                });\n\n              case 5:\n                this.snackbar = {\n                  show: true,\n                  message: \"Password reset email sent to \".concat(username),\n                  mandatory: undefined\n                };\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                this.snackbar = {\n                  show: true,\n                  message: _context.t0.message,\n                  mandatory: undefined\n                };\n                throw new Error('Password reset error');\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 8]]);\n      }));\n\n      function resendPasswordReset() {\n        return _resendPasswordReset.apply(this, arguments);\n      }\n\n      return resendPasswordReset;\n    }(),\n    resendClaimEmail: function () {\n      var _resendClaimEmail = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this$model2, memberId, tenantId, username;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$model2 = this.model, memberId = _this$model2.id, tenantId = _this$model2.tenantId;\n                username = this.model.credentials[0].username;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return this.$store.dispatch(ClaimActions.CLAIM, {\n                  memberId: memberId,\n                  tenantId: tenantId,\n                  email: username\n                });\n\n              case 5:\n                this.snackbar = {\n                  show: true,\n                  message: \"Account claim email sent to \".concat(username),\n                  mandatory: undefined\n                };\n                _context2.next = 12;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](2);\n                this.snackbar = {\n                  show: true,\n                  message: _context2.t0.message,\n                  mandatory: undefined\n                };\n                throw new Error('Error resending claim email');\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 8]]);\n      }));\n\n      function resendClaimEmail() {\n        return _resendClaimEmail.apply(this, arguments);\n      }\n\n      return resendClaimEmail;\n    }(),\n    changeSponsor: function () {\n      var _changeSponsor = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.canChangeSponsor) {\n                  this.snackbar = {\n                    message: 'You do not have access to this feature!',\n                    show: true\n                  };\n                }\n\n                this.sponsorChange.show = true;\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function changeSponsor() {\n        return _changeSponsor.apply(this, arguments);\n      }\n\n      return changeSponsor;\n    }(),\n    sponsorChangeClose: function () {\n      var _sponsorChangeClose = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(e) {\n        var message;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                message = e.message;\n                this.sponsorChange.show = false;\n\n                if (!message) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                this.snackbar.message = message;\n                this.snackbar.show = true;\n                _context4.next = 7;\n                return this.$apollo.queries.member.refetch();\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function sponsorChangeClose(_x) {\n        return _sponsorChangeClose.apply(this, arguments);\n      }\n\n      return sponsorChangeClose;\n    }(),\n    handleSnackbarEmit: function handleSnackbarEmit(message) {\n      this.snackbar = {\n        show: true,\n        message: message,\n        mandatory: undefined\n      };\n    },\n    avatarClick: function avatarClick() {// TODO: picture upload handling\n    }\n  },\n  watch: {\n    member: function member(next, prev) {\n      this.model = cloneDeep(next);\n      this.model.birthdate = this.model.birthdate ? moment(this.model.birthdate).format('L') : null;\n      this.defaultMember = {\n        id: 1,\n        member: next,\n        sponsor: next.sponsor,\n        newSponsor: undefined\n      };\n    },\n    '$route': function $route(newRoute) {\n      var id = newRoute.params.id;\n      this.memberId = ~~id;\n    },\n    '$apollo.loading': function $apolloLoading(loading) {\n      switch (loading) {\n        case true:\n          if (!this.$refs.loader) break;\n          this.$refs.loader.$el.style.opacity = 1;\n          break;\n\n        case false:\n          if (!this.$refs.loader) break;\n          this.$refs.loader.$el.style.opacity = 0;\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n  apollo: {\n    member: _objectSpread({}, MemberDetailsQuery, {\n      variables: function variables() {\n        return {\n          memberId: this.memberId\n        };\n      }\n    }),\n    compStats: {\n      query: COMP_STATS_QUERY,\n      variables: function variables() {\n        return {\n          input: {\n            year: this.year,\n            month: this.month,\n            membersIn: [this.memberId]\n          }\n        };\n      },\n      update: function update(_ref) {\n        var results = _ref.compStatsQuery.results;\n        this.compStatsData = results[0];\n        return results[0];\n      }\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    access: function access(state) {\n      return state.access;\n    }\n  }), mapGetters({\n    permissions: StoreGetters.permissions\n  }), {\n    locked: function locked() {\n      return true;\n    },\n    canChangeSponsor: function canChangeSponsor() {\n      return this.permissions.find(function (p) {\n        return p.id === 11 || p.id === 99;\n      });\n    }\n  }),\n  beforeRouteUpdate: function () {\n    var _beforeRouteUpdate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(to, from, next) {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.$apollo.queries.member.refresh();\n\n            case 2:\n              next();\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function beforeRouteUpdate(_x2, _x3, _x4) {\n      return _beforeRouteUpdate.apply(this, arguments);\n    }\n\n    return beforeRouteUpdate;\n  }()\n};",{"version":3,"sources":["MemberDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <ChangeSponsorDialog\n      :showing       =\"sponsorChange.show\"\n      @close         =\"sponsorChangeClose\"\n      :defaultMember =\"defaultMember\"\n    />\n    <PrepImpersonate\n      v-if=\"model && model.credentials\"\n      :credentialId        =\"model.credentials[0].id.toString()\"\n      :showPrepDialog      =\"showPrepDialog\"\n      :memberId            =\"model.id\"\n      :tenantId            =\"model.tenantId\"\n      @closeDialog         =\"showPrepDialog = false\"\n    />\n    <v-snackbar :timeout=\"6000\" :top=\"true\" :right=\"true\" v-model=\"snackbar.show\">\n      <span v-html=\"snackbar.message\" />\n      <v-btn\n        v-if=\"!snackbar.mandatory\"\n        flat\n        color=\"pink\"\n        @click.native=\"snackbar.show = false\"\n      >Close</v-btn>\n    </v-snackbar>\n    <v-card id=\"member-card\" v-if=\"member\">\n      <v-progress-linear\n        :indeterminate =\"$apollo.loading\"\n        ref            =\"loader\"\n        id             =\"loader\"\n      />\n      <v-card-title class=\"member-card-container\" primary-title>\n        <MemberCard\n          :member              =\"member\"\n          :compStats           =\"compStats\"\n          @changeSponsorClick  =\"changeSponsor\"\n          @prepImpersonate     =\"showPrepDialog = true\"\n          @resendPasswordReset =\"resendPasswordReset\"\n          @resendClaimEmail    =\"resendClaimEmail\"\n          @click:avatar        =\"avatarClick\"\n          :linkSponsor         =\"true\"\n        />\n      </v-card-title>\n\n      <div class=\"formatted-fields-container\">\n        <MemberDetailsCard\n          @snackbarEmit=\"handleSnackbarEmit\"\n        />\n      </div>\n      <div class=\"formatted-fields-container\">\n        <MiscDetailsCard\n          @snackbarEmit=\"handleSnackbarEmit\"\n        />\n      </div>\n      <div class=\"formatted-fields-container\">\n        <v-toolbar class=\"indigo darken-1 white--text\">\n          <v-toolbar-title class=\"section-subheader\">Contact Information</v-toolbar-title>\n        </v-toolbar>\n        <v-card>\n          <v-layout row wrap>\n            <ContactCard\n              @snackbarEmit=\"handleSnackbarEmit\"\n            />\n          </v-layout>\n        </v-card>\n      </div>\n      <div class=\"formatted-fields-container\">\n        <CredentialCard\n          @snackbarEmit=\"handleSnackbarEmit\"\n        />\n      </div>\n    </v-card>\n  </div>\n</template>\n\n<script>\n\nimport { cloneDeep } from 'lodash'\nimport moment from 'moment'\nimport { mapGetters, mapState } from 'vuex'\n\nimport MemberCard from './MemberCard'\nimport MemberDetailsCard from './MemberDetailsCard'\nimport MiscDetailsCard from './MiscDetailsCard'\nimport CredentialCard from './CredentialCard'\nimport ContactCard from './ContactCard'\nimport Unwrapper from '@/components/util/Unwrapper'\nimport { StoreGetters } from '@/store'\nimport ChangeSponsorDialog from '@/components/ChangeSponsorDialog'\nimport EditButton from './EditButton'\nimport PrepImpersonate from '@/iam/PrepImpersonate.vue'\nimport { ClaimActions } from '@/stores/ClaimStore'\nconst { MemberDetailsQuery, COMP_STATS_QUERY } = require('@/users/members.gql.js')\n\nexport default {\n  components: {\n    MemberCard,\n    Unwrapper,\n    ChangeSponsorDialog,\n    EditButton,\n    CredentialCard,\n    PrepImpersonate,\n    ContactCard,\n    MemberDetailsCard,\n    MiscDetailsCard\n  },\n  data () {\n    return {\n      month: new Date().getMonth() + 1,\n      year: new Date().getFullYear(),\n      showPrepDialog: false,\n      Unwrapper,\n      memberId: ~~this.$route.params.id,\n      member: null, // the untainted data\n      defaultMember: {},\n      model: null, // the working copy for this view\n      sponsorChange: {\n        show: false\n      },\n      snackbar: {\n        show: false,\n        message: undefined,\n        mandatory: false\n      }\n    }\n  },\n  methods: {\n    async resendPasswordReset() {\n      const { id: memberId, tenantId } = this.model\n      const { username } = this.model.credentials[0]\n      try {\n        await this.$store.dispatch(ClaimActions.RESET, { memberId, tenantId, email: username })\n        this.snackbar = {\n          show: true,\n          message: `Password reset email sent to ${username}`,\n          mandatory: undefined\n        }\n      } catch (error) {\n        this.snackbar = {\n          show: true,\n          message: error.message,\n          mandatory: undefined\n        }\n        throw new Error('Password reset error')\n      }\n    },\n    async resendClaimEmail() {\n      const { id: memberId, tenantId } = this.model\n      const { username } = this.model.credentials[0]\n      try {\n        await this.$store.dispatch(ClaimActions.CLAIM, { memberId, tenantId, email: username })\n        this.snackbar = {\n          show: true,\n          message: `Account claim email sent to ${username}`,\n          mandatory: undefined\n        }\n      } catch (error) {\n        this.snackbar = {\n          show: true,\n          message: error.message,\n          mandatory: undefined\n        }\n        throw new Error('Error resending claim email')\n      }\n    },\n    async changeSponsor () {\n      if (!this.canChangeSponsor) {\n        this.snackbar = {\n          message: 'You do not have access to this feature!',\n          show: true\n        }\n      }\n      this.sponsorChange.show = true\n    },\n    async sponsorChangeClose (e) {\n      const { message } = e\n      this.sponsorChange.show = false\n      if (message) {\n        this.snackbar.message = message\n        this.snackbar.show = true\n        await this.$apollo.queries.member.refetch()\n      }\n    },\n    handleSnackbarEmit(message) {\n      this.snackbar = {\n        show: true,\n        message: message,\n        mandatory: undefined\n      }\n    },\n    avatarClick() {\n      // TODO: picture upload handling\n    }\n  },\n  watch: {\n    member (next, prev) {\n      this.model = cloneDeep(next)\n      this.model.birthdate = this.model.birthdate ? moment(this.model.birthdate).format('L') : null\n      this.defaultMember = {\n        id: 1,\n        member: next,\n        sponsor: next.sponsor,\n        newSponsor: undefined\n      }\n    },\n    '$route'(newRoute) {\n      const { params: { id } } = newRoute\n      this.memberId = ~~id\n    },\n    '$apollo.loading'(loading) {\n      switch (loading) {\n        case true:\n          if (!this.$refs.loader) break\n          this.$refs.loader.$el.style.opacity = 1\n          break\n\n        case false:\n          if (!this.$refs.loader) break\n          this.$refs.loader.$el.style.opacity = 0\n          break\n\n        default:\n          break\n      }\n    }\n  },\n  apollo: {\n    member: {\n      ...MemberDetailsQuery,\n      variables () {\n        return {\n          memberId: this.memberId\n        }\n      }\n    },\n    compStats: {\n      query: COMP_STATS_QUERY,\n      variables() {\n        return {\n          input: {\n            year: this.year,\n            month: this.month,\n            membersIn: [this.memberId]\n          }\n        }\n      },\n      update({ compStatsQuery: { results } }) {\n        this.compStatsData = results[0]\n\n        return results[0]\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      access: state => state.access\n    }),\n    ...mapGetters({\n      permissions: StoreGetters.permissions\n    }),\n    locked () {\n      return true\n    },\n    canChangeSponsor () {\n      return this.permissions.find(p => p.id === 11 || p.id === 99)\n    }\n  },\n  async beforeRouteUpdate (to, from, next) {\n    await this.$apollo.queries.member.refresh()\n    next()\n  }\n}\n</script>\n\n<style scoped>\n  .formatted-fields-container {\n    padding: 0px 155px 0px 101px;\n    margin-bottom: 45px;\n  }\n\n  .justify-center {\n    justify-content: center;\n  }\n\n  .v-subheader * {\n    margin: 0px 2px;\n  }\n\n  .section-subheader {\n    font-size: 18px;\n  }\n\n  #member-card {\n    max-height: calc(100vh - 158px);\n    contain: content;\n    overflow-y: scroll;\n    background-color: #f1f1f1;\n    width: 100%;\n  }\n\n  .details-text {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  #loader {\n    opacity: 0;\n    position: sticky;\n    top: 0px;\n    z-index: 1;\n    transition: opacity 1000ms;\n  }\n\n  .member-card-container {\n    justify-content: center;\n    padding-right: 102px;\n    padding-top: 0px;\n    padding-bottom: 52px;\n  }\n</style>\n"],"sourceRoot":"src/views/members"}]}