{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/courses/EditSlideDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/courses/EditSlideDialog.vue","mtime":1554331296000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport { CurriculumActions } from '@/curriculum/CurriculumStore';\nimport AddAssetDialog from '@/components/courses/AddAssetDialog.vue';\nexport default {\n  components: {\n    AddAssetDialog: AddAssetDialog\n  },\n  props: {\n    editDialog: {\n      type: Boolean,\n      default: false\n    },\n    selected: Object\n  },\n  data: function data() {\n    return {\n      form: {\n        name: '',\n        key: '',\n        description: '',\n        priority: '',\n        unitId: ''\n      },\n      lessonId: ~~this.$route.params.lessonId,\n      showAssetDialog: false,\n      editing: false,\n      saving: false,\n      saveSpeedDial: false,\n      saveActivator: false,\n      tip: '',\n      action: ''\n    };\n  },\n  computed: {\n    show: {\n      get: function get() {\n        return this.editDialog;\n      },\n      set: function set(v) {\n        this.$emit('closeDialog');\n      }\n    },\n    slide: {\n      get: function get() {\n        var slideData = _objectSpread({}, this.selected, {\n          metadata: _objectSpread({}, this.selected.metadata)\n        });\n\n        return slideData;\n      }\n    },\n    tips: {\n      get: function get() {\n        return this.slide.metadata.tips && Array.isArray(this.slide.metadata.tips) ? this.slide.metadata.tips.slice() : [];\n      }\n    },\n    actions: {\n      get: function get() {\n        return this.slide.metadata.actions && Array.isArray(this.slide.metadata.actions) ? this.slide.metadata.actions.slice() : [];\n      }\n    }\n  },\n  methods: _objectSpread({}, mapActions([CurriculumActions.REMOVE_ASSET_FROM_SLIDE, CurriculumActions.ATTACH_ASSET, CurriculumActions.UPSERT_SLIDE]), {\n    removeTip: function removeTip(index) {\n      this.tips.splice(index, 1);\n      this.tip = ' ';\n      this.tip = '';\n    },\n    removeAction: function removeAction(index) {\n      this.actions.splice(index, 1);\n      this.action = ' ';\n      this.action = '';\n    },\n    addTip: function addTip() {\n      this.tips.push(this.tip);\n      this.tip = '';\n    },\n    addAction: function addAction() {\n      this.actions.push(this.action);\n      this.action = '';\n    },\n    cancel: function cancel() {\n      this.$emit('closeSlide', this.form);\n    },\n    addAsset: function addAsset() {\n      this.showAssetDialog = true;\n    },\n    closeDialog: function closeDialog() {\n      this.showAssetDialog = false;\n    },\n    submitAssetForm: function submitAssetForm(val) {\n      this.attachAsset(val);\n      this.showAssetDialog = false;\n      this.$emit('closeSlide');\n    },\n    remove: function remove(assetId) {\n      var input = {\n        slideId: ~~this.slide.id,\n        assetId: assetId\n      };\n      this.removeAsset(input);\n      this.$emit('closeSlide');\n    },\n    cancelEdit: function () {\n      var _cancelEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.editing = false;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function cancelEdit() {\n        return _cancelEdit.apply(this, arguments);\n      }\n\n      return cancelEdit;\n    }(),\n    saveData: function () {\n      var _saveData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.saving = true;\n                this.slide.metadata.tips = this.tips;\n                this.slide.metadata.actions = this.actions;\n                _context2.next = 5;\n                return this.upsertSlide(_objectSpread({}, this.slide, {\n                  lessonId: this.$route.params.lessonId\n                }));\n\n              case 5:\n                this.editing = false;\n                this.saving = false;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function saveData() {\n        return _saveData.apply(this, arguments);\n      }\n\n      return saveData;\n    }()\n  })\n};",{"version":3,"sources":["EditSlideDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,iBAAA,QAAA,8BAAA;AAEA,OAAA,cAAA,MAAA,yCAAA;AAEA,eAAA;AACA,cAAA;AACA;AADA,GADA;AAIA,SAAA;AACA,gBAAA;AAAA,YAAA,OAAA;AAAA,eAAA;AAAA,KADA;AAEA,cAAA;AAFA,GAJA;AAQA,MARA,kBAQA;AACA,WAAA;AACA,YAAA;AACA,cAAA,EADA;AAEA,aAAA,EAFA;AAGA,qBAAA,EAHA;AAIA,kBAAA,EAJA;AAKA,gBAAA;AALA,OADA;AAQA,gBAAA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QARA;AASA,uBAAA,KATA;AAUA,eAAA,KAVA;AAWA,cAAA,KAXA;AAYA,qBAAA,KAZA;AAaA,qBAAA,KAbA;AAcA,WAAA,EAdA;AAeA,cAAA;AAfA,KAAA;AAiBA,GA1BA;AA2BA,YAAA;AACA,UAAA;AACA,SADA,iBACA;AAAA,eAAA,KAAA,UAAA;AAAA,OADA;AAEA,SAFA,eAEA,CAFA,EAEA;AAAA,aAAA,KAAA,CAAA,aAAA;AAAA;AAFA,KADA;AAKA,WAAA;AACA,SADA,iBACA;AACA,YAAA,8BAAA,KAAA,QAAA;AAAA,sCAAA,KAAA,QAAA,CAAA,QAAA;AAAA,UAAA;;AACA,eAAA,SAAA;AACA;AAJA,KALA;AAWA,UAAA;AACA,SADA,iBACA;AACA,eAAA,KAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,MAAA,OAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GACA,KAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,EADA,GACA,EADA;AAEA;AAJA,KAXA;AAiBA,aAAA;AACA,SADA,iBACA;AACA,eAAA,KAAA,KAAA,CAAA,QAAA,CAAA,OAAA,IAAA,MAAA,OAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GACA,KAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,KAAA,EADA,GACA,EADA;AAEA;AAJA;AAjBA,GA3BA;AAmDA,6BACA,WAAA,CACA,kBAAA,uBADA,EAEA,kBAAA,YAFA,EAGA,kBAAA,YAHA,CAAA,CADA;AAKA,aALA,qBAKA,KALA,EAKA;AACA,WAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,WAAA,GAAA,GAAA,GAAA;AACA,WAAA,GAAA,GAAA,EAAA;AACA,KATA;AAUA,gBAVA,wBAUA,KAVA,EAUA;AACA,WAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,WAAA,MAAA,GAAA,GAAA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,KAdA;AAeA,UAfA,oBAeA;AACA,WAAA,IAAA,CAAA,IAAA,CAAA,KAAA,GAAA;AACA,WAAA,GAAA,GAAA,EAAA;AACA,KAlBA;AAmBA,aAnBA,uBAmBA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,KAAA,MAAA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,KAtBA;AAuBA,UAvBA,oBAuBA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,IAAA;AACA,KAzBA;AA0BA,YA1BA,sBA0BA;AACA,WAAA,eAAA,GAAA,IAAA;AACA,KA5BA;AA6BA,eA7BA,yBA6BA;AACA,WAAA,eAAA,GAAA,KAAA;AACA,KA/BA;AAgCA,mBAhCA,2BAgCA,GAhCA,EAgCA;AACA,WAAA,WAAA,CAAA,GAAA;AACA,WAAA,eAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,YAAA;AACA,KApCA;AAqCA,UArCA,kBAqCA,OArCA,EAqCA;AACA,UAAA,QAAA;AAAA,iBAAA,CAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AAAA,iBAAA;AAAA,OAAA;AACA,WAAA,WAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,YAAA;AACA,KAzCA;AA0CA,cA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA,qBAAA,OAAA,GAAA,KAAA;;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6CA,YA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA,qBAAA,MAAA,GAAA,IAAA;AACA,qBAAA,KAAA,CAAA,QAAA,CAAA,IAAA,GAAA,KAAA,IAAA;AACA,qBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,GAAA,KAAA,OAAA;AAhDA;AAAA,uBAiDA,KAAA,WAAA,mBAAA,KAAA,KAAA;AAAA,4BAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAAA,mBAjDA;;AAAA;AAkDA,qBAAA,OAAA,GAAA,KAAA;AACA,qBAAA,MAAA,GAAA,KAAA;;AAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnDA,CAAA","sourcesContent":["<template>\n  <v-dialog v-model=\"show\" max-width=\"768\" persistent>\n      <v-card class=\"course-dialog\">\n        <v-layout column justify-space-around align-center>\n          <h3>Slide Details</h3>\n          <v-btn\n            class=\"edit-btn\"\n            v-if=\"!editing\"\n            absolute\n            dark\n            fab\n            top\n            right\n            color=\"pink\"\n            @click=\"editing = true\"\n          >\n            <v-icon>edit</v-icon>\n          </v-btn>\n          <v-speed-dial\n            absolute\n            dark\n            fab\n            top\n            right\n            color=\"pink\"\n            v-model=\"saveSpeedDial\"\n            direction=\"bottom\"\n            :open-on-hover=\"true\"\n            transition=\"slide-y-transition\"\n            :disabled=\"!saving\"\n            v-else\n            class=\"edit-speed-dial\"\n          >\n            <v-btn\n              slot=\"activator\"\n              v-model=\"saveActivator\"\n              color=\"pink\"\n              dark\n              fab\n            >\n              <v-icon>save</v-icon>\n              <v-icon>close</v-icon>\n            </v-btn>\n            <v-btn\n              fab\n              dark\n              small\n              color=\"green\"\n              @click=\"saveData\"\n            >\n              <v-icon>check</v-icon>\n            </v-btn>\n            <v-btn\n              fab\n              dark\n              small\n              color=\"red\"\n              @click=\"cancelEdit\"\n            >\n              <v-icon>cancel</v-icon>\n            </v-btn>\n          </v-speed-dial>\n          <v-layout row wrap v-if=\"slide\">\n            <template v-for=\"(data, index) in slide\">\n              <v-flex v-if=\"index !== 'assets' && index !== 'metadata' && index !== '__typename'\" xs6 :key=\"index\">\n                <v-text-field\n                  class=\"fields\"\n                  :label=\"index\"\n                  v-model=\"slide[index]\"\n                  required\n                  :box=\"editing\"\n                  :regular=\"!editing\"\n                  :disabled=\"!editing\"\n                ></v-text-field>\n              </v-flex>\n            </template>\n            <v-flex :class=\"{gray: !editing}\" xs6>\n              <h3 v-if=\"tips.length\">Tips</h3>\n              <h3 v-else-if=\"!editing\">Edit to add tips</h3>\n              <v-form @submit.prevent=\"addTip\">\n                <v-layout row>\n                  <v-text-field\n                    v-if=\"editing\"\n                    class=\"fields\"\n                    label=\"Add Tip\"\n                    v-model=\"tip\"\n                    :box=\"editing\"\n                  ></v-text-field>\n                  <v-btn v-if=\"editing\" @click=\"addTip\">Add</v-btn>\n                </v-layout>\n              </v-form>\n              <v-list>\n                <template v-for=\"(item, index) in tips\">\n                  <v-layout class=\"list\" :key=\"index\">\n                    <v-list-tile-content :class=\"{gray: !editing}\">\n                      {{ item }}\n                    </v-list-tile-content>\n                    <v-list-tile-action v-if=\"editing\">\n                      <v-btn icon @click=\"removeTip(index)\">\n                        <v-icon>close</v-icon>\n                      </v-btn>\n                    </v-list-tile-action>\n                  </v-layout>\n                </template>\n              </v-list>\n            </v-flex>\n            <v-flex xs6 :class=\"{gray: !editing}\">\n              <h3 v-if=\"actions.length\">Actions</h3>\n              <h3 v-else-if=\"!editing\">Edit to add actions</h3>\n              <v-form @submit.prevent=\"addAction\">\n              <v-layout row>\n                <v-text-field\n                  v-if=\"editing\"\n                  class=\"fields\"\n                  label=\"Add Action\"\n                  v-model=\"action\"\n                  :box=\"editing\"\n                ></v-text-field>\n                <v-btn v-if=\"editing\" @click=\"addAction\">Add</v-btn>\n              </v-layout>\n              </v-form>\n              <v-list>\n                <template v-for=\"(item, index) in actions\">\n                  <v-layout class=\"list\" :key=\"index\">\n                    <v-list-tile-content :class=\"{gray: !editing}\">\n                      {{ item }}\n                    </v-list-tile-content>\n                    <v-list-tile-action v-if=\"editing\">\n                      <v-btn icon @click=\"removeAction(index)\">\n                        <v-icon>close</v-icon>\n                      </v-btn>\n                    </v-list-tile-action>\n                  </v-layout>\n                </template>\n              </v-list>\n            </v-flex>\n            <template v-for=\"(data, index) in slide.assets\">\n              <v-flex xs12 :key=\"index\">\n                <v-card >\n                  <v-img :src=\"data.url\"></v-img>\n                  <v-card-actions>\n                    <v-btn @click=\"remove(data.id)\">Remove</v-btn>\n                  </v-card-actions>\n                </v-card>\n              </v-flex>\n            </template>\n          </v-layout>\n          <v-layout>\n            <v-btn @click=\"addAsset\">Add Asset</v-btn>\n            <v-btn @click=\"cancel\">Cancel</v-btn>\n          </v-layout>\n        </v-layout>\n      </v-card>\n      <AddAssetDialog\n        :showAssetDialog=\"showAssetDialog\"\n        :slideId=\"slide.id\"\n        @closeDialog=\"closeDialog\"\n        @submitAssetForm=\"submitAssetForm\"\n      />\n  </v-dialog>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { CurriculumActions } from '@/curriculum/CurriculumStore'\n\nimport AddAssetDialog from '@/components/courses/AddAssetDialog.vue'\n\nexport default {\n  components: {\n    AddAssetDialog\n  },\n  props: {\n    editDialog: { type: Boolean, default: false },\n    selected: Object\n  },\n  data() {\n    return {\n      form: {\n        name: '',\n        key: '',\n        description: '',\n        priority: '',\n        unitId: ''\n      },\n      lessonId: ~~this.$route.params.lessonId,\n      showAssetDialog: false,\n      editing: false,\n      saving: false,\n      saveSpeedDial: false,\n      saveActivator: false,\n      tip: '',\n      action: ''\n    }\n  },\n  computed: {\n    show: {\n      get() { return this.editDialog },\n      set(v) { this.$emit('closeDialog') }\n    },\n    slide: {\n      get() {\n        const slideData = { ...this.selected, metadata: { ...this.selected.metadata } }\n        return slideData\n      }\n    },\n    tips: {\n      get() {\n        return this.slide.metadata.tips && Array.isArray(this.slide.metadata.tips)\n          ? this.slide.metadata.tips.slice() : []\n      }\n    },\n    actions: {\n      get() {\n        return this.slide.metadata.actions && Array.isArray(this.slide.metadata.actions)\n          ? this.slide.metadata.actions.slice() : []\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\n      CurriculumActions.REMOVE_ASSET_FROM_SLIDE,\n      CurriculumActions.ATTACH_ASSET,\n      CurriculumActions.UPSERT_SLIDE]),\n    removeTip(index) {\n      this.tips.splice(index, 1)\n      this.tip = ' '\n      this.tip = ''\n    },\n    removeAction(index) {\n      this.actions.splice(index, 1)\n      this.action = ' '\n      this.action = ''\n    },\n    addTip() {\n      this.tips.push(this.tip)\n      this.tip = ''\n    },\n    addAction() {\n      this.actions.push(this.action)\n      this.action = ''\n    },\n    cancel() {\n      this.$emit('closeSlide', this.form)\n    },\n    addAsset() {\n      this.showAssetDialog = true\n    },\n    closeDialog() {\n      this.showAssetDialog = false\n    },\n    submitAssetForm(val) {\n      this.attachAsset(val)\n      this.showAssetDialog = false\n      this.$emit('closeSlide')\n    },\n    remove(assetId) {\n      const input = { slideId: ~~this.slide.id, assetId: assetId }\n      this.removeAsset(input)\n      this.$emit('closeSlide')\n    },\n    async cancelEdit () {\n      this.editing = false\n    },\n    async saveData() {\n      this.saving = true\n      this.slide.metadata.tips = this.tips\n      this.slide.metadata.actions = this.actions\n      await this.upsertSlide({ ...this.slide, lessonId: this.$route.params.lessonId })\n      this.editing = false\n      this.saving = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.course-dialog {\n  padding: 10px;\n}\n\n.dialog-form {\n  width: 100%;\n}\n\n.meta {\n  padding: 10px 20px;\n  color: grey;\n}\n\n.gray {\n  color: rgba(0,0,0,.38)\n}\n\n.list {\n  padding: 0 10px\n}\n\n.asset {\n  max-width: 400px;\n}\n</style>\n"],"sourceRoot":"src/components/courses"}]}