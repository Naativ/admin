{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/members/ContactCardName.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/members/ContactCardName.vue","mtime":1581353753562},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { cloneDeep, get } from 'lodash';\nimport { ContactCardNameGQL, ContactsUpsert } from \"../../users/members.gql\";\nimport EditButton from \"./EditButton\";\nexport default {\n  name: 'ContactCardName',\n  components: {\n    EditButton: EditButton\n  },\n  data: function data() {\n    return {\n      model: null,\n      disabled: true,\n      memberId: ~~this.$route.params.id\n    };\n  },\n  methods: {\n    editClicked: function editClicked() {\n      this.disabled = false;\n    },\n    saveClicked: function () {\n      var _saveClicked = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var memberId, _this$model, id, firstName, lastName, displayName, input;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.disabled = true;\n                memberId = this.memberId;\n                _this$model = this.model, id = _this$model.id, firstName = _this$model.firstName, lastName = _this$model.lastName, displayName = _this$model.displayName;\n                input = {\n                  id: id,\n                  memberId: memberId,\n                  firstName: firstName,\n                  lastName: lastName,\n                  displayName: displayName\n                };\n                _context.prev = 4;\n                _context.next = 7;\n                return this.$apollo.mutate({\n                  mutation: ContactsUpsert,\n                  variables: {\n                    input: input\n                  }\n                });\n\n              case 7:\n                this.$emit('snackbarEmit', 'Contact name saved!');\n                this.$apollo.queries.contact.refetch();\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](4);\n                this.$emit('snackbarEmit', _context.t0.message);\n                throw new Error('Error updating contact name');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 11]]);\n      }));\n\n      function saveClicked() {\n        return _saveClicked.apply(this, arguments);\n      }\n\n      return saveClicked;\n    }(),\n    cancelClicked: function () {\n      var _cancelClicked = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.disabled = true;\n                this.$apollo.queries.contact.refetch();\n                this.initMember(this.contact);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function cancelClicked() {\n        return _cancelClicked.apply(this, arguments);\n      }\n\n      return cancelClicked;\n    }(),\n    initMember: function initMember(contact) {\n      this.model = cloneDeep(contact);\n    }\n  },\n  watch: {\n    contact: function contact(next) {\n      this.initMember(next);\n    },\n    '$route': function $route(newRoute) {\n      var id = newRoute.params.id;\n      this.memberId = ~~id;\n      this.disabled = true;\n    }\n  },\n  apollo: {\n    contact: _objectSpread({}, ContactCardNameGQL, {\n      variables: function variables() {\n        return {\n          memberId: this.memberId\n        };\n      },\n      update: function update(data) {\n        var member = _objectSpread({}, get(data, 'members.nodes.0'));\n\n        var contacts = member.contacts;\n\n        if (contacts && Array.isArray(contacts) && contacts.length < 2) {\n          return contacts[0];\n        }\n\n        return contacts;\n      }\n    })\n  }\n};",{"version":3,"sources":["ContactCardName.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,SAAA,EAAA,GAAA,QAAA,QAAA;AAEA,SAAA,kBAAA,EAAA,cAAA;AACA,OAAA,UAAA;AAEA,eAAA;AACA,QAAA,iBADA;AAEA,cAAA;AACA;AADA,GAFA;AAKA,MALA,kBAKA;AACA,WAAA;AACA,aAAA,IADA;AAEA,gBAAA,IAFA;AAGA,gBAAA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAHA,KAAA;AAKA,GAXA;AAYA,WAAA;AACA,eADA,yBACA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,KAHA;AAIA,eAJA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKA,qBAAA,QAAA,GAAA,IAAA;AAEA,wBAPA,GAOA,IAPA,CAOA,QAPA;AAAA,8BAaA,KAAA,KAbA,EASA,EATA,eASA,EATA,EAUA,SAVA,eAUA,SAVA,EAWA,QAXA,eAWA,QAXA,EAYA,WAZA,eAYA,WAZA;AAcA,qBAdA,GAcA;AACA,wBADA;AAEA,oCAFA;AAGA,sCAHA;AAIA,oCAJA;AAKA;AALA,iBAdA;AAAA;AAAA;AAAA,uBAuBA,KAAA,OAAA,CAAA,MAAA,CAAA;AACA,4BAAA,cADA;AAEA,6BAAA;AACA;AADA;AAFA,iBAAA,CAvBA;;AAAA;AA6BA,qBAAA,KAAA,CAAA,cAAA,EAAA,qBAAA;AACA,qBAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA;AA9BA;AAAA;;AAAA;AAAA;AAAA;AAgCA,qBAAA,KAAA,CAAA,cAAA,EAAA,YAAA,OAAA;AAhCA,sBAiCA,IAAA,KAAA,CAAA,6BAAA,CAjCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCA,iBApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA,qBAAA,QAAA,GAAA,IAAA;AACA,qBAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA;AACA,qBAAA,UAAA,CAAA,KAAA,OAAA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyCA,cAzCA,sBAyCA,OAzCA,EAyCA;AACA,WAAA,KAAA,GAAA,UAAA,OAAA,CAAA;AACA;AA3CA,GAZA;AAyDA,SAAA;AACA,WADA,mBACA,IADA,EACA;AACA,WAAA,UAAA,CAAA,IAAA;AACA,KAHA;AAIA,YAJA,kBAIA,QAJA,EAIA;AAAA,UACA,EADA,GACA,QADA,CACA,MADA,CACA,EADA;AAEA,WAAA,QAAA,GAAA,CAAA,CAAA,EAAA;AACA,WAAA,QAAA,GAAA,IAAA;AACA;AARA,GAzDA;AAmEA,UAAA;AACA,+BACA,kBADA;AAEA,eAFA,uBAEA;AACA,eAAA;AACA,oBAAA,KAAA;AADA,SAAA;AAGA,OANA;AAOA,YAPA,kBAOA,IAPA,EAOA;AACA,YAAA,2BAAA,IAAA,IAAA,EAAA,iBAAA,CAAA,CAAA;;AADA,YAEA,QAFA,GAEA,MAFA,CAEA,QAFA;;AAIA,YAAA,YAAA,MAAA,OAAA,CAAA,QAAA,CAAA,IAAA,SAAA,MAAA,GAAA,CAAA,EAAA;AACA,iBAAA,SAAA,CAAA,CAAA;AACA;;AACA,eAAA,QAAA;AACA;AAfA;AADA;AAnEA,CAAA","sourcesContent":["<template>\n  <span v-if =\"model\">\n    <v-list-tile-sub-title id=\"sub-title\">\n      <h4 class=\"contact-section-heading\">Name</h4>\n      <EditButton\n        :disabled      =\"disabled\"\n        @editClicked   =\"editClicked\"\n        @saveClicked   =\"saveClicked\"\n        @cancelClicked =\"cancelClicked\"\n      />\n    </v-list-tile-sub-title>\n    <v-text-field\n      label        =\"Display Name\"\n      :disabled    =\"disabled\"\n      v-model      =\"model.displayName\"\n    />\n    <v-text-field\n      label        =\"First Name\"\n      :disabled    =\"disabled\"\n      v-model      =\"model.firstName\"\n    />\n    <v-text-field\n      label        =\"Last Name\"\n      :disabled    =\"disabled\"\n      v-model      =\"model.lastName\"\n    />\n  </span>\n</template>\n\n<script>\nimport { cloneDeep, get } from 'lodash'\n\nimport { ContactCardNameGQL, ContactsUpsert } from '../../users/members.gql'\nimport EditButton from './EditButton'\n\nexport default {\n  name: 'ContactCardName',\n  components: {\n    EditButton\n  },\n  data () {\n    return {\n      model: null,\n      disabled: true,\n      memberId: ~~this.$route.params.id\n    }\n  },\n  methods: {\n    editClicked () {\n      this.disabled = false\n    },\n    async saveClicked() {\n      this.disabled = true\n\n      const { memberId } = this\n      const {\n        id,\n        firstName,\n        lastName,\n        displayName\n      } = this.model\n      const input = {\n        id,\n        memberId,\n        firstName,\n        lastName,\n        displayName\n      }\n\n      try {\n        await this.$apollo.mutate({\n          mutation: ContactsUpsert,\n          variables: {\n            input\n          }\n        })\n        this.$emit('snackbarEmit', 'Contact name saved!')\n        this.$apollo.queries.contact.refetch()\n      } catch (error) {\n        this.$emit('snackbarEmit', error.message)\n        throw new Error('Error updating contact name')\n      }\n    },\n    async cancelClicked () {\n      this.disabled = true\n      this.$apollo.queries.contact.refetch()\n      this.initMember(this.contact)\n    },\n    initMember(contact) {\n      this.model = cloneDeep(contact)\n    }\n  },\n  watch: {\n    contact (next) {\n      this.initMember(next)\n    },\n    '$route'(newRoute) {\n      const { params: { id } } = newRoute\n      this.memberId = ~~id\n      this.disabled = true\n    }\n  },\n  apollo: {\n    contact: {\n      ...ContactCardNameGQL,\n      variables() {\n        return {\n          memberId: this.memberId\n        }\n      },\n      update(data) {\n        let member = { ...get(data, 'members.nodes.0') }\n        const { contacts } = member\n\n        if (contacts && Array.isArray(contacts) && contacts.length < 2) {\n          return contacts[0]\n        }\n        return contacts\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.findme {\n  border: 2px solid red;\n}\n.details {\n  text-align: left;\n}\n.addresses {\n  display: flex;\n  flex-direction: column;\n  height: 39vh;\n  flex-wrap: wrap;\n  min-width: 45vw;\n  padding-top: 11px;\n  padding-top: 48px;\n  position: relative;\n}\n#contact-list {\n  width: 100%;\n}\n.address-title {\n  position: absolute;\n  top: 9px;\n}\n.contact-section-heading {\n  display: inline;\n}\n#sub-title {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 9px;\n}\n</style>\n"],"sourceRoot":"src/views/members"}]}