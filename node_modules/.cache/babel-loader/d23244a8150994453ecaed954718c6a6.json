{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/iam/ImpersonatePrompt.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/iam/ImpersonatePrompt.vue","mtime":1577329618149},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { UserActions, UserMutations } from '@/stores/UserStore';\nimport { IMPERSONATE_MUTATION } from '@/impersonation/impersonate.gql.js';\nexport default {\n  name: 'ImpersonatePrompt',\n  data: function data() {\n    return {\n      locked: false,\n      form: {\n        token: this.$route.params.token || '',\n        pin: ''\n      }\n    };\n  },\n  methods: {\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this$form, token, temporaryPin, result, _result$data$iamImper, principal, jwtToken, member, memberId, username, identityId, permissionIds, displayName, tenantId, legacy;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.locked = true;\n                _this$form = this.form, token = _this$form.token, temporaryPin = _this$form.pin;\n                _context.prev = 2;\n                _context.next = 5;\n                return this.$apollo.mutate({\n                  mutation: IMPERSONATE_MUTATION,\n                  variables: {\n                    input: {\n                      token: token,\n                      temporaryPin: temporaryPin\n                    }\n                  }\n                });\n\n              case 5:\n                result = _context.sent;\n                _result$data$iamImper = result.data.iamImpersonate, principal = _result$data$iamImper.principal, jwtToken = _result$data$iamImper.token;\n                member = principal.member, memberId = principal.memberId, username = principal.username, identityId = principal.identityId, permissionIds = principal.permissionIds;\n                displayName = member.displayName, tenantId = member.tenantId;\n                legacy = {\n                  role: 'system_authenticated',\n                  username: username,\n                  identityId: identityId,\n                  memberId: memberId,\n                  permissions: permissionIds,\n                  displayName: displayName,\n                  tenantId: tenantId\n                };\n                this.$store.commit(UserMutations.SET_JWT, jwtToken);\n                _context.next = 13;\n                return this.$store.dispatch(UserActions.LOGIN_SUCCESS, legacy);\n\n              case 13:\n                this.$router.push('/dashboard');\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](2);\n                console.warn(_context.t0);\n                alert('Something went wrong');\n\n              case 20:\n                _context.prev = 20;\n                this.locked = false;\n                return _context.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 16, 20, 23]]);\n      }));\n\n      function onSubmit() {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }\n};",{"version":3,"sources":["ImpersonatePrompt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,WAAA,EAAA,aAAA,QAAA,oBAAA;AAEA,SAAA,oBAAA,QAAA,oCAAA;AAEA,eAAA;AACA,QAAA,mBADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,cAAA,KADA;AAEA,YAAA;AACA,eAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA,IAAA,EADA;AAEA,aAAA;AAFA;AAFA,KAAA;AAOA,GAVA;AAWA,WAAA;AACA,YADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,MAAA,GAAA,IAAA;AAFA,6BAGA,KAAA,IAHA,EAGA,KAHA,cAGA,KAHA,EAGA,YAHA,cAGA,GAHA;AAAA;AAAA;AAAA,uBAKA,KAAA,OAAA,CAAA,MAAA,CAAA;AACA,4BAAA,oBADA;AAEA,6BAAA;AACA,2BAAA;AAAA,kCAAA;AAAA;AAAA;AADA;AAFA,iBAAA,CALA;;AAAA;AAKA,sBALA;AAAA,wCAYA,OAAA,IAAA,CAAA,cAZA,EAYA,SAZA,yBAYA,SAZA,EAYA,QAZA,yBAYA,KAZA;AAcA,sBAdA,GAcA,SAdA,CAcA,MAdA,EAcA,QAdA,GAcA,SAdA,CAcA,QAdA,EAcA,QAdA,GAcA,SAdA,CAcA,QAdA,EAcA,UAdA,GAcA,SAdA,CAcA,UAdA,EAcA,aAdA,GAcA,SAdA,CAcA,aAdA;AAeA,2BAfA,GAeA,MAfA,CAeA,WAfA,EAeA,QAfA,GAeA,MAfA,CAeA,QAfA;AAiBA,sBAjBA,GAiBA;AACA,wBAAA,sBADA;AAEA,oCAFA;AAGA,wCAHA;AAIA,oCAJA;AAKA,+BAAA,aALA;AAMA,0CANA;AAOA;AAPA,iBAjBA;AA2BA,qBAAA,MAAA,CAAA,MAAA,CAAA,cAAA,OAAA,EAAA,QAAA;AA3BA;AAAA,uBA4BA,KAAA,MAAA,CAAA,QAAA,CAAA,YAAA,aAAA,EAAA,MAAA,CA5BA;;AAAA;AA6BA,qBAAA,OAAA,CAAA,IAAA,CAAA,YAAA;AA7BA;AAAA;;AAAA;AAAA;AAAA;AA+BA,wBAAA,IAAA;AACA,sBAAA,sBAAA;;AAhCA;AAAA;AAkCA,qBAAA,MAAA,GAAA,KAAA;AAlCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAXA,CAAA","sourcesContent":["<template>\n  <v-content>\n    <v-form\n      ref=\"login\"\n      @submit.prevent=\"onSubmit()\"\n    >\n      <v-text-field\n        required\n        v-model=\"form.token\"\n        prepend-icon=\"business\"\n        name=\"token\"\n        label=\"One Time Token\"\n      ></v-text-field>\n      <v-text-field\n        required\n        v-model=\"form.pin\"\n        prepend-icon=\"person\"\n        name=\"pin\"\n        label=\"Pin\"\n      ></v-text-field>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          :loading=\"locked\"\n          type=\"submit\"\n          color=\"deep-purple\"\n          dark\n        > Impersonate </v-btn>\n      </v-card-actions>\n    </v-form>\n  </v-content>\n</template>\n\n<script>\nimport { UserActions, UserMutations } from '@/stores/UserStore'\n\nimport { IMPERSONATE_MUTATION } from '@/impersonation/impersonate.gql.js'\n\nexport default {\n  name: 'ImpersonatePrompt',\n  data () {\n    return {\n      locked: false,\n      form: {\n        token: this.$route.params.token || '',\n        pin: ''\n      }\n    }\n  },\n  methods: {\n    async onSubmit () {\n      this.locked = true\n      const { token, pin: temporaryPin } = this.form\n      try {\n        const result = await this.$apollo.mutate({\n          mutation: IMPERSONATE_MUTATION,\n          variables: {\n            input: { token, temporaryPin }\n          }\n        })\n\n        const { principal, token: jwtToken } = result.data.iamImpersonate\n\n        const { member, memberId, username, identityId, permissionIds } = principal\n        const { displayName, tenantId } = member\n\n        const legacy = {\n          role: 'system_authenticated',\n          username,\n          identityId,\n          memberId,\n          permissions: permissionIds,\n          displayName,\n          tenantId\n        }\n\n        this.$store.commit(UserMutations.SET_JWT, jwtToken)\n        await this.$store.dispatch(UserActions.LOGIN_SUCCESS, legacy)\n        this.$router.push('/dashboard')\n      } catch (err) {\n        console.warn(err)\n        alert('Something went wrong')\n      } finally {\n        this.locked = false\n      }\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n.box-card {\n  width: 480px;\n  margin: auto;\n}\n.error {\n  margin: 5px;\n  padding: 10px;\n  text-align: center;\n}\n.logo {\n  width: 100%;\n  max-width: 250px;\n  margin: auto;\n  display: block;\n}\n</style>\n"],"sourceRoot":"src/iam"}]}