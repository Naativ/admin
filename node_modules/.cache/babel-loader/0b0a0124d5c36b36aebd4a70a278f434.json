{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/stores/UserStore.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/stores/UserStore.js","mtime":1554331296000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations, _actions;\n\nimport * as R from 'ramda';\nimport { StoreActions } from '@/store';\nimport * as Mutations from '@/store.mutations'; // import { stat } from 'fs'\n// import { flattenSelections } from 'apollo-utilities'\n\nexport var UserActions = {\n  LOGIN_SUCCESS: 'loginSuccess',\n  LOGOUT: 'logout'\n};\nexport var UserMutations = {\n  SET_JWT: 'setJwt',\n  AUTH_STATUS: 'authStatus',\n  LOGIN_ERROR: 'setLoginError',\n  LOGIN_TOGGLE_LOCK: 'toggleLoginLock',\n  INIT: 'storeInt',\n  SET_PRINCIPAL: 'setPrincipal'\n};\nexport var UserStore = {\n  state: {\n    authorized: false,\n    jwt: null,\n    login: {\n      locked: false,\n      error: null\n    },\n    principal: null\n  },\n  mutations: (_mutations = {}, _defineProperty(_mutations, UserMutations.SET_JWT, function (state, jwt) {\n    return state.jwt = jwt;\n  }), _defineProperty(_mutations, UserMutations.SET_PRINCIPAL, function (state, principal) {\n    return state.principal = principal;\n  }), _defineProperty(_mutations, UserMutations.AUTH_STATUS, function (state, status) {\n    return state.authorized = status;\n  }), _defineProperty(_mutations, UserMutations.LOGIN_ERROR, function (state, err) {\n    return state.login.error = err;\n  }), _defineProperty(_mutations, UserMutations.LOGIN_TOGGLE_LOCK, function (state, val) {\n    return state.login.locked = val === undefined ? !state.login.locked : val;\n  }), _defineProperty(_mutations, Mutations.INIT, function (state) {\n    state.login = {\n      locked: false\n    };\n    return state;\n  }), _mutations),\n  actions: (_actions = {}, _defineProperty(_actions, UserActions.LOGIN_SUCCESS, function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, principal) {\n      var commit, getters, dispatch;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit, getters = _ref.getters, dispatch = _ref.dispatch;\n              commit(UserMutations.LOGIN_ERROR, null);\n              principal.tenantId = principal.tenantId;\n              commit(UserMutations.SET_PRINCIPAL, principal);\n              dispatch(StoreActions.REFRESH_ACCESS);\n\n              if (getters.hasPermission) {\n                commit(UserMutations.AUTH_STATUS, true);\n              } else {\n                commit(UserMutations.LOGIN_ERROR, 'You do not have permissions to access this app.');\n                commit(UserMutations.LOGIN_TOGGLE_LOCK, false);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()), _defineProperty(_actions, UserActions.LOGOUT, function (_ref3) {\n    var commit = _ref3.commit;\n    localStorage.clear();\n  }), _actions),\n  getters: {\n    hasPermission: function hasPermission(state) {\n      var permissions = R.pathOr([], ['principal', 'permissions'], state);\n      return !!permissions.find(function (p) {\n        return p.id === 10;\n      });\n    },\n    getName: function getName(state) {\n      return state && state.principal ? state.principal.username : '';\n    }\n  }\n};",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/stores/UserStore.js"],"names":["R","StoreActions","Mutations","UserActions","LOGIN_SUCCESS","LOGOUT","UserMutations","SET_JWT","AUTH_STATUS","LOGIN_ERROR","LOGIN_TOGGLE_LOCK","INIT","SET_PRINCIPAL","UserStore","state","authorized","jwt","login","locked","error","principal","mutations","status","err","val","undefined","actions","commit","getters","dispatch","tenantId","REFRESH_ACCESS","hasPermission","localStorage","clear","permissions","pathOr","find","p","id","getName","username"],"mappings":"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","sourcesContent":["import * as R from 'ramda'\nimport { StoreActions } from '@/store'\nimport * as Mutations from '@/store.mutations'\n// import { stat } from 'fs'\n// import { flattenSelections } from 'apollo-utilities'\n\nexport const UserActions = {\n  LOGIN_SUCCESS: 'loginSuccess',\n  LOGOUT: 'logout'\n}\n\nexport const UserMutations = {\n  SET_JWT: 'setJwt',\n  AUTH_STATUS: 'authStatus',\n  LOGIN_ERROR: 'setLoginError',\n  LOGIN_TOGGLE_LOCK: 'toggleLoginLock',\n  INIT: 'storeInt',\n  SET_PRINCIPAL: 'setPrincipal'\n}\n\nexport const UserStore = {\n  state: {\n    authorized: false,\n    jwt: null,\n    login: {\n      locked: false,\n      error: null\n    },\n    principal: null\n  },\n  mutations: {\n    [UserMutations.SET_JWT]: (state, jwt) => (state.jwt = jwt),\n    [UserMutations.SET_PRINCIPAL]: (state, principal) =>\n      (state.principal = principal),\n    [UserMutations.AUTH_STATUS]: (state, status) => (state.authorized = status),\n    [UserMutations.LOGIN_ERROR]: (state, err) => (state.login.error = err),\n    [UserMutations.LOGIN_TOGGLE_LOCK]: (state, val) =>\n      (state.login.locked = val === undefined ? !state.login.locked : val),\n    [Mutations.INIT]: state => {\n      state.login = { locked: false }\n      return state\n    }\n  },\n  actions: {\n    [UserActions.LOGIN_SUCCESS]: async (\n      { commit, getters, dispatch },\n      principal\n    ) => {\n      commit(UserMutations.LOGIN_ERROR, null)\n      principal.tenantId = principal.tenantId\n      commit(UserMutations.SET_PRINCIPAL, principal)\n      dispatch(StoreActions.REFRESH_ACCESS)\n\n      if (getters.hasPermission) {\n        commit(UserMutations.AUTH_STATUS, true)\n      } else {\n        commit(\n          UserMutations.LOGIN_ERROR,\n          'You do not have permissions to access this app.'\n        )\n        commit(UserMutations.LOGIN_TOGGLE_LOCK, false)\n      }\n    },\n    [UserActions.LOGOUT]: ({ commit }) => {\n      localStorage.clear()\n    }\n  },\n  getters: {\n    hasPermission: state => {\n      const permissions = R.pathOr([], ['principal', 'permissions'], state)\n      return !!permissions.find(p => {\n        return p.id === 10\n      }\n      )\n    },\n\n    getName: state => {\n      return state && state.principal ? state.principal.username : ''\n    }\n  }\n}\n"]}]}