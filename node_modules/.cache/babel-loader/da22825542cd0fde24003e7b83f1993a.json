{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/Slides.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/Slides.vue","mtime":1550799165000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CREATE_SLIDE from \"../graphql/CreateSlide.gql\"; // import SLIDES_QUERY from '../graphql/SlidesQuery.gql'\n\nexport default {\n  name: 'Slides',\n  data: function data() {\n    return {\n      slideInfo: {\n        name: '',\n        slide: ''\n      }\n    };\n  },\n  methods: {\n    submitSlide: function submitSlide() {\n      this.$apollo.mutate({\n        mutation: CREATE_SLIDE,\n        variables: {\n          slideInput: {\n            name: this.name,\n            slide: this.slide\n          }\n        },\n        update: function update(store, _ref) {\n          var _ref$data = _ref.data,\n              slides = _ref$data.slides,\n              submitSlide = _ref$data.submitSlide;\n          slides.push(submitSlide);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Slides.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,YAAA,mC,CACA;;AACA,eAAA;AACA,QAAA,QADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,iBAAA;AACA,cAAA,EADA;AAEA,eAAA;AAFA;AADA,KAAA;AAMA,GATA;AAUA,WAAA;AACA,eADA,yBACA;AACA,WAAA,OAAA,CAAA,MAAA,CAAA;AACA,kBAAA,YADA;AAEA,mBAAA;AACA,sBAAA;AACA,kBAAA,KAAA,IADA;AAEA,mBAAA,KAAA;AAFA;AADA,SAFA;AAQA,gBAAA,gBAAA,KAAA,QAAA;AAAA,+BAAA,IAAA;AAAA,cAAA,MAAA,aAAA,MAAA;AAAA,cAAA,WAAA,aAAA,WAAA;AACA,iBAAA,IAAA,CAAA,WAAA;AACA;AAVA,OAAA;AAYA;AAdA;AAVA,CAAA","sourcesContent":["<template>\n  <div>\n  <v-container fluid grid-list-md>\n    <v-form>\n    <input type=\"text\" v-model=\"slideInfo.name\" placeholder=\"Slide Name\" shadow required>\n    <v-textarea\n      name=\"input-7-1\"\n      box\n      label=\"HTML Template\"\n      auto-grow\n      v-model=\"slideInfo.slide\"\n    ></v-textarea>\n    </v-form>\n    <v-btn @click=\"submitSlide\">Submit</v-btn>\n  </v-container>\n  <v-footer\n      height=\"auto\"\n      color=\"primary lighten-1\"\n    >\n      <v-layout\n        justify-center\n        row\n        wrap\n      >\n        <v-btn color=\"white\" flat round><a href=\"./curriculum\">Curriculum</a></v-btn>\n        <v-btn color=\"white\" flat round><a href=\"./topic\">Topics</a></v-btn>\n        <v-btn color=\"white\" flat round><a href=\"./block\">Blocks</a></v-btn>\n        <v-btn color=\"white\" flat round><a href=\"./unit\">Units</a></v-btn>\n        <v-btn color=\"white\" flat round><a href=\"./lesson\">Lessons</a></v-btn>\n        <v-btn color=\"white\" flat round><a href=\"./content\">Content</a></v-btn>\n        <v-flex\n          primary\n          lighten-2\n          py-3\n          text-xs-center\n          white--text\n          xs12>\n          </v-flex>\n      </v-layout>\n    </v-footer>\n  </div>\n</template>\n<script>\nimport CREATE_SLIDE from '../graphql/CreateSlide.gql'\n// import SLIDES_QUERY from '../graphql/SlidesQuery.gql'\nexport default {\n  name: 'Slides',\n  data() {\n    return {\n      slideInfo: {\n        name: '',\n        slide: ''\n      }\n    }\n  },\n  methods: {\n    submitSlide() {\n      this.$apollo.mutate({\n        mutation: CREATE_SLIDE,\n        variables: {\n          slideInput: {\n            name: this.name,\n            slide: this.slide\n          }\n        },\n        update: (store, { data: { slides, submitSlide } }) => {\n          slides.push(submitSlide)\n        }\n      })\n    }\n  }\n}\n</script>\n<style scoped>\na {\n  color: white;\n  text-decoration: none;\n}\na:hover {\n  font-weight: bolder;\n}\n</style>\n"],"sourceRoot":"src/views"}]}