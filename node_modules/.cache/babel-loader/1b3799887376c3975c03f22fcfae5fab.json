{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/appointments/AppointmentsFrame.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/appointments/AppointmentsFrame.vue","mtime":1573194803000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as R from 'ramda';\nimport { mapActions, mapState } from 'vuex';\nimport { UsersActions } from '@/users/UsersStore';\nexport default {\n  data: function data() {\n    return {\n      target: undefined\n    };\n  },\n  methods: _objectSpread({}, mapActions({\n    removeAppointment: UsersActions.STOP_VIEWING_APT,\n    getUser: UsersActions.GET_USER\n  }), {\n    closeUser: function closeUser(appointment) {\n      this.removeAppointment(appointment.id);\n      var route = ~~R.pathOr(-1, ['$route', 'params', 'id'], this);\n\n      if (route === appointment.id) {\n        this.$router.push('/appointments/');\n      }\n    },\n    navigateUser: function navigateUser(item) {\n      this.$router.push('/appointments/' + item.id);\n    },\n    navigateSearch: function navigateSearch() {\n      this.$router.push('/appointments/');\n    },\n    nil: function nil() {}\n  }),\n  computed: _objectSpread({}, mapState({\n    viewing: function viewing(state) {\n      return state.users.searchedAppointment;\n    }\n  })),\n  beforeRouteUpdate: function () {\n    var _beforeRouteUpdate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(to, from, next) {\n      var id;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = to.params.id;\n\n              if (!id) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return this.getUser({\n                id: id\n              });\n\n            case 4:\n              this.target = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 7:\n              this.target = undefined;\n\n            case 8:\n              next();\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function beforeRouteUpdate(_x, _x2, _x3) {\n      return _beforeRouteUpdate.apply(this, arguments);\n    }\n\n    return beforeRouteUpdate;\n  }()\n};",{"version":3,"sources":["AppointmentsFrame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAA,KAAA,CAAA,MAAA,OAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AACA,SAAA,YAAA,QAAA,oBAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,cAAA;AADA,KAAA;AAGA,GALA;AAMA,6BACA,WAAA;AACA,uBAAA,aAAA,gBADA;AAEA,aAAA,aAAA;AAFA,GAAA,CADA;AAKA,aALA,qBAKA,WALA,EAKA;AACA,WAAA,iBAAA,CAAA,YAAA,EAAA;AACA,UAAA,QAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA;;AACA,UAAA,UAAA,YAAA,EAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,gBAAA;AACA;AACA,KAXA;AAYA,gBAZA,wBAYA,IAZA,EAYA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,mBAAA,KAAA,EAAA;AACA,KAdA;AAeA,kBAfA,4BAeA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,gBAAA;AACA,KAjBA;AAkBA,OAlBA,iBAkBA,CAAA;AAlBA,IANA;AA0BA,8BACA,SAAA;AACA,aAAA;AAAA,aAAA,MAAA,KAAA,CAAA,mBAAA;AAAA;AADA,GAAA,CADA,CA1BA;AA+BA,mBA/BA;AAAA;AAAA;AAAA,6CA+BA,EA/BA,EA+BA,IA/BA,EA+BA,IA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA,gBAhCA,GAgCA,GAAA,MAhCA,CAgCA,EAhCA;;AAAA,mBAiCA,EAjCA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAkCA,KAAA,OAAA,CAAA;AAAA;AAAA,eAAA,CAlCA;;AAAA;AAkCA,mBAAA,MAlCA;AAAA;AAAA;;AAAA;AAoCA,mBAAA,MAAA,GAAA,SAAA;;AApCA;AAsCA;;AAtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n  <div>\n    <v-layout row wrap>\n      <v-flex xs12 sm4>\n        <v-card>\n          <v-list two-line class=\"mouse-pointer\">\n            <v-list-tile avatar @click=\"navigateSearch()\">\n              <v-list-tile-avatar>\n                <v-btn icon>\n                  <v-icon>search</v-icon>\n                </v-btn>\n              </v-list-tile-avatar>\n\n              <v-list-tile-content>\n                <v-list-tile-title>Search Appointments</v-list-tile-title>\n                <v-list-tile-sub-title>Search Appointments</v-list-tile-sub-title>\n              </v-list-tile-content>\n            </v-list-tile>\n            <template v-for=\"(item, index) in viewing\">\n              <v-subheader v-if=\"item.header\" :key=\"item.header\">{{ item.header }}</v-subheader>\n              <v-divider v-else-if=\"item.divider\" :inset=\"item.inset\" :key=\"index\"></v-divider>\n              <v-list-tile v-else :key=\"item.id\" avatar @click=\"navigateUser(item)\">\n                <v-list-tile-avatar>\n                  <v-btn icon>\n                    <v-icon>calendar_today</v-icon>\n                  </v-btn>\n                </v-list-tile-avatar>\n\n                <v-list-tile-content>\n                  <!-- <v-list-tile-title>{{item.displayName}}</v-list-tile-title> -->\n                  <v-list-tile-title v-if=\"item.appointment\">Apt Id: {{item.appointment.id}} </v-list-tile-title>\n                  <v-list-tile-title v-else-if=\"item.booking\">Booking Id: {{item.booking.id}} </v-list-tile-title>\n                  <v-list-tile-sub-title>\n                    <v-layout row>\n                      <v-flex xs6 v-if=\"item.appointment\">Host: {{item.appointment.host.name}}</v-flex>\n                      <v-flex xs6 v-else-if=\"item.booking\">Host: {{item.booking.host.name}}</v-flex>\n                      <!-- <v-flex xs6>System: {{item.id}}</v-flex> -->\n                    </v-layout>\n                  </v-list-tile-sub-title>\n                </v-list-tile-content>\n\n                <v-list-tile-action @click.stop=\"closeUser(item)\">\n                  <v-icon>close</v-icon>\n                </v-list-tile-action>\n              </v-list-tile>\n            </template>\n          </v-list>\n        </v-card>\n      </v-flex>\n      <v-flex xs12 sm8>\n        <router-view></router-view>\n      </v-flex>\n    </v-layout>\n  </div>\n</template>\n\n<script>\nimport * as R from 'ramda'\nimport { mapActions, mapState } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\n\nexport default {\n  data() {\n    return {\n      target: undefined\n    }\n  },\n  methods: {\n    ...mapActions({\n      removeAppointment: UsersActions.STOP_VIEWING_APT,\n      getUser: UsersActions.GET_USER\n    }),\n    closeUser(appointment) {\n      this.removeAppointment(appointment.id)\n      const route = ~~R.pathOr(-1, ['$route', 'params', 'id'], this)\n      if (route === appointment.id) {\n        this.$router.push('/appointments/')\n      }\n    },\n    navigateUser(item) {\n      this.$router.push('/appointments/' + item.id)\n    },\n    navigateSearch() {\n      this.$router.push('/appointments/')\n    },\n    nil() { }\n  },\n  computed: {\n    ...mapState({\n      viewing: state => state.users.searchedAppointment\n    })\n  },\n  async beforeRouteUpdate(to, from, next) {\n    const { id } = to.params\n    if (id) {\n      this.target = await this.getUser({ id })\n    } else {\n      this.target = undefined\n    }\n    next()\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/appointments"}]}