{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/users/UsersFrame.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/users/UsersFrame.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from 'vuex';\nimport { UsersActions } from '@/users/UsersStore';\nimport UsersWorkbench from \"./UsersWorkbench.vue\";\nimport { TenantsActions } from '@/tenants/TenantsStore';\nexport default {\n  components: {\n    UsersWorkbench: UsersWorkbench\n  },\n  data: function data() {\n    return {\n      drawer: null,\n      valid: true,\n      term: '',\n      tags: [],\n      memberId: null\n    };\n  },\n  mounted: function mounted() {\n    this.searched.results = [];\n    this.parseMemberId();\n    this[TenantsActions.FETCH_MEMBER_TAGS]();\n  },\n  methods: _objectSpread({}, mapActions([UsersActions.FETCH_USERS, TenantsActions.FETCH_MEMBER_TAGS]), {\n    clearSearch: function clearSearch() {\n      this.searched.results = [];\n    },\n    open: function open(user) {\n      this.$router.push('/members/' + user.id);\n      this.searched.results = [];\n    },\n    search: function search() {\n      var term = this.term,\n          tags = this.tags;\n      this.usersFetch({\n        term: term,\n        tags: tags.map(function (e) {\n          return e.name;\n        })\n      });\n    },\n    remove: function remove(item) {\n      this.tags.splice(this.tags.indexOf(item), 1);\n      this.tags = _toConsumableArray(this.tags);\n    },\n    parseMemberId: function parseMemberId(to) {\n      var id = (to || this.$route || {\n        params: {}\n      }).params.id;\n\n      if (id) {\n        this.memberId = ~~id;\n      } else {\n        this.memberId = null;\n      }\n    }\n  }),\n  computed: _objectSpread({}, mapState({\n    searched: function searched(state) {\n      return state.users.searched;\n    },\n    availableTags: function availableTags(state) {\n      return state.tenants.tags;\n    }\n  })),\n  beforeRouteUpdate: function () {\n    var _beforeRouteUpdate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(to, from, next) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.parseMemberId(to);\n              next();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function beforeRouteUpdate(_x, _x2, _x3) {\n      return _beforeRouteUpdate.apply(this, arguments);\n    }\n\n    return beforeRouteUpdate;\n  }()\n};",{"version":3,"sources":["UsersFrame.vue"],"names":[],"mappings":";;;;;;;;;;;AAOA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AACA,SAAA,YAAA,QAAA,oBAAA;AACA,OAAA,cAAA;AACA,SAAA,cAAA,QAAA,wBAAA;AACA,eAAA;AACA,cAAA;AACA;AADA,GADA;AAIA,MAJA,kBAIA;AACA,WAAA;AACA,cAAA,IADA;AAEA,aAAA,IAFA;AAGA,YAAA,EAHA;AAIA,YAAA,EAJA;AAKA,gBAAA;AALA,KAAA;AAOA,GAZA;AAaA,SAbA,qBAaA;AACA,SAAA,QAAA,CAAA,OAAA,GAAA,EAAA;AACA,SAAA,aAAA;AACA,SAAA,eAAA,iBAAA;AACA,GAjBA;AAkBA,6BACA,WAAA,CAAA,aAAA,WAAA,EAAA,eAAA,iBAAA,CAAA,CADA;AAEA,eAFA,yBAEA;AACA,WAAA,QAAA,CAAA,OAAA,GAAA,EAAA;AACA,KAJA;AAKA,QALA,gBAKA,IALA,EAKA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,cAAA,KAAA,EAAA;AACA,WAAA,QAAA,CAAA,OAAA,GAAA,EAAA;AACA,KARA;AASA,UATA,oBASA;AAAA,UACA,IADA,GACA,IADA,CACA,IADA;AAAA,UACA,IADA,GACA,IADA,CACA,IADA;AAEA,WAAA,UAAA,CAAA;AAAA,kBAAA;AAAA,cAAA,KAAA,GAAA,CAAA;AAAA,iBAAA,EAAA,IAAA;AAAA,SAAA;AAAA,OAAA;AACA,KAZA;AAaA,UAbA,kBAaA,IAbA,EAaA;AACA,WAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,WAAA,IAAA,sBAAA,KAAA,IAAA;AACA,KAhBA;AAiBA,iBAjBA,yBAiBA,EAjBA,EAiBA;AAAA,UACA,EADA,GACA,CAAA,MAAA,KAAA,MAAA,IAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,MADA,CACA,EADA;;AAEA,UAAA,EAAA,EAAA;AACA,aAAA,QAAA,GAAA,CAAA,CAAA,EAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,GAAA,IAAA;AACA;AACA;AAxBA,IAlBA;AA4CA,8BACA,SAAA;AACA,cAAA;AAAA,aAAA,MAAA,KAAA,CAAA,QAAA;AAAA,KADA;AAEA,mBAAA;AAAA,aAAA,MAAA,OAAA,CAAA,IAAA;AAAA;AAFA,GAAA,CADA,CA5CA;AAkDA,mBAlDA;AAAA;AAAA;AAAA,6CAkDA,EAlDA,EAkDA,IAlDA,EAkDA,IAlDA;AAAA;AAAA;AAAA;AAAA;AAmDA,mBAAA,aAAA,CAAA,EAAA;AACA;;AApDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n  <UsersWorkbench :memberId=\"memberId\">\n    <router-view />\n  </UsersWorkbench>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\nimport UsersWorkbench from './UsersWorkbench.vue'\nimport { TenantsActions } from '@/tenants/TenantsStore'\nexport default {\n  components: {\n    UsersWorkbench\n  },\n  data () {\n    return {\n      drawer: null,\n      valid: true,\n      term: '',\n      tags: [],\n      memberId: null\n    }\n  },\n  mounted () {\n    this.searched.results = []\n    this.parseMemberId()\n    this[TenantsActions.FETCH_MEMBER_TAGS]()\n  },\n  methods: {\n    ...mapActions([UsersActions.FETCH_USERS, TenantsActions.FETCH_MEMBER_TAGS]),\n    clearSearch () {\n      this.searched.results = []\n    },\n    open (user) {\n      this.$router.push('/members/' + user.id)\n      this.searched.results = []\n    },\n    search () {\n      const { term, tags } = this\n      this.usersFetch({ term, tags: tags.map(e => e.name) })\n    },\n    remove (item) {\n      this.tags.splice(this.tags.indexOf(item), 1)\n      this.tags = [...this.tags]\n    },\n    parseMemberId (to) {\n      const { id } = (to || this.$route || { params: {} }).params\n      if (id) {\n        this.memberId = ~~id\n      } else {\n        this.memberId = null\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      searched: state => state.users.searched,\n      availableTags: state => state.tenants.tags\n    })\n  },\n  async beforeRouteUpdate (to, from, next) {\n    this.parseMemberId(to)\n    next()\n  }\n}\n</script>\n\n<style>\n.results {\n  margin-top: 5px;\n  border-color: black;\n  border-style: solid;\n  position: absolute;\n  z-index: 5;\n  width: 600px !important;\n}\n\n.search {\n  width: 350px;\n}\n\n.text {\n  padding-right: 10px;\n}\n</style>\n"],"sourceRoot":"src/views/users"}]}