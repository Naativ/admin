{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/curriculum/LessonDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/curriculum/LessonDetails.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport { CurriculumActions } from '@/curriculum/CurriculumStore';\nimport { uploadSlideForm } from '@/components/courses/forms';\nimport EditSlideDialog from '@/components/courses/EditSlideDialog.vue';\nimport Sortable from 'sortablejs';\nimport AddDialog from '@/components/courses/AddDialog.vue';\nexport default {\n  components: {\n    AddDialog: AddDialog,\n    EditSlideDialog: EditSlideDialog\n  },\n  data: function data() {\n    return {\n      lessons: {\n        metadata: {}\n      },\n      saveActivator: false,\n      showDialog: false,\n      saveSpeedDial: false,\n      test: undefined,\n      saving: false,\n      editDialog: false,\n      editing: false,\n      headers: [{\n        text: '',\n        sortable: false\n      }, {\n        text: 'Priority',\n        value: 'priority'\n      }, {\n        text: 'ID',\n        value: 'id'\n      }, {\n        text: 'Key',\n        value: 'key'\n      }, {\n        text: 'Name',\n        value: 'name'\n      }, {\n        text: 'Description',\n        value: 'description'\n      }, {\n        text: 'Asset ID',\n        value: 'assets'\n      }],\n      selectedSlide: {},\n      orderChanged: false,\n      loading: false,\n      slideForm: uploadSlideForm,\n      pageLoading: true\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var data, table;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getLessonsById(this.lessonId);\n\n            case 2:\n              data = _context.sent;\n              this.pageLoading = false;\n              this.lessons = _objectSpread({}, data, {\n                metadata: _objectSpread({}, data.metadata)\n              });\n              this.lessons.slides.map(function (l) {\n                return _objectSpread({}, l);\n              }).sort(function (a, b) {\n                return a.priority - b.priority;\n              });\n              table = document.querySelector('.v-datatable tbody');\n              Sortable.create(table, {\n                onEnd: this.updateSlides,\n                handle: '.sortHandle'\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: {\n    courseId: function courseId() {\n      return ~~this.$route.params.courseId ? ~~this.$route.params.courseId : '';\n    },\n    unitId: function unitId() {\n      return ~~this.$route.params.unitId ? ~~this.$route.params.unitId : '';\n    },\n    blockId: function blockId() {\n      return ~~this.$route.params.blockId ? ~~this.$route.params.blockId : '';\n    },\n    lessonId: function lessonId() {\n      return ~~this.$route.params.lessonId ? ~~this.$route.params.lessonId : '';\n    }\n  },\n  methods: _objectSpread({}, mapActions([CurriculumActions.GET_LESSONS_BY_ID, CurriculumActions.UPSERT_SLIDE, CurriculumActions.UPSERT_LESSON]), {\n    saveOrder: function saveOrder() {\n      var _this = this;\n\n      this.loading = true;\n      this.lessons.slides.forEach(function (row, index) {\n        row.lessonId = _this.lessonId;\n\n        _this.upsertSlide(row);\n      });\n      this.loading = false;\n      this.orderChanged = false;\n    },\n    updateSlides: function updateSlides(_ref) {\n      var _this2 = this;\n\n      var newIndex = _ref.newIndex,\n          oldIndex = _ref.oldIndex;\n      this.orderChanged = true;\n      var test = this.lessons.slides.map(function (l) {\n        return _objectSpread({}, l);\n      }).sort(function (a, b) {\n        return a.priority - b.priority;\n      });\n      this.lessons.slides = [];\n      var rowSelected = test.splice(oldIndex, 1)[0];\n      test.splice(newIndex, 0, rowSelected);\n      test.forEach(function (t, index) {\n        t.priority = index;\n        return t;\n      });\n      this.$nextTick(function () {\n        _this2.lessons.slides = _toConsumableArray(test);\n      });\n    },\n    openDialog: function openDialog() {\n      this.showDialog = true;\n    },\n    closeDialog: function () {\n      var _closeDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(val) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.showDialog = false;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function closeDialog(_x) {\n        return _closeDialog.apply(this, arguments);\n      }\n\n      return closeDialog;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(val) {\n        var _this3 = this;\n\n        var tips, actions, form, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                val.lessonId = this.lessonId;\n                tips = val.metadata[0].value;\n                actions = val.metadata[1].value;\n                form = _objectSpread({}, val, {\n                  metadata: {\n                    tips: tips,\n                    actions: actions\n                  }\n                });\n                _context3.next = 6;\n                return this.upsertSlide(form);\n\n              case 6:\n                Object.keys(this.slideForm).forEach(function (index) {\n                  if (index !== 'metadata' && index !== 'lessonId') {\n                    _this3.slideForm[index] = '';\n                  }\n                });\n                Object.keys(this.slideForm.metadata).forEach(function (index) {\n                  _this3.slideForm.metadata[index].value = '';\n                });\n                delete this.slideForm.lessonId;\n                this.showDialog = false;\n                _context3.next = 12;\n                return this.getLessonsById(this.lessonId);\n\n              case 12:\n                data = _context3.sent;\n                this.lessons = _objectSpread({}, data, {\n                  metadata: _objectSpread({}, data.metadata)\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function submitForm(_x2) {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    openSlide: function openSlide(slideId) {\n      this.selectedSlide = this.lessons.slides.find(function (s) {\n        return s.id === slideId;\n      });\n      this.editDialog = true;\n    },\n    closeSlide: function () {\n      var _closeSlide = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.editDialog = false;\n                this.selectedSlide = {};\n                _context4.next = 4;\n                return this.getLessonsById(this.lessonId);\n\n              case 4:\n                data = _context4.sent;\n                this.lessons = _objectSpread({}, data);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function closeSlide() {\n        return _closeSlide.apply(this, arguments);\n      }\n\n      return closeSlide;\n    }(),\n    cancelEdit: function () {\n      var _cancelEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.editing = false;\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function cancelEdit() {\n        return _cancelEdit.apply(this, arguments);\n      }\n\n      return cancelEdit;\n    }(),\n    saveData: function () {\n      var _saveData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.saving = true;\n                _context6.next = 3;\n                return this.upsertLesson(this.lessons);\n\n              case 3:\n                this.editing = false;\n                this.saving = false;\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function saveData() {\n        return _saveData.apply(this, arguments);\n      }\n\n      return saveData;\n    }()\n  })\n};",{"version":3,"sources":["LessonDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout class=\"lesson-container\" column justify-space-around align-center>\n    <v-progress-circular v-if=\"pageLoading\" color=\"blue\" indeterminate></v-progress-circular>\n    <h3>Lesson Info</h3>\n    <v-btn\n      class=\"edit-btn\"\n      v-if=\"!editing\"\n      absolute\n      dark\n      fab\n      top\n      right\n      color=\"pink\"\n      @click=\"editing = true\"\n    >\n      <v-icon>edit</v-icon>\n    </v-btn>\n    <v-speed-dial\n      absolute\n      dark\n      fab\n      top\n      right\n      color=\"pink\"\n      v-model=\"saveSpeedDial\"\n      direction=\"bottom\"\n      :open-on-hover=\"true\"\n      transition=\"slide-y-transition\"\n      :disabled=\"!saving\"\n      v-else\n      class=\"edit-speed-dial\"\n    >\n      <v-btn slot=\"activator\" v-model=\"saveActivator\" color=\"pink\" dark fab>\n        <v-icon>save</v-icon>\n        <v-icon>close</v-icon>\n      </v-btn>\n      <v-btn fab dark small color=\"green\" @click=\"saveData\">\n        <v-icon>check</v-icon>\n      </v-btn>\n      <v-btn fab dark small color=\"red\" @click=\"cancelEdit\">\n        <v-icon>cancel</v-icon>\n      </v-btn>\n    </v-speed-dial>\n    <v-card class=\"card\">\n      <v-layout row wrap>\n        <template v-for=\"(data, index) in lessons\">\n          <v-flex\n            xs6\n            :key=\"index\"\n            v-if=\"index != 'slides' && index != '__typename' && index != 'metadata'\"\n          >\n            <v-text-field\n              class=\"fields\"\n              v-model=\"lessons[index]\"\n              :label=\"index\"\n              required\n              :box=\"editing\"\n              :regular=\"!editing\"\n              :disabled=\"!editing\"\n            ></v-text-field>\n          </v-flex>\n        </template>\n        <template v-for=\"(data, index) in lessons.metadata\">\n          <v-flex xs6 :key=\"index + 'data'\">\n            <v-textarea\n              class=\"fields\"\n              v-model=\"lessons.metadata[index]\"\n              :label=\"index\"\n              required\n              :box=\"editing\"\n              :regular=\"!editing\"\n              :disabled=\"!editing\"\n            ></v-textarea>\n          </v-flex>\n        </template>\n      </v-layout>\n    </v-card>\n    <v-card class=\"card\">\n      <h3>Slides</h3>\n      <v-container>\n        <v-data-table :items=\"lessons.slides\" :headers=\"headers\" hide-actions>\n          <template slot=\"items\" slot-scope=\"props\">\n            <tr @click=\"openSlide(props.item.id)\">\n              <td class=\"px-1\" style=\"width: 0.1%\">\n                <v-btn style=\"cursor: move\" icon class=\"sortHandle\">\n                  <v-icon>drag_handle</v-icon>\n                </v-btn>\n              </td>\n              <td class=\"text-xs\">{{ props.item.priority}}</td>\n              <td class=\"text-xs\">{{ props.item.id}}</td>\n              <td class=\"text-xs\">{{ props.item.key}}</td>\n              <td class=\"text-xs\">{{ props.item.name}}</td>\n              <td class=\"text-xs\">{{ props.item.description}}</td>\n              <td>\n                <ul v-for=\"p in props.item.assets\" :key=\"p.id\">\n                  <li>{{ p.id }}</li>\n                </ul>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-container>\n      <v-layout right>\n        <v-btn @click=\"openDialog\">Create Slide</v-btn>\n      </v-layout>\n    </v-card>\n    <EditSlideDialog :editDialog=\"editDialog\" :selected=\"selectedSlide\" @closeSlide=\"closeSlide\" />\n    <AddDialog\n      :showDialog=\"showDialog\"\n      :uploadConfig=\"slideForm\"\n      @closeDialog=\"closeDialog\"\n      @submitForm=\"submitForm\"\n      dialogTitle=\"Slide\"\n    />\n    <v-btn v-if=\"orderChanged\" :loading=\"loading\" @click=\"saveOrder\">Update Priority</v-btn>\n  </v-layout>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { CurriculumActions } from '@/curriculum/CurriculumStore'\nimport { uploadSlideForm } from '@/components/courses/forms'\n\nimport EditSlideDialog from '@/components/courses/EditSlideDialog.vue'\nimport Sortable from 'sortablejs'\nimport AddDialog from '@/components/courses/AddDialog.vue'\n\nexport default {\n  components: {\n    AddDialog,\n    EditSlideDialog\n  },\n  data () {\n    return {\n      lessons: {\n        metadata: {}\n      },\n      saveActivator: false,\n      showDialog: false,\n      saveSpeedDial: false,\n      test: undefined,\n      saving: false,\n      editDialog: false,\n      editing: false,\n      headers: [\n        { text: '', sortable: false },\n        { text: 'Priority', value: 'priority' },\n        { text: 'ID', value: 'id' },\n        { text: 'Key', value: 'key' },\n        { text: 'Name', value: 'name' },\n        { text: 'Description', value: 'description' },\n        { text: 'Asset ID', value: 'assets' }\n      ],\n      selectedSlide: {},\n      orderChanged: false,\n      loading: false,\n      slideForm: uploadSlideForm,\n      pageLoading: true\n    }\n  },\n  async mounted () {\n    const data = await this.getLessonsById(this.lessonId)\n    this.pageLoading = false\n    this.lessons = { ...data, metadata: { ...data.metadata } }\n\n    this.lessons.slides.map(l => { return { ...l } }).sort(function (a, b) {\n      return a.priority - b.priority\n    })\n\n    const table = document.querySelector('.v-datatable tbody')\n    Sortable.create(table, {\n      onEnd: this.updateSlides,\n      handle: '.sortHandle'\n    })\n  },\n  computed: {\n    courseId () {\n      return ~~this.$route.params.courseId ? ~~this.$route.params.courseId : ''\n    },\n    unitId () {\n      return ~~this.$route.params.unitId ? ~~this.$route.params.unitId : ''\n    },\n    blockId () {\n      return ~~this.$route.params.blockId ? ~~this.$route.params.blockId : ''\n    },\n    lessonId () {\n      return ~~this.$route.params.lessonId ? ~~this.$route.params.lessonId : ''\n    }\n  },\n  methods: {\n    ...mapActions([\n      CurriculumActions.GET_LESSONS_BY_ID,\n      CurriculumActions.UPSERT_SLIDE,\n      CurriculumActions.UPSERT_LESSON\n    ]),\n    saveOrder () {\n      this.loading = true\n      this.lessons.slides.forEach((row, index) => {\n        row.lessonId = this.lessonId\n        this.upsertSlide(row)\n      })\n      this.loading = false\n      this.orderChanged = false\n    },\n    updateSlides ({ newIndex, oldIndex }) {\n      this.orderChanged = true\n      var test = this.lessons.slides.map(l => { return { ...l } }).sort(function (a, b) {\n        return a.priority - b.priority\n      })\n      this.lessons.slides = []\n      const rowSelected = test.splice(oldIndex, 1)[0]\n      test.splice(newIndex, 0, rowSelected)\n\n      test.forEach((t, index) => {\n        t.priority = index\n        return t\n      })\n\n      this.$nextTick(() => {\n        this.lessons.slides = [...test]\n      })\n    },\n    openDialog () {\n      this.showDialog = true\n    },\n    async closeDialog (val) {\n      this.showDialog = false\n    },\n    async submitForm (val) {\n      val.lessonId = this.lessonId\n      const tips = val.metadata[0].value\n      const actions = val.metadata[1].value\n      const form = { ...val, metadata: { tips, actions } }\n      await this.upsertSlide(form)\n\n      Object.keys(this.slideForm).forEach(index => {\n        if (index !== 'metadata' && index !== 'lessonId') {\n          this.slideForm[index] = ''\n        }\n      })\n      Object.keys(this.slideForm.metadata).forEach(index => {\n        this.slideForm.metadata[index].value = ''\n      })\n      delete this.slideForm.lessonId\n\n      this.showDialog = false\n      const data = await this.getLessonsById(this.lessonId)\n      this.lessons = { ...data, metadata: { ...data.metadata } }\n    },\n    openSlide (slideId) {\n      this.selectedSlide = this.lessons.slides.find(s => {\n        return s.id === slideId\n      })\n      this.editDialog = true\n    },\n    async closeSlide () {\n      this.editDialog = false\n      this.selectedSlide = {}\n      const data = await this.getLessonsById(this.lessonId)\n      this.lessons = { ...data }\n    },\n    async cancelEdit () {\n      this.editing = false\n    },\n    async saveData () {\n      this.saving = true\n      await this.upsertLesson(this.lessons)\n      this.editing = false\n      this.saving = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.lesson-container {\n  margin: 10px 0;\n  width: 100%;\n}\n.fields {\n  height: 100%;\n  padding: 10px 10px;\n  width: 100%;\n  margin: 10px 10px;\n}\n.card {\n  width: 90%;\n  padding: 20px 10px;\n  margin: 5px 0;\n}\n.center {\n  text-align: center;\n}\n\n.meta {\n  padding: 10px 20px;\n  color: grey;\n}\n</style>\n"],"sourceRoot":"src/views/curriculum"}]}