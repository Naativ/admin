{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/views/members/rules.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/members/rules.js","mtime":1577329618151},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import moment from 'moment';\nexport var rules = {\n  required: function required(value) {\n    return !!value || 'Required.';\n  },\n  isDate: function isDate(value) {\n    if (!value) return true;\n    var mValue = moment(value, ['MM-DD-YYYY', 'MM/DD/YYYY'], true);\n    var isValid = mValue.isValid();\n    return isValid || 'Must be a valid date \\'MM/DD/YYYY\\'';\n  },\n  isEmail: function isEmail(v) {\n    return /.+@.+/.test(v) || 'E-mail must be valid';\n  }\n};",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/views/members/rules.js"],"names":["moment","rules","required","value","isDate","mValue","isValid","isEmail","test","v"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAMC,QAAQ;AACnBC,YAAU;AAAA,WAAS,CAAC,CAACC,KAAF,IAAW,WAApB;AAAA,GADS;AAEnBC,UAAQ,uBAAS;AACf,QAAI,CAACD,KAAL,EAAY,OAAO,IAAP;AACZ,QAAME,SAASL,OAAOG,KAAP,EAAc,CAAC,YAAD,EAAe,YAAf,CAAd,EAA4C,IAA5C,CAAf;AACA,QAAMG,UAAUD,OAAOC,OAAP,EAAhB;AACA,WAAOA,WAAW,qCAAlB;AACD,GAPkB;AAQnBC,WAAS;AAAA,WAAK,QAAQC,IAAR,CAAaC,CAAb,KAAmB,sBAAxB;AAAA;AARU,CAAd","sourcesContent":["import moment from 'moment'\n\nexport const rules = {\n  required: value => !!value || 'Required.',\n  isDate: value => {\n    if (!value) return true\n    const mValue = moment(value, ['MM-DD-YYYY', 'MM/DD/YYYY'], true)\n    const isValid = mValue.isValid()\n    return isValid || 'Must be a valid date \\'MM/DD/YYYY\\''\n  },\n  isEmail: v => /.+@.+/.test(v) || 'E-mail must be valid'\n}\n"]}]}