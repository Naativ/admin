{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/members/MiscDetailsCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/members/MiscDetailsCard.vue","mtime":1581353753564},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { cloneDeep, get } from 'lodash';\nimport { mapState, mapActions } from 'vuex';\nimport { MiscDetailsGQL, UpdateMemberStatus, AdjustTags } from \"../../users/members.gql\";\nimport EditButton from \"./EditButton\";\nimport { UsersActions } from '@/users/UsersStore';\nexport default {\n  name: 'MiscDetailsCard',\n  components: {\n    EditButton: EditButton\n  },\n  data: function data() {\n    return {\n      model: null,\n      disabled: true,\n      memberId: ~~this.$route.params.id,\n      items: [],\n      slugModel: [],\n      statuses: ['Active', 'Member Disabled', 'Member Expired', 'Member Locked']\n    };\n  },\n  methods: _objectSpread({}, mapActions({\n    adjustTags: UsersActions.ADJUST_TAGS,\n    upsertUser: UsersActions.UPSERT_USER\n  }), {\n    editClicked: function editClicked() {\n      this.disabled = false;\n    },\n    saveClicked: function () {\n      var _saveClicked = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var id, statusId;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.disabled = true;\n                id = ~~this.$route.params.id;\n                _context.prev = 2;\n                _context.t0 = this.model.status;\n                _context.next = _context.t0 === 'Active' ? 6 : _context.t0 === 'Member Disabled' ? 8 : _context.t0 === 'Member Expired' ? 10 : _context.t0 === 'Member Locked' ? 12 : 14;\n                break;\n\n              case 6:\n                statusId = 1;\n                return _context.abrupt(\"break\", 15);\n\n              case 8:\n                statusId = 2;\n                return _context.abrupt(\"break\", 15);\n\n              case 10:\n                statusId = 3;\n                return _context.abrupt(\"break\", 15);\n\n              case 12:\n                statusId = 4;\n                return _context.abrupt(\"break\", 15);\n\n              case 14:\n                throw new Error(\"Cannot update to status id of \".concat(this.model.status));\n\n              case 15:\n                this.$apollo.mutate({\n                  mutation: UpdateMemberStatus,\n                  variables: {\n                    input: {\n                      id: id,\n                      statusId: statusId\n                    }\n                  }\n                });\n                _context.next = 22;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t1 = _context[\"catch\"](2);\n                this.$emit('snackbarEmit', _context.t1.message);\n                throw new Error(\"Error saving Member Status: \".concat(_context.t1.message));\n\n              case 22:\n                _context.prev = 22;\n\n                if (!this.model.tags.length) {\n                  _context.next = 28;\n                  break;\n                }\n\n                _context.next = 26;\n                return this.$apollo.mutate({\n                  mutation: AdjustTags,\n                  variables: {\n                    input: {\n                      memberId: id,\n                      set: this.model.tags\n                    }\n                  }\n                });\n\n              case 26:\n                _context.next = 30;\n                break;\n\n              case 28:\n                _context.next = 30;\n                return this.$apollo.mutate({\n                  mutation: AdjustTags,\n                  variables: {\n                    input: {\n                      memberId: id,\n                      remove: this.miscDetails.tags\n                    }\n                  }\n                });\n\n              case 30:\n                _context.next = 36;\n                break;\n\n              case 32:\n                _context.prev = 32;\n                _context.t2 = _context[\"catch\"](22);\n                this.$emit('snackbarEmit', _context.t2.message);\n                throw new Error(\"Error saving Member Tags: \".concat(_context.t2.message));\n\n              case 36:\n                this.$emit('snackbarEmit', 'Member tags and status saved!');\n                this.$apollo.queries.miscDetails.refetch();\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 18], [22, 32]]);\n      }));\n\n      function saveClicked() {\n        return _saveClicked.apply(this, arguments);\n      }\n\n      return saveClicked;\n    }(),\n    cancelClicked: function () {\n      var _cancelClicked = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.disabled = true;\n                _context2.next = 3;\n                return this.$apollo.queries.miscDetails.refetch();\n\n              case 3:\n                this.initMember(this.miscDetails);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function cancelClicked() {\n        return _cancelClicked.apply(this, arguments);\n      }\n\n      return cancelClicked;\n    }(),\n    initMember: function initMember(contact) {\n      this.model = cloneDeep(contact);\n    },\n    updateSearch: function () {\n      var _updateSearch = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(search) {\n        var slugRes, checkSlug;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.checkSlug([{\n                  slug: search\n                }]);\n\n              case 3:\n                slugRes = _context3.sent;\n\n                if (slugRes.data) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error('Error verifying slug');\n\n              case 6:\n                checkSlug = slugRes.data.checkSlug;\n\n                if (!checkSlug) {\n                  this.items = [{\n                    slug: search\n                  }];\n                } else {\n                  if (checkSlug.memberId === this.memberId) {\n                    this.items = [{\n                      slug: search\n                    }];\n                  }\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](0);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 10]]);\n      }));\n\n      function updateSearch(_x) {\n        return _updateSearch.apply(this, arguments);\n      }\n\n      return updateSearch;\n    }()\n  }),\n  watch: {\n    miscDetails: function miscDetails(next) {\n      this.initMember(next);\n    },\n    '$route': function $route(newRoute) {\n      var id = newRoute.params.id;\n      this.memberId = ~~id;\n      this.disabled = true;\n    },\n    'model.slugs': function modelSlugs(slugs) {\n      this.items = slugs;\n      this.slugModel = slugs;\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    tenantId: function tenantId(state) {\n      return state.user.principal.tenantId;\n    },\n    availableTags: function availableTags(state) {\n      return {\n        loading: state.tenants.tags.loading,\n        values: state.tenants.tags.values.map(function (e) {\n          return e.name;\n        })\n      };\n    }\n  })),\n  apollo: {\n    miscDetails: _objectSpread({}, MiscDetailsGQL, {\n      variables: function variables() {\n        return {\n          memberId: this.memberId\n        };\n      },\n      update: function update(data) {\n        var member = _objectSpread({}, get(data, 'members.nodes.0'));\n\n        return member;\n      }\n    })\n  }\n};",{"version":3,"sources":["MiscDetailsCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,SAAA,SAAA,EAAA,GAAA,QAAA,QAAA;AACA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AAEA,SACA,cADA,EAEA,kBAFA,EAGA,UAHA;AAKA,OAAA,UAAA;AAEA,SAAA,YAAA,QAAA,oBAAA;AAEA,eAAA;AACA,QAAA,iBADA;AAEA,cAAA;AACA;AADA,GAFA;AAKA,MALA,kBAKA;AACA,WAAA;AACA,aAAA,IADA;AAEA,gBAAA,IAFA;AAGA,gBAAA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAHA;AAIA,aAAA,EAJA;AAKA,iBAAA,EALA;AAMA,gBAAA,CACA,QADA,EAEA,iBAFA,EAGA,gBAHA,EAIA,eAJA;AANA,KAAA;AAaA,GAnBA;AAoBA,6BACA,WAAA;AACA,gBAAA,aAAA,WADA;AAEA,gBAAA,aAAA;AAFA,GAAA,CADA;AAKA,eALA,yBAKA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,KAPA;AAQA,eARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,qBAAA,QAAA,GAAA,IAAA;AACA,kBAVA,GAUA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAVA;AAAA;AAAA,8BAcA,KAAA,KAAA,CAAA,MAdA;AAAA,gDAeA,QAfA,uBAmBA,iBAnBA,uBAuBA,gBAvBA,wBA2BA,eA3BA;AAAA;;AAAA;AAgBA,2BAAA,CAAA;AAhBA;;AAAA;AAoBA,2BAAA,CAAA;AApBA;;AAAA;AAwBA,2BAAA,CAAA;AAxBA;;AAAA;AA4BA,2BAAA,CAAA;AA5BA;;AAAA;AAAA,sBAgCA,IAAA,KAAA,yCAAA,KAAA,KAAA,CAAA,MAAA,EAhCA;;AAAA;AAkCA,qBAAA,OAAA,CAAA,MAAA,CAAA;AACA,4BAAA,kBADA;AAEA,6BAAA;AACA,2BAAA;AACA,4BADA;AAEA;AAFA;AADA;AAFA,iBAAA;AAlCA;AAAA;;AAAA;AAAA;AAAA;AA4CA,qBAAA,KAAA,CAAA,cAAA,EAAA,YAAA,OAAA;AA5CA,sBA6CA,IAAA,KAAA,uCAAA,YAAA,OAAA,EA7CA;;AAAA;AAAA;;AAAA,qBAiDA,KAAA,KAAA,CAAA,IAAA,CAAA,MAjDA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAkDA,KAAA,OAAA,CAAA,MAAA,CAAA;AACA,4BAAA,UADA;AAEA,6BAAA;AACA,2BAAA;AACA,gCAAA,EADA;AAEA,2BAAA,KAAA,KAAA,CAAA;AAFA;AADA;AAFA,iBAAA,CAlDA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA4DA,KAAA,OAAA,CAAA,MAAA,CAAA;AACA,4BAAA,UADA;AAEA,6BAAA;AACA,2BAAA;AACA,gCAAA,EADA;AAEA,8BAAA,KAAA,WAAA,CAAA;AAFA;AADA;AAFA,iBAAA,CA5DA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuEA,qBAAA,KAAA,CAAA,cAAA,EAAA,YAAA,OAAA;AAvEA,sBAwEA,IAAA,KAAA,qCAAA,YAAA,OAAA,EAxEA;;AAAA;AA2EA,qBAAA,KAAA,CAAA,cAAA,EAAA,+BAAA;AACA,qBAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,OAAA;;AA5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8EA,iBA9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+EA,qBAAA,QAAA,GAAA,IAAA;AA/EA;AAAA,uBAgFA,KAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,OAAA,EAhFA;;AAAA;AAiFA,qBAAA,UAAA,CAAA,KAAA,WAAA;;AAjFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmFA,cAnFA,sBAmFA,OAnFA,EAmFA;AACA,WAAA,KAAA,GAAA,UAAA,OAAA,CAAA;AACA,KArFA;AAsFA,gBAtFA;AAAA;AAAA;AAAA,gDAsFA,MAtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwFA,KAAA,SAAA,CAAA,CAAA;AAAA,wBAAA;AAAA,iBAAA,CAAA,CAxFA;;AAAA;AAwFA,uBAxFA;;AAAA,oBA0FA,QAAA,IA1FA;AAAA;AAAA;AAAA;;AAAA,sBA0FA,IAAA,KAAA,CAAA,sBAAA,CA1FA;;AAAA;AA4FA,yBA5FA,GA4FA,OA5FA,CA4FA,IA5FA,CA4FA,SA5FA;;AA6FA,oBAAA,CAAA,SAAA,EAAA;AACA,uBAAA,KAAA,GAAA,CAAA;AAAA,0BAAA;AAAA,mBAAA,CAAA;AACA,iBAFA,MAEA;AACA,sBAAA,UAAA,QAAA,KAAA,KAAA,QAAA,EAAA;AACA,yBAAA,KAAA,GAAA,CAAA;AAAA,4BAAA;AAAA,qBAAA,CAAA;AACA;AACA;;AAnGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,IApBA;AA6HA,SAAA;AACA,eADA,uBACA,IADA,EACA;AACA,WAAA,UAAA,CAAA,IAAA;AACA,KAHA;AAIA,YAJA,kBAIA,QAJA,EAIA;AAAA,UACA,EADA,GACA,QADA,CACA,MADA,CACA,EADA;AAEA,WAAA,QAAA,GAAA,CAAA,CAAA,EAAA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KARA;AASA,iBATA,sBASA,KATA,EASA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA;AAZA,GA7HA;AA2IA,8BACA,SAAA;AACA,cAAA;AAAA,aAAA,MAAA,IAAA,CAAA,SAAA,CAAA,QAAA;AAAA,KADA;AAEA,mBAAA;AAAA,aAAA;AACA,iBAAA,MAAA,OAAA,CAAA,IAAA,CAAA,OADA;AAEA,gBAAA,MAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA;AAAA,iBAAA,EAAA,IAAA;AAAA,SAAA;AAFA,OAAA;AAAA;AAFA,GAAA,CADA,CA3IA;AAoJA,UAAA;AACA,mCACA,cADA;AAEA,eAFA,uBAEA;AACA,eAAA;AACA,oBAAA,KAAA;AADA,SAAA;AAGA,OANA;AAOA,YAPA,kBAOA,IAPA,EAOA;AACA,YAAA,2BAAA,IAAA,IAAA,EAAA,iBAAA,CAAA,CAAA;;AACA,eAAA,MAAA;AACA;AAVA;AADA;AApJA,CAAA","sourcesContent":["<template>\n  <div>\n    <div id=\"section-header-container\">\n      <v-toolbar class=\"indigo darken-1 white--text\">\n        <v-toolbar-title class=\"section-subheader\">Misc Details</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-toolbar-items>\n          <EditButton\n            id             =\"misc-details-edit-btn\"\n            :disabled      =\"disabled\"\n            @editClicked   =\"editClicked\"\n            @saveClicked   =\"saveClicked\"\n            @cancelClicked =\"cancelClicked\"\n          />\n        </v-toolbar-items>\n      </v-toolbar>\n    </div>\n    <v-card>\n      <v-layout row wrap>\n        <v-form id=\"form\" ref=\"form\">\n          <v-card-text class=\"details\" v-if=\"model\">\n            <v-layout row wrap>\n              <v-flex xs6>\n                <v-select\n                  class=\"detail-field\"\n                  chips\n                  deletable-chips\n                  multiple\n                  label=\"Tags\"\n                  v-model=\"model.tags\"\n                  :regular=\"disabled\"\n                  :items=\"availableTags.values\"\n                  item-text=\"blah\"\n                  :disabled=\"disabled || availableTags.loading\"\n                  :menu-props=\"{\n                    closeOnClick: false,\n                    closeOnContentClick: true,\n                    disableKeys: true,\n                    openOnClick: false,\n                    maxHeight: 304\n                  }\"\n                  :append-icon=\"!disabled ? '$vuetify.icons.dropdown' : null\"\n                ></v-select>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  class=\"detail-field\"\n                  chips\n                  label=\"Account Status\"\n                  v-model=\"model.status\"\n                  :regular=\"disabled\"\n                  :items=\"statuses\"\n                  :disabled=\"disabled\"\n                  :menu-props=\"{\n                    closeOnClick: false,\n                    closeOnContentClick: true,\n                    disableKeys: true,\n                    openOnClick: false,\n                    maxHeight: 304\n                  }\"\n                  :append-icon=\"!disabled ? '$vuetify.icons.dropdown' : null\"\n                ></v-select>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-form>\n      </v-layout>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport { cloneDeep, get } from 'lodash'\nimport { mapState, mapActions } from 'vuex'\n\nimport {\n  MiscDetailsGQL,\n  UpdateMemberStatus,\n  AdjustTags\n} from '../../users/members.gql'\nimport EditButton from './EditButton'\n\nimport { UsersActions } from '@/users/UsersStore'\n\nexport default {\n  name: 'MiscDetailsCard',\n  components: {\n    EditButton\n  },\n  data () {\n    return {\n      model: null,\n      disabled: true,\n      memberId: ~~this.$route.params.id,\n      items: [],\n      slugModel: [],\n      statuses: [\n        'Active',\n        'Member Disabled',\n        'Member Expired',\n        'Member Locked'\n      ]\n    }\n  },\n  methods: {\n    ...mapActions({\n      adjustTags: UsersActions.ADJUST_TAGS,\n      upsertUser: UsersActions.UPSERT_USER\n    }),\n    editClicked () {\n      this.disabled = false\n    },\n    async saveClicked() {\n      this.disabled = true\n      const id = ~~this.$route.params.id\n      try {\n        let statusId\n\n        switch (this.model.status) {\n          case 'Active':\n            statusId = 1\n            break\n\n          case 'Member Disabled':\n            statusId = 2\n            break\n\n          case 'Member Expired':\n            statusId = 3\n            break\n\n          case 'Member Locked':\n            statusId = 4\n            break\n\n          default:\n            throw new Error(`Cannot update to status id of ${this.model.status}`)\n        }\n        this.$apollo.mutate({\n          mutation: UpdateMemberStatus,\n          variables: {\n            input: {\n              id,\n              statusId\n            }\n          }\n        })\n      } catch (error) {\n        this.$emit('snackbarEmit', error.message)\n        throw new Error(`Error saving Member Status: ${error.message}`)\n      }\n\n      try {\n        if (this.model.tags.length) {\n          await this.$apollo.mutate({\n            mutation: AdjustTags,\n            variables: {\n              input: {\n                memberId: id,\n                set: this.model.tags\n              }\n            }\n          })\n        } else {\n          await this.$apollo.mutate({\n            mutation: AdjustTags,\n            variables: {\n              input: {\n                memberId: id,\n                remove: this.miscDetails.tags\n              }\n            }\n          })\n        }\n      } catch (error) {\n        this.$emit('snackbarEmit', error.message)\n        throw new Error(`Error saving Member Tags: ${error.message}`)\n      }\n\n      this.$emit('snackbarEmit', 'Member tags and status saved!')\n      this.$apollo.queries.miscDetails.refetch()\n    },\n    async cancelClicked () {\n      this.disabled = true\n      await this.$apollo.queries.miscDetails.refetch()\n      this.initMember(this.miscDetails)\n    },\n    initMember(contact) {\n      this.model = cloneDeep(contact)\n    },\n    async updateSearch(search) {\n      try {\n        const slugRes = await this.checkSlug([{ slug: search }])\n\n        if (!slugRes.data) throw new Error('Error verifying slug')\n\n        const { data: { checkSlug } } = slugRes\n        if (!checkSlug) {\n          this.items = [{ slug: search }]\n        } else {\n          if (checkSlug.memberId === this.memberId) {\n            this.items = [{ slug: search }]\n          }\n        }\n      } catch (error) {\n\n      }\n    }\n  },\n  watch: {\n    miscDetails (next) {\n      this.initMember(next)\n    },\n    '$route'(newRoute) {\n      const { params: { id } } = newRoute\n      this.memberId = ~~id\n      this.disabled = true\n    },\n    'model.slugs'(slugs) {\n      this.items = slugs\n      this.slugModel = slugs\n    }\n  },\n  computed: {\n    ...mapState({\n      tenantId: state => state.user.principal.tenantId,\n      availableTags: state => ({\n        loading: state.tenants.tags.loading,\n        values: state.tenants.tags.values.map(e => e.name)\n      })\n    })\n  },\n  apollo: {\n    miscDetails: {\n      ...MiscDetailsGQL,\n      variables() {\n        return {\n          memberId: this.memberId\n        }\n      },\n      update(data) {\n        let member = { ...get(data, 'members.nodes.0') }\n        return member\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.findme {\n  border: 2px solid red;\n}\n#contact-list {\n  width: 100%;\n}\n.address-title {\n  position: absolute;\n  top: 9px;\n}\n.member-section-heading {\n  display: inline;\n}\n#form {\n  min-width: 100%;\n}\n.section-subheader {\n  font-size: 18px !important;\n}\n#section-header-container {\n  display: flex;\n  justify-content: space-between;\n}\n.detail-field {\n  padding: 12px 10px 0px 10px;\n}\n</style>\n"],"sourceRoot":"src/views/members"}]}