{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/associations/Association.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/associations/Association.vue","mtime":1574205365000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from 'vuex';\nimport { UsersActions } from '@/users/UsersStore';\nimport { debounce } from 'lodash';\nimport AssociationsDataTable from '@/components/AssociationsDataTable.vue';\nexport default {\n  components: {\n    AssociationsDataTable: AssociationsDataTable\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      searchInputDebounce: debounce(function () {\n        return _this.search();\n      }, 500),\n      members: [],\n      searchInput: '',\n      loading: false,\n      addDialog: false\n    };\n  },\n  methods: _objectSpread({}, mapActions({\n    usersFetch: UsersActions.FETCH_USERS,\n    startViewing: UsersActions.START_VIEWING\n  }), {\n    search: function () {\n      var _search = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(input) {\n        var searchInput;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                searchInput = this.searchInput;\n                this.loading = true;\n                _context.next = 4;\n                return this.usersFetch({\n                  term: searchInput,\n                  first: 25,\n                  after: 0\n                });\n\n              case 4:\n                this.loading = false;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function search(_x) {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }(),\n    view: function () {\n      var _view = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(id) {\n        var displayName;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.usersSearchResults.forEach(function (result) {\n                  if (!displayName && result.id === id) {\n                    displayName = result.displayName;\n                  }\n                });\n                this.startViewing({\n                  id: id,\n                  displayName: displayName\n                });\n                this.$router.push(\"/associations/member/\".concat(id));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function view(_x2) {\n        return _view.apply(this, arguments);\n      }\n\n      return view;\n    }(),\n    handleEdittingMetaDataArr: function handleEdittingMetaDataArr(index, inputValue) {\n      this.edittingMetaDataArr[index].metadata.percent = inputValue;\n    }\n  }),\n  computed: _objectSpread({}, mapState({\n    usersSearchResults: function usersSearchResults(state) {\n      return state.users.searched.results;\n    }\n  })),\n  watch: {\n    usersSearchResults: function usersSearchResults(newVal) {\n      if (!Array.isArray(newVal)) {\n        this.members = [];\n        throw new Error('watcher requires an array');\n      }\n\n      var mappedMembers = newVal.map(function (member) {\n        var name = member.displayName,\n            id = member.id;\n        return {\n          name: name,\n          id: id\n        };\n      });\n      this.members = mappedMembers;\n    }\n  }\n};",{"version":3,"sources":["Association.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AACA,SAAA,YAAA,QAAA,oBAAA;AACA,SAAA,QAAA,QAAA,QAAA;AAEA,OAAA,qBAAA,MAAA,wCAAA;AAEA,eAAA;AACA,cAAA;AACA;AADA,GADA;AAIA,MAJA,kBAIA;AAAA;;AACA,WAAA;AACA,2BAAA,SAAA;AAAA,eAAA,MAAA,MAAA,EAAA;AAAA,OAAA,EAAA,GAAA,CADA;AAEA,eAAA,EAFA;AAGA,mBAAA,EAHA;AAIA,eAAA,KAJA;AAKA,iBAAA;AALA,KAAA;AAOA,GAZA;AAaA,6BACA,WAAA;AACA,gBAAA,aAAA,WADA;AAEA,kBAAA,aAAA;AAFA,GAAA,CADA;AAKA,UALA;AAAA;AAAA;AAAA,+CAKA,KALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,2BANA,GAMA,IANA,CAMA,WANA;AAOA,qBAAA,OAAA,GAAA,IAAA;AAPA;AAAA,uBAQA,KAAA,UAAA,CAAA;AAAA,wBAAA,WAAA;AAAA,yBAAA,EAAA;AAAA,yBAAA;AAAA,iBAAA,CARA;;AAAA;AASA,qBAAA,OAAA,GAAA,KAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWA,QAXA;AAAA;AAAA;AAAA,gDAWA,EAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,qBAAA,kBAAA,CAAA,OAAA,CAAA,kBAAA;AACA,sBAAA,CAAA,WAAA,IAAA,OAAA,EAAA,KAAA,EAAA,EAAA;AACA,kCAAA,OAAA,WAAA;AACA;AACA,iBAJA;AAMA,qBAAA,YAAA,CAAA;AAAA,wBAAA;AAAA;AAAA,iBAAA;AACA,qBAAA,OAAA,CAAA,IAAA,gCAAA,EAAA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuBA,6BAvBA,qCAuBA,KAvBA,EAuBA,UAvBA,EAuBA;AACA,WAAA,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA,OAAA,GAAA,UAAA;AACA;AAzBA,IAbA;AAwCA,8BACA,SAAA;AACA,wBAAA;AAAA,aAAA,MAAA,KAAA,CAAA,QAAA,CAAA,OAAA;AAAA;AADA,GAAA,CADA,CAxCA;AA6CA,SAAA;AACA,sBADA,8BACA,MADA,EACA;AACA,UAAA,CAAA,MAAA,OAAA,CAAA,MAAA,CAAA,EAAA;AACA,aAAA,OAAA,GAAA,EAAA;AACA,cAAA,IAAA,KAAA,CAAA,2BAAA,CAAA;AACA;;AACA,UAAA,gBAAA,OAAA,GAAA,CAAA,kBAAA;AAAA,YACA,IADA,GACA,MADA,CACA,WADA;AAAA,YACA,EADA,GACA,MADA,CACA,EADA;AAEA,eAAA;AAAA,oBAAA;AAAA;AAAA,SAAA;AACA,OAHA,CAAA;AAIA,WAAA,OAAA,GAAA,aAAA;AACA;AAXA;AA7CA,CAAA","sourcesContent":["<template>\n  <v-layout column ma-5>\n    <v-card>\n      <v-card-title class=\"secondary white--text\" primary-title style=\"justify-content: center;\">\n        <h1>Associations Dashboard</h1>\n      </v-card-title>\n      <v-card-text>\n        <v-text-field\n          v-model      =\"searchInput\"\n          prepend-icon =\"search\"\n          label        =\"Search by member name\"\n          @keyup       =\"searchInputDebounce\"\n          :loading       =\"loading\"\n        >\n        </v-text-field>\n      </v-card-text>\n\n      <AssociationsDataTable\n        :associations  =\"members\"\n        :currentScreen =\"'dashboard'\"\n        @view          =\"view\"\n      />\n    </v-card>\n  </v-layout>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\nimport { debounce } from 'lodash'\n\nimport AssociationsDataTable from '@/components/AssociationsDataTable.vue'\n\nexport default {\n  components: {\n    AssociationsDataTable\n  },\n  data () {\n    return {\n      searchInputDebounce: debounce(() => this.search(), 500),\n      members: [],\n      searchInput: '',\n      loading: false,\n      addDialog: false\n    }\n  },\n  methods: {\n    ...mapActions({\n      usersFetch: UsersActions.FETCH_USERS,\n      startViewing: UsersActions.START_VIEWING\n    }),\n    async search(input) {\n      const { searchInput } = this\n      this.loading = true\n      await this.usersFetch({ term: searchInput, first: 25, after: 0 })\n      this.loading = false\n    },\n    async view(id) {\n      let displayName\n\n      this.usersSearchResults.forEach(result => {\n        if (!displayName && result.id === id) {\n          displayName = result.displayName\n        }\n      })\n\n      this.startViewing({ id, displayName })\n      this.$router.push(`/associations/member/${id}`)\n    },\n    handleEdittingMetaDataArr(index, inputValue) {\n      this.edittingMetaDataArr[index].metadata.percent = inputValue\n    }\n  },\n  computed: {\n    ...mapState({\n      usersSearchResults: state => state.users.searched.results\n    })\n  },\n  watch: {\n    usersSearchResults(newVal) {\n      if (!Array.isArray(newVal)) {\n        this.members = []\n        throw new Error('watcher requires an array')\n      }\n      const mappedMembers = newVal.map(member => {\n        const { displayName: name, id } = member\n        return { name, id }\n      })\n      this.members = mappedMembers\n    }\n  }\n}\n</script>\n\n<style>\n.association-table {\n  cursor: default;\n}\n.link {\n  margin: auto;\n}\n</style>\n"],"sourceRoot":"src/views/associations"}]}