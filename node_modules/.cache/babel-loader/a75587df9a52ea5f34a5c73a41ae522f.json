{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/curriculum/Blocks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/curriculum/Blocks.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddDialog from '@/components/courses/AddDialog.vue';\nimport { mapActions } from 'vuex';\nimport { uploadBlockForm } from '@/components/courses/forms';\nimport { CurriculumActions } from '@/curriculum/CurriculumStore';\nimport Sortable from 'sortablejs';\nexport default {\n  components: {\n    AddDialog: AddDialog\n  },\n  data: function data() {\n    return {\n      headers: [{\n        text: '',\n        sortable: false\n      }, {\n        text: 'Priority',\n        value: 'priority'\n      }, {\n        text: 'ID',\n        value: 'id'\n      }, {\n        text: 'Unit ID',\n        value: 'unit_id'\n      }, {\n        text: 'Key',\n        value: 'key'\n      }, {\n        text: 'Name',\n        value: 'name'\n      }, {\n        text: 'Description',\n        value: 'description'\n      }, {\n        text: 'Created By',\n        value: 'created_by'\n      }, {\n        text: 'Modified By',\n        value: 'modified_by'\n      }],\n      blocks: [],\n      orderChanged: false,\n      loading: false,\n      showDialog: false,\n      blockForm: uploadBlockForm,\n      pageLoading: true\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var _ref, results, table;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getBlocks([this.unitId]);\n\n            case 2:\n              _ref = _context.sent;\n              results = _ref.results;\n              this.blocks = results.map(function (b) {\n                return _objectSpread({}, b);\n              }).sort(function (a, b) {\n                return a.priority - b.priority;\n              });\n              this.pageLoading = false;\n              table = document.querySelector('.v-datatable tbody');\n              Sortable.create(table, {\n                onEnd: this.updateBlocks,\n                handle: '.sortHandle'\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: {\n    courseId: function courseId() {\n      return ~~this.$route.params.courseId ? ~~this.$route.params.courseId : '';\n    },\n    unitId: function unitId() {\n      return ~~this.$route.params.unitId ? ~~this.$route.params.unitId : '';\n    }\n  },\n  methods: _objectSpread({}, mapActions([CurriculumActions.GET_BLOCKS, CurriculumActions.UPSERT_BLOCK]), {\n    savePriority: function savePriority() {\n      var _this = this;\n\n      this.loading = true;\n      this.blocks.forEach(function (row) {\n        _this.upsertBlock(row);\n      });\n      this.loading = false;\n      this.orderChanged = false;\n    },\n    updateBlocks: function updateBlocks(_ref2) {\n      var _this2 = this;\n\n      var newIndex = _ref2.newIndex,\n          oldIndex = _ref2.oldIndex;\n      this.orderChanged = true;\n\n      var test = _toConsumableArray(this.blocks);\n\n      this.blocks = [];\n      var rowSelected = test.splice(oldIndex, 1)[0];\n      test.splice(newIndex, 0, rowSelected);\n      test.forEach(function (t, index) {\n        t.priority = index;\n        return t;\n      });\n      this.$nextTick(function () {\n        _this2.blocks = _toConsumableArray(test);\n      });\n    },\n    openDialog: function openDialog() {\n      this.showDialog = true;\n    },\n    closeDialog: function () {\n      var _closeDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(val) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.showDialog = false;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function closeDialog(_x) {\n        return _closeDialog.apply(this, arguments);\n      }\n\n      return closeDialog;\n    }(),\n    openLesson: function openLesson(blockId) {\n      this.$router.push('/curriculum/courses/' + this.courseId + '/unit/' + this.unitId + '/block/' + blockId);\n    },\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(val) {\n        var _this3 = this;\n\n        var data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                val.unitId = this.unitId;\n                _context3.next = 3;\n                return this.upsertBlock(val);\n\n              case 3:\n                Object.keys(this.blockForm).forEach(function (index) {\n                  _this3.blockForm[index] = '';\n                });\n                delete this.blockForm.unitId;\n                this.showDialog = false;\n                _context3.next = 8;\n                return this.getBlocks([this.unitId]);\n\n              case 8:\n                data = _context3.sent;\n                this.blocks = data.results.slice();\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function submitForm(_x2) {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }()\n  })\n};",{"version":3,"sources":["Blocks.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout justify-space-around align-center column>\n    <v-progress-circular v-if=\"pageLoading\" color=\"blue\" indeterminate></v-progress-circular>\n    <h3>Blocks for Unit {{unitId}} </h3>\n    <v-container class=\"table\">\n      <v-btn @click=\"openDialog\" color=\"pink\" dark absolute right fab>\n        <v-icon>add</v-icon>\n      </v-btn>\n      <v-data-table\n        :items=\"blocks\"\n        :headers=\"headers\"\n        hide-actions\n      >\n      <template slot=\"items\" slot-scope=\"props\">\n        <tr @click=\"openLesson(props.item.id)\">\n          <td class=\"px-1\" style=\"width: 0.1%\">\n            <v-btn style=\"cursor: move\" icon class=\"sortHandle\"><v-icon>drag_handle</v-icon></v-btn>\n          </td>\n          <td class=\"text-xs\">{{ props.item.priority}}</td>\n          <td class=\"text-xs\">{{ props.item.id}}</td>\n          <td class=\"text-xs\">{{ props.item.unitId}}</td>\n          <td class=\"text-xs\">{{ props.item.key}}</td>\n          <td class=\"text-xs\">{{ props.item.name}}</td>\n          <td class=\"text-xs\">{{ props.item.description}}</td>\n          <td class=\"text-xs\">{{ props.item.modifiedBy}}</td>\n        </tr>\n      </template>\n      </v-data-table>\n    </v-container>\n    <AddDialog\n      :showDialog=\"showDialog\"\n      :uploadConfig=\"blockForm\"\n      @closeDialog=\"closeDialog\"\n      @submitForm=\"submitForm\"\n      dialogTitle=\"Block\"\n    />\n    <v-btn\n      v-if=\"orderChanged\"\n      :loading=\"loading\"\n      @click=\"savePriority\"\n    >\n      Update Priority\n    </v-btn>\n  </v-layout>\n</template>\n\n<script>\nimport AddDialog from '@/components/courses/AddDialog.vue'\n\nimport { mapActions } from 'vuex'\nimport { uploadBlockForm } from '@/components/courses/forms'\nimport { CurriculumActions } from '@/curriculum/CurriculumStore'\n\nimport Sortable from 'sortablejs'\n\nexport default {\n  components: {\n    AddDialog\n  },\n  data() {\n    return {\n      headers: [\n        { text: '', sortable: false },\n        { text: 'Priority', value: 'priority' },\n        { text: 'ID', value: 'id' },\n        { text: 'Unit ID', value: 'unit_id' },\n        { text: 'Key', value: 'key' },\n        { text: 'Name', value: 'name' },\n        { text: 'Description', value: 'description' },\n        { text: 'Created By', value: 'created_by' },\n        { text: 'Modified By', value: 'modified_by' }\n      ],\n      blocks: [],\n      orderChanged: false,\n      loading: false,\n      showDialog: false,\n      blockForm: uploadBlockForm,\n      pageLoading: true\n    }\n  },\n  async mounted() {\n    const { results } = await this.getBlocks([this.unitId])\n    this.blocks = results.map(b => { return { ...b } }).sort(function(a, b) {\n      return a.priority - b.priority\n    })\n    this.pageLoading = false\n    const table = document.querySelector('.v-datatable tbody')\n    Sortable.create(table, {\n      onEnd: this.updateBlocks,\n      handle: '.sortHandle'\n    })\n  },\n  computed: {\n    courseId() {\n      return ~~this.$route.params.courseId ? ~~this.$route.params.courseId : ''\n    },\n    unitId() {\n      return ~~this.$route.params.unitId ? ~~this.$route.params.unitId : ''\n    }\n  },\n  methods: {\n    ...mapActions([CurriculumActions.GET_BLOCKS, CurriculumActions.UPSERT_BLOCK]),\n    savePriority() {\n      this.loading = true\n      this.blocks.forEach(row => {\n        this.upsertBlock(row)\n      })\n      this.loading = false\n      this.orderChanged = false\n    },\n    updateBlocks({ newIndex, oldIndex }) {\n      this.orderChanged = true\n      const test = [...this.blocks]\n      this.blocks = []\n      const rowSelected = test.splice(oldIndex, 1)[0]\n      test.splice(newIndex, 0, rowSelected)\n      test.forEach((t, index) => {\n        t.priority = index\n        return t\n      })\n      this.$nextTick(() => {\n        this.blocks = [...test]\n      })\n    },\n    openDialog() {\n      this.showDialog = true\n    },\n    async closeDialog(val) {\n      this.showDialog = false\n    },\n    openLesson(blockId) {\n      this.$router.push('/curriculum/courses/' + this.courseId + '/unit/' + this.unitId + '/block/' + blockId)\n    },\n    async submitForm(val) {\n      val.unitId = this.unitId\n      await this.upsertBlock(val)\n\n      Object.keys(this.blockForm).forEach(index => {\n        this.blockForm[index] = ''\n      })\n      delete this.blockForm.unitId\n      this.showDialog = false\n      const data = await this.getBlocks([this.unitId])\n      this.blocks = data.results.slice()\n    }\n  }\n}\n</script>\n\n<style>\n.table {\n  text-align: left !important;\n}\n</style>\n"],"sourceRoot":"src/views/curriculum"}]}