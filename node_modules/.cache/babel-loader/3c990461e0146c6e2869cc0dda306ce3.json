{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/api/claim.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/api/claim.js","mtime":1551323450000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation GenerateToken($input: GenerateOneTimeTokenInput!) {\\n    generateOneTimeToken(input: $input)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { apolloClient } from '@/vue-apollo';\nimport gql from 'graphql-tag';\nvar mQuery = gql(_templateObject());\nexport default {\n  create: function create(_ref) {\n    var memberId = _ref.memberId,\n        tenantId = _ref.tenantId,\n        email = _ref.email,\n        type = _ref.type;\n    return apolloClient.mutate({\n      mutation: mQuery,\n      variables: {\n        input: {\n          tenantId: tenantId,\n          email: email,\n          type: type\n        }\n      }\n    });\n  }\n};",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/api/claim.js"],"names":["apolloClient","gql","mQuery","create","memberId","tenantId","email","type","mutate","mutation","variables","input"],"mappings":";;;;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,SAASD,GAAT,mBAAN;AAMA,eAAe;AACbE,UAAQ,sBAAyC;AAAA,QAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,QAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC/C,WAAOP,aAAaQ,MAAb,CAAoB;AACzBC,gBAAUP,MADe;AAEzBQ,iBAAW;AACTC,eAAO;AACLN,4BADK;AAELC,sBAFK;AAGLC;AAHK;AADE;AAFc,KAApB,CAAP;AAUD;AAZY,CAAf","sourcesContent":["import { apolloClient } from '@/vue-apollo'\nimport gql from 'graphql-tag'\n\nconst mQuery = gql`\n  mutation GenerateToken($input: GenerateOneTimeTokenInput!) {\n    generateOneTimeToken(input: $input)\n  }\n`\n\nexport default {\n  create: ({ memberId, tenantId, email, type }) => {\n    return apolloClient.mutate({\n      mutation: mQuery,\n      variables: {\n        input: {\n          tenantId,\n          email,\n          type\n        }\n      }\n    })\n  }\n}\n"]}]}