{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/booking/Create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/booking/Create.vue","mtime":1559146293000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { mapState } from 'vuex';\nimport DateSelector from '@/components/DateSelector.vue';\nimport TimeSelector from '@/components/TimeSelector.vue';\nimport UserAutocomplete from '@/components/UserAutocomplete.vue';\nimport { PROFILES_BY_MEMBER_IDS } from '@/graphql/member.gql';\nimport { GET_STATUS_LIST, GET_TYPE_LIST, SCHEDULE_BOOKING } from '@/graphql/Booking';\nexport default {\n  name: 'BookingCreateDialog',\n  components: {\n    DateSelector: DateSelector,\n    TimeSelector: TimeSelector,\n    UserAutocomplete: UserAutocomplete\n  },\n  data: function data() {\n    return {\n      locked: false,\n      snackbar: {\n        show: false,\n        message: undefined,\n        callback: undefined\n      },\n      booking: {\n        availabilityId: '',\n        end: {\n          date: null,\n          time: null\n        },\n        guest: null,\n        host: null,\n        profile: null,\n        start: {\n          date: null,\n          time: null\n        },\n        statusId: null,\n        typeKey: null,\n        costUnitId: null,\n        costFree: true,\n        cooldown: 0\n      },\n      search: {\n        guest: {\n          term: null,\n          results: []\n        },\n        host: {\n          term: null,\n          results: []\n        },\n        guestProfiles: []\n      },\n      show: false,\n      statusList: [],\n      typeList: [],\n      profileList: []\n    };\n  },\n  methods: {\n    assignHost: function assignHost(user) {\n      this.booking.host = user;\n    },\n    assignGuest: function () {\n      var _assignGuest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(user) {\n        var _this = this;\n\n        var input, result, profiles;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.booking.guest = user;\n                delete this.booking.profile;\n                this.profileList.length = 0;\n                input = {\n                  memberIds: [user.id]\n                };\n                this.locked = true;\n                _context.prev = 5;\n                _context.next = 8;\n                return this.$apollo.query({\n                  query: PROFILES_BY_MEMBER_IDS,\n                  variables: {\n                    input: input\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 8:\n                result = _context.sent;\n                profiles = _.get(result, 'data.lmsProfiles.results', []);\n                profiles.forEach(function (p) {\n                  return _this.profileList.push(p);\n                });\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](5);\n                console.warn('Failed loading profiles', _context.t0);\n                window.alert('Failed loading profiles');\n\n              case 17:\n                _context.prev = 17;\n                this.locked = false;\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 13, 17, 20]]);\n      }));\n\n      function assignGuest(_x) {\n        return _assignGuest.apply(this, arguments);\n      }\n\n      return assignGuest;\n    }(),\n    create: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var _this$booking, start, end, typeKey, statusId, host, guest, profile, costFree, costUnitId, _this$booking$cooldow, cooldown, theStart, theEnd, startDate, endDate, input, result, booking;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$booking = this.booking, start = _this$booking.start, end = _this$booking.end, typeKey = _this$booking.typeKey, statusId = _this$booking.statusId, host = _this$booking.host, guest = _this$booking.guest, profile = _this$booking.profile, costFree = _this$booking.costFree, costUnitId = _this$booking.costUnitId, _this$booking$cooldow = _this$booking.cooldown, cooldown = _this$booking$cooldow === void 0 ? 0 : _this$booking$cooldow;\n                theStart = moment(\"\".concat(start.date, \"T\").concat(start.time)).utc();\n                theEnd = moment(\"\".concat(start.date, \"T\").concat(end.time)).utc();\n\n                while (theEnd.isBefore(theEnd)) {\n                  theEnd = theEnd.add(1, 'days');\n                }\n\n                startDate = theStart.toISOString();\n                endDate = theEnd.toISOString();\n                input = {\n                  typeKey: typeKey,\n                  statusId: statusId,\n                  costFree: costFree,\n                  profileId: profile && profile.memberId === guest.id ? profile.id : undefined,\n                  costUnitId: costFree ? undefined : costUnitId,\n                  hostId: host.id,\n                  guestId: guest.id,\n                  start: startDate,\n                  end: endDate,\n                  cooldown: ~~cooldown\n                };\n                this.locked = true;\n                _context2.prev = 8;\n                _context2.next = 11;\n                return this.$apollo.mutate({\n                  mutation: SCHEDULE_BOOKING,\n                  variables: {\n                    input: input\n                  }\n                });\n\n              case 11:\n                result = _context2.sent;\n                booking = result.data.schedulingBookingUpsert;\n                this.snackbar = {\n                  show: true,\n                  message: 'Successfully created ',\n                  callback: {\n                    label: \"Booking \".concat(booking.id),\n                    fn: function fn() {\n                      return _this2.$router.push({\n                        path: \"/appointments/_\".concat(booking.id, \"/booking\")\n                      });\n                    }\n                  }\n                };\n                this.show = false;\n                _context2.next = 21;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](8);\n                console.warn({\n                  err: _context2.t0\n                });\n                this.snackbar = {\n                  show: true,\n                  message: 'Failed creating booking: ' + _context2.t0.message.replace('GraphQL error: ', '')\n                };\n\n              case 21:\n                _context2.prev = 21;\n                this.locked = false;\n                return _context2.finish(21);\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[8, 17, 21, 24]]);\n      }));\n\n      function create() {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }(),\n    updateStartDate: function updateStartDate(date) {\n      this.booking.start.date = this.booking.end.date = date;\n    },\n    updateStartTime: function updateStartTime(time) {\n      this.booking.start.time = time;\n    },\n    updateEndTime: function updateEndTime(time) {\n      this.booking.end.time = time;\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    principal: function principal(state) {\n      return state.user.principal;\n    }\n  }), {\n    ledgerUnits: function ledgerUnits() {\n      var _this3 = this;\n\n      var units = [{\n        id: 1,\n        name: 'US Dollar',\n        key: 'usd'\n      }, {\n        id: 1000,\n        tenantId: 1006,\n        name: 'Classroom token',\n        key: 'lesson'\n      }];\n      return units.filter(function (u) {\n        return !u.tenantId || u.tenantId === _this3.principal.tenantId;\n      });\n    }\n  }),\n  watch: {\n    snackbar: {\n      handler: function handler(updated, old) {\n        var show = updated.show,\n            message = updated.message,\n            callback = updated.callback;\n\n        if (!show && (message || callback)) {\n          this.snackbar = {\n            show: false,\n            message: undefined,\n            callback: undefined\n          };\n        }\n      },\n      deep: true\n    }\n  },\n  apollo: {\n    statusList: {\n      query: GET_STATUS_LIST,\n      update: function update(_ref) {\n        var bookingStatusList = _ref.bookingStatusList;\n        return bookingStatusList;\n      }\n    },\n    typeList: {\n      query: GET_TYPE_LIST,\n      update: function update(_ref2) {\n        var bookingTypeList = _ref2.bookingTypeList;\n        return bookingTypeList;\n      }\n    }\n  }\n};",{"version":3,"sources":["Create.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-flex xs12>\n    <v-snackbar\n      :timeout=\"8000\"\n      :top=\"true\"\n      :right=\"true\"\n      v-model=\"snackbar.show\"\n      class=\"snackbar\"\n    >\n      {{snackbar.message}}\n      <a\n        v-if=\"snackbar.callback\"\n        @click=\"snackbar.callback.fn\"\n      >\n        {{snackbar.callback.label}}\n      </a>\n      <v-btn\n        flat\n        color=\"pink\"\n        @click.native=\"snackbar.show = false\"\n      >Close</v-btn>\n    </v-snackbar>\n    <div class=\"team main-container\">\n      <v-layout\n        row\n        justify-end\n      >\n        <v-btn\n          @click=\"show = true\"\n          class=\"primary text-capitalize\"\n          flat\n          right\n          slot=\"activator\"\n        >\n          Create Booking\n        </v-btn>\n      </v-layout>\n      <v-dialog\n        v-model=\"show\"\n        width=\"50%\"\n        persistent\n      >\n        <v-card class=\"card-wrapper\">\n          <v-layout\n            row\n            justify-center\n          >\n            <h2>Create a New Booking</h2>\n          </v-layout>\n          <UserAutocomplete\n            :disabled=\"locked\"\n            @selected=\"assignHost\"\n            label=\"Host\"\n          />\n          <UserAutocomplete\n            :disabled=\"locked\"\n            @selected=\"assignGuest\"\n            label=\"Guest\"\n          />\n          <v-select\n            label=\"Learning Profile\"\n            :loading=\"locked\"\n            item-text=\"displayName\"\n            item-value=\"id\"\n            return-object\n            :disabled=\"profileList.length < 1 || locked\"\n            :items=\"profileList\"\n            v-model=\"booking.profile\"\n          />\n          <v-layout\n            row\n            justify-space-around\n          >\n            <DateSelector\n              :disabled=\"locked\"\n              @selected=\"updateStartDate\"\n              :selectedDate=\"booking.start.date\"\n              label=\"Select Date\"\n            />\n            <TimeSelector\n              @selected=\"updateStartTime\"\n              :disabled=\"!booking.start.date || locked\"\n              label=\"Select Start Time\"\n            />\n            <TimeSelector\n              @selected=\"updateEndTime\"\n              :disabled=\"!booking.start.date || locked\"\n              label=\"Select End Time\"\n            />\n          </v-layout>\n          <v-select\n            :disabled=\"locked\"\n            :items=\"statusList\"\n            label=\"Booking Status\"\n            item-text=\"name\"\n            item-value=\"id\"\n            v-model=\"booking.statusId\"\n          />\n          <v-select\n            :disabled=\"locked\"\n            :items=\"typeList\"\n            label=\"Booking Type\"\n            item-text=\"name\"\n            item-value=\"key\"\n            v-model=\"booking.typeKey\"\n          />\n          <v-layout\n            row\n            justify-space-around\n          >\n            <v-checkbox\n              :disabled=\"locked\"\n              v-model=\"booking.costFree\"\n              label=\"Cost Free\"\n            ></v-checkbox>\n            <v-select\n              :disabled=\"locked\"\n              v-if=\"!booking.costFree\"\n              :items=\"ledgerUnits\"\n              label=\"Cost Unit\"\n              item-text=\"name\"\n              item-value=\"id\"\n              v-model=\"booking.costUnitId\"\n            />\n          </v-layout>\n          <v-text-field\n            type=\"number\"\n            v-model=\"booking.cooldown\"\n            label=\"Cooldown\"\n            :persistent-hint=\"true\"\n            hint=\"In Seconds\"\n          />\n          <v-card-actions>\n            <v-layout\n              row\n              justify-end\n            >\n              <v-btn\n                class=\"primary text-capitalize\"\n                @click=\"create\"\n                :disabled=\"locked\"\n              >\n                Create\n              </v-btn>\n              <v-btn\n                class=\"error text-capitalize\"\n                @click=\"show = false\"\n                :disabled=\"locked\"\n              >\n                Cancel\n              </v-btn>\n            </v-layout>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n  </v-flex>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport moment from 'moment'\nimport { mapState } from 'vuex'\nimport DateSelector from '@/components/DateSelector.vue'\nimport TimeSelector from '@/components/TimeSelector.vue'\nimport UserAutocomplete from '@/components/UserAutocomplete.vue'\n\nimport { PROFILES_BY_MEMBER_IDS } from '@/graphql/member.gql'\nimport { GET_STATUS_LIST, GET_TYPE_LIST, SCHEDULE_BOOKING } from '@/graphql/Booking'\n\nexport default {\n  name: 'BookingCreateDialog',\n  components: { DateSelector, TimeSelector, UserAutocomplete },\n\n  data () {\n    return {\n      locked: false,\n      snackbar: {\n        show: false,\n        message: undefined,\n        callback: undefined\n      },\n      booking: {\n        availabilityId: '',\n        end: { date: null, time: null },\n        guest: null,\n        host: null,\n        profile: null,\n        start: { date: null, time: null },\n        statusId: null,\n        typeKey: null,\n        costUnitId: null,\n        costFree: true,\n        cooldown: 0\n      },\n      search: {\n        guest: { term: null, results: [] },\n        host: { term: null, results: [] },\n        guestProfiles: []\n      },\n      show: false,\n      statusList: [],\n      typeList: [],\n      profileList: []\n    }\n  },\n  methods: {\n    assignHost (user) { this.booking.host = user },\n    async assignGuest (user) {\n      this.booking.guest = user\n      delete this.booking.profile\n      this.profileList.length = 0\n      const input = {\n        memberIds: [user.id]\n      }\n      this.locked = true\n      try {\n        const result = await this.$apollo.query({\n          query: PROFILES_BY_MEMBER_IDS,\n          variables: { input },\n          fetchPolicy: 'network-only'\n        })\n        const profiles = _.get(result, 'data.lmsProfiles.results', [])\n        profiles.forEach(p => this.profileList.push(p))\n      } catch (err) {\n        console.warn('Failed loading profiles', err)\n        window.alert('Failed loading profiles')\n      } finally {\n        this.locked = false\n      }\n    },\n    async create () {\n      const {\n        start, end, typeKey, statusId,\n        host, guest, profile,\n        costFree, costUnitId, cooldown = 0\n      } = this.booking\n\n      const theStart = moment(`${start.date}T${start.time}`).utc()\n      let theEnd = moment(`${start.date}T${end.time}`).utc()\n      while (theEnd.isBefore(theEnd)) {\n        theEnd = theEnd.add(1, 'days')\n      }\n\n      const startDate = theStart.toISOString()\n      const endDate = theEnd.toISOString()\n\n      const input = {\n        typeKey,\n        statusId,\n        costFree,\n        profileId: profile && profile.memberId === guest.id ? profile.id : undefined,\n        costUnitId: costFree ? undefined : costUnitId,\n        hostId: host.id,\n        guestId: guest.id,\n        start: startDate,\n        end: endDate,\n        cooldown: ~~cooldown\n      }\n      this.locked = true\n      try {\n        const result = await this.$apollo.mutate({\n          mutation: SCHEDULE_BOOKING,\n          variables: {\n            input\n          }\n        })\n        const { data: { schedulingBookingUpsert: booking } } = result\n        this.snackbar = {\n          show: true,\n          message: 'Successfully created ',\n          callback: {\n            label: `Booking ${booking.id}`,\n            fn: () => this.$router.push({ path: `/appointments/_${booking.id}/booking` })\n          }\n        }\n        this.show = false\n      } catch (err) {\n        console.warn({ err })\n        this.snackbar = {\n          show: true,\n          message: 'Failed creating booking: ' + err.message.replace('GraphQL error: ', '')\n        }\n      } finally {\n        this.locked = false\n      }\n    },\n    updateStartDate (date) {\n      this.booking.start.date = this.booking.end.date = date\n    },\n    updateStartTime (time) { this.booking.start.time = time },\n    updateEndTime (time) { this.booking.end.time = time }\n  },\n  computed: {\n    ...mapState({\n      principal: state => state.user.principal\n    }),\n    ledgerUnits () {\n      const units = [{\n        id: 1,\n        name: 'US Dollar',\n        key: 'usd'\n      }, {\n        id: 1000,\n        tenantId: 1006,\n        name: 'Classroom token',\n        key: 'lesson'\n      }]\n      return units.filter(u => !u.tenantId || u.tenantId === this.principal.tenantId)\n    }\n  },\n  watch: {\n    snackbar: {\n      handler (updated, old) {\n        const { show, message, callback } = updated\n        if (!show && (message || callback)) {\n          this.snackbar = {\n            show: false,\n            message: undefined,\n            callback: undefined\n          }\n        }\n      },\n      deep: true\n    }\n  },\n  apollo: {\n    statusList: {\n      query: GET_STATUS_LIST,\n      update ({ bookingStatusList }) { return bookingStatusList }\n    },\n    typeList: {\n      query: GET_TYPE_LIST,\n      update ({ bookingTypeList }) { return bookingTypeList }\n    }\n  }\n}\n</script>\n<style scoped>\n.card-wrapper {\n  padding: 20px;\n}\n.snackbar a {\n  color: #ff4a9d;\n  margin-left: 3px;\n}\n</style>\n"],"sourceRoot":"src/components/booking"}]}