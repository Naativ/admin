{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/graphql/Contacts.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/graphql/Contacts.js","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation contactsUpsertEmail($input: EmailInput){\\n    contactsUpsertEmail(input: $input){\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation contactsUpsert($input: ContactUpsertInput!){ \\n    contactsUpsert(input: $input){\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var CONTACT_UPSERT = gql(_templateObject());\nexport var CONTACT_EMAIL_UPSERT = gql(_templateObject2());",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/graphql/Contacts.js"],"names":["gql","CONTACT_UPSERT","CONTACT_EMAIL_UPSERT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,iBAAiBD,GAAjB,mBAAN;AAQP,OAAO,IAAME,uBAAuBF,GAAvB,oBAAN","sourcesContent":["import gql from 'graphql-tag'\n\nexport const CONTACT_UPSERT = gql`\n  mutation contactsUpsert($input: ContactUpsertInput!){ \n    contactsUpsert(input: $input){\n      id\n    }\n  }\n`\n\nexport const CONTACT_EMAIL_UPSERT = gql`\n  mutation contactsUpsertEmail($input: EmailInput){\n    contactsUpsertEmail(input: $input){\n      id\n    }\n  }\n`\n"]}]}