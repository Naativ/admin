{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/users/UserPermissions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/users/UserPermissions.vue","mtime":1577329618152},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { upsertMemberAttribute, getMemberCredentials } from '@/users/users.gql';\nimport { allPermissions } from '@/graphql/AllPermissions.gql';\nimport { setPermissions } from '@/graphql/SetPermissions.gql';\nimport { getPermsByID } from '@/graphql/GetPermsByID.gql';\nimport { pathOr } from 'ramda';\nimport { mapState } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      allPossiblePermissions: [],\n      editing: false,\n      identityId: null,\n      loading: false,\n      parsedPermissions: [],\n      permissions: [],\n      saveActivator: false,\n      saveSpeedDial: false,\n      saving: false,\n      showConfirmationDialog: false,\n      snackbar: false,\n      snackbarMessage: ''\n    };\n  },\n  mounted: function mounted() {\n    this.loadPermissions();\n  },\n  computed: _objectSpread({\n    id: function id() {\n      return ~~this.$route.params.id;\n    }\n  }, mapState({\n    principalPermissions: function principalPermissions(state) {\n      return state.user.principal.permissions;\n    }\n  })),\n  methods: {\n    loadPermissions: function () {\n      var _loadPermissions = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var credentials;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                _context.next = 3;\n                return this.memberCredentials();\n\n              case 3:\n                credentials = _context.sent;\n                this.identityId = credentials.map(function (cMap) {\n                  return cMap.identityId;\n                });\n                _context.next = 7;\n                return this.getPermsByIdentityId();\n\n              case 7:\n                this.permissions = _context.sent;\n                this.parsedPermissions = this.principalPermissions.map(function (pMap) {\n                  pMap.hasPermission = _this.userPermissionCheck(pMap);\n                  return pMap;\n                });\n                this.loading = false;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadPermissions() {\n        return _loadPermissions.apply(this, arguments);\n      }\n\n      return loadPermissions;\n    }(),\n    getAllPermissions: function () {\n      var _getAllPermissions = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res, parsedRes;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$apollo.query({\n                  query: allPermissions,\n                  variables: {\n                    id: this.id\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                res = _context2.sent;\n                parsedRes = pathOr([], ['data', 'getAllPossiblePermissions'], res);\n                return _context2.abrupt(\"return\", parsedRes);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getAllPermissions() {\n        return _getAllPermissions.apply(this, arguments);\n      }\n\n      return getAllPermissions;\n    }(),\n    getPermsByIdentityId: function () {\n      var _getPermsByIdentityId = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res, parsedRes, permissions;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$apollo.query({\n                  query: getPermsByID,\n                  variables: {\n                    identityId: this.identityId[0]\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 2:\n                res = _context3.sent;\n                parsedRes = pathOr([], ['data', 'iamGetPermsByID'], res);\n                permissions = parsedRes.permissions;\n                return _context3.abrupt(\"return\", permissions);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getPermsByIdentityId() {\n        return _getPermsByIdentityId.apply(this, arguments);\n      }\n\n      return getPermsByIdentityId;\n    }(),\n    memberCredentials: function () {\n      var _memberCredentials = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var _ref, credentials;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$apollo.query({\n                  query: getMemberCredentials,\n                  variables: {\n                    input: {\n                      memberId: this.id\n                    }\n                  }\n                });\n\n              case 2:\n                _ref = _context4.sent;\n                credentials = _ref.data.getMemberCredentials.credentials;\n                return _context4.abrupt(\"return\", credentials);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function memberCredentials() {\n        return _memberCredentials.apply(this, arguments);\n      }\n\n      return memberCredentials;\n    }(),\n    upsertAttribute: function () {\n      var _upsertAttribute = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(attribute) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$apollo.mutate({\n                  mutation: upsertMemberAttribute,\n                  variables: {\n                    input: {\n                      id: attribute.id,\n                      key: attribute.key,\n                      value: attribute.value\n                    }\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function upsertAttribute(_x) {\n        return _upsertAttribute.apply(this, arguments);\n      }\n\n      return upsertAttribute;\n    }(),\n    saveData: function () {\n      var _saveData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var newPerms;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.saving = true;\n                newPerms = [];\n                this.parsedPermissions.map(function (ppMap) {\n                  if (ppMap.hasPermission) {\n                    newPerms.push(ppMap.id);\n                  }\n                });\n                _context6.prev = 3;\n                _context6.next = 6;\n                return this.$apollo.mutate({\n                  mutation: setPermissions,\n                  variables: {\n                    input: {\n                      identityId: this.identityId[0],\n                      permissionIds: newPerms\n                    }\n                  }\n                });\n\n              case 6:\n                this.snackbarMessage = 'Permissions successfully saved!';\n                this.snackbar = true;\n                _context6.next = 15;\n                break;\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](3);\n                this.snackbarMessage = 'An error occured while setting permissions';\n                this.snackbar = true;\n                console.error(_context6.t0);\n\n              case 15:\n                this.editing = false;\n                this.saving = false;\n                this.loadPermissions();\n\n              case 18:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[3, 10]]);\n      }));\n\n      function saveData() {\n        return _saveData.apply(this, arguments);\n      }\n\n      return saveData;\n    }(),\n    cancelEdit: function () {\n      var _cancelEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.editing = false;\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function cancelEdit() {\n        return _cancelEdit.apply(this, arguments);\n      }\n\n      return cancelEdit;\n    }(),\n    userPermissionCheck: function userPermissionCheck(permission) {\n      var pIdArr = this.permissions.map(function (pMap) {\n        return pMap.id;\n      });\n      var pCheck = pIdArr.indexOf(permission.id) > -1;\n      return pCheck;\n    }\n  }\n};",{"version":3,"sources":["UserPermissions.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container xs6>\n    <v-layout column justify-space-around>\n      <template>\n        <v-progress-linear id=\"loading-bar\" :class=\"loading ? '' : 'loading-bar-fade'\" :indeterminate=\"loading\" />\n        <v-card :loading=\"loading\" class=\"permissions\">\n          <v-btn\n            :class=\"{ editbtn: true, sm: this.$vuetify.breakpoint.name === 'xs' }\"\n            v-if=\"!editing\"\n            absolute\n            dark\n            fab\n            top\n            right\n            color=\"pink\"\n            @click=\"editing = true\"\n          >\n            <v-icon>edit</v-icon>\n          </v-btn>\n          <v-speed-dial\n            absolute\n            dark\n            fab\n            top\n            right\n            color=\"pink\"\n            v-model=\"saveSpeedDial\"\n            direction=\"bottom\"\n            :open-on-hover=\"true\"\n            transition=\"slide-y-transition\"\n            :disabled=\"!saving\"\n            v-else\n            class=\"edit-speed-dial\"\n          >\n            <v-btn slot=\"activator\" v-model=\"saveActivator\" color=\"pink\" dark fab>\n              <v-icon>save</v-icon>\n              <v-icon>close</v-icon>\n            </v-btn>\n            <v-btn fab dark small color=\"green\" @click=\"saveData\">\n              <v-icon>check</v-icon>\n            </v-btn>\n            <v-btn fab dark small color=\"red\" @click=\"cancelEdit\">\n              <v-icon>cancel</v-icon>\n            </v-btn>\n          </v-speed-dial>\n          <v-layout v-for=\"(d, i) in parsedPermissions\" :key=\"i\" column wrap >\n            <v-checkbox\n              :label=\"d.name\"\n              v-model=\"d.hasPermission\"\n              class=\"text\"\n              :box=\"editing\"\n              :regular=\"!editing\"\n              :disabled=\"!editing\"\n            ></v-checkbox>\n          </v-layout>\n          <v-card-text v-if=\"!parsedPermissions.length && !loading\">There are no permissions for this member</v-card-text>\n        </v-card>\n      </template>\n    </v-layout>\n    <v-snackbar :timeout=\"8000\" :top=\"true\" :right=\"true\" v-model=\"snackbar\">\n      {{snackbarMessage}}\n      <v-btn flat color=\"pink\" @click.native=\"snackbar = false\">Close</v-btn>\n    </v-snackbar>\n    <v-dialog max-width=\"25vw\" v-model=\"showConfirmationDialog\">\n      <v-card>\n        <v-card-text class=\"text-xs-center\">\n          <v-card-text>Are you sure you want to remove this attribute?</v-card-text>\n          <v-btn color=\"error\" @click=\"removeOneAttribute()\">Yes</v-btn>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport { upsertMemberAttribute, getMemberCredentials } from '@/users/users.gql'\nimport { allPermissions } from '@/graphql/AllPermissions.gql'\nimport { setPermissions } from '@/graphql/SetPermissions.gql'\nimport { getPermsByID } from '@/graphql/GetPermsByID.gql'\n\nimport { pathOr } from 'ramda'\nimport { mapState } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      allPossiblePermissions: [],\n      editing: false,\n      identityId: null,\n      loading: false,\n      parsedPermissions: [],\n      permissions: [],\n      saveActivator: false,\n      saveSpeedDial: false,\n      saving: false,\n      showConfirmationDialog: false,\n      snackbar: false,\n      snackbarMessage: ''\n    }\n  },\n  mounted() {\n    this.loadPermissions()\n  },\n  computed: {\n    id() {\n      return ~~this.$route.params.id\n    },\n    ...mapState({\n      principalPermissions: state => state.user.principal.permissions\n    })\n  },\n  methods: {\n    async loadPermissions() {\n      this.loading = true\n      const credentials = await this.memberCredentials()\n      this.identityId = credentials.map(cMap => cMap.identityId)\n      this.permissions = await this.getPermsByIdentityId()\n      this.parsedPermissions = this.principalPermissions.map(pMap => {\n        pMap.hasPermission = this.userPermissionCheck(pMap)\n        return pMap\n      })\n      this.loading = false\n    },\n    async getAllPermissions() {\n      const res = await this.$apollo.query({\n        query: allPermissions,\n        variables: {\n          id: this.id\n        },\n        fetchPolicy: 'network-only'\n      })\n      const parsedRes = pathOr([], ['data', 'getAllPossiblePermissions'], res)\n\n      return parsedRes\n    },\n    async getPermsByIdentityId() {\n      const res = await this.$apollo.query({\n        query: getPermsByID,\n        variables: {\n          identityId: this.identityId[0]\n        },\n        fetchPolicy: 'network-only'\n      })\n      const parsedRes = pathOr([], ['data', 'iamGetPermsByID'], res)\n      const { permissions } = parsedRes\n      return permissions\n    },\n    async memberCredentials() {\n      const { data: { getMemberCredentials: { credentials } } } = await this.$apollo.query({\n        query: getMemberCredentials,\n        variables: {\n          input: {\n            memberId: this.id\n          }\n        }\n      })\n      return credentials\n    },\n    async upsertAttribute(attribute) {\n      await this.$apollo.mutate({\n        mutation: upsertMemberAttribute,\n        variables: {\n          input: {\n            id: attribute.id,\n            key: attribute.key,\n            value: attribute.value\n          }\n        }\n      })\n    },\n    async saveData() {\n      this.saving = true\n      let newPerms = []\n      this.parsedPermissions.map(ppMap => {\n        if (ppMap.hasPermission) {\n          newPerms.push(ppMap.id)\n        }\n      })\n      try {\n        await this.$apollo.mutate({\n          mutation: setPermissions,\n          variables: {\n            input: {\n              identityId: this.identityId[0],\n              permissionIds: newPerms\n            }\n          }\n        })\n        this.snackbarMessage = 'Permissions successfully saved!'\n        this.snackbar = true\n      } catch (error) {\n        this.snackbarMessage = 'An error occured while setting permissions'\n        this.snackbar = true\n        console.error(error)\n      }\n      this.editing = false\n      this.saving = false\n      this.loadPermissions()\n    },\n    async cancelEdit () {\n      this.editing = false\n    },\n    userPermissionCheck(permission) {\n      const pIdArr = this.permissions.map(pMap => pMap.id)\n      const pCheck = pIdArr.indexOf(permission.id) > -1\n      return pCheck\n    }\n  }\n}\n</script>\n\n<style>\n.permissions {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 18px 0px 18px 100px;\n}\n\n.attribute-remove-button-center {\n  text-align: center;\n}\n\n.text {\n  padding: 0 10px;\n}\n.editbtn.sm {\n  top: -5px !important;\n}\n.editbtn {\n  top: -13px !important;\n  right: -28px;\n}\n.edit-speed-dial {\n  top: 15px !important;\n  right: -28px;\n}\n#loading-bar {\n  top: -14px;\n  position: relative;\n  margin: 0;\n  opacity: 1;\n}\n.loading-bar-fade {\n  opacity: 0 !important;\n  transition: opacity 1500ms ease-out;\n}\n</style>\n"],"sourceRoot":"src/views/users"}]}