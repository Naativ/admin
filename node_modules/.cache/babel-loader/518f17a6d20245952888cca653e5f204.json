{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/users/users.gql.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/users/users.gql.js","mtime":1575760925478},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject28() {\n  var data = _taggedTemplateLiteral([\"\\nquery getMembersOfAssociation($input: MemberAssociationInput) {\\n  getMemberAssociation(input: $input) {\\n    name\\n    memberships{\\n      metadata\\n      memberId\\n      member {\\n        displayName\\n      }\\n      role {\\n        name\\n      }\\n    }\\n    type {\\n      name\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject28 = function _templateObject28() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject27() {\n  var data = _taggedTemplateLiteral([\"\\nquery getAssociation($input: MemberSearchCondition!){\\n  members(condition: $input) {\\n    nodes {\\n      id\\n      name\\n      associations {\\n        id\\n        association {\\n          name\\n          key\\n          type {\\n            id\\n            name\\n            key\\n          }\\n        }\\n        associationId\\n        memberId\\n        member {\\n          id\\n          displayName\\n          name\\n        }\\n        role {\\n          id\\n          name\\n          key\\n        }\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject27 = function _templateObject27() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject26() {\n  var data = _taggedTemplateLiteral([\"\\n  query getMemberAssociation($input: MemberAssociationInput!) {\\n    getMemberAssociation(input: $input) {\\n      id\\n      typeId\\n      name\\n      key\\n      metadata\\n      createdOn\\n      modifiedOn\\n    }\\n  }\\n\"]);\n\n  _templateObject26 = function _templateObject26() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject25() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addMemberAssociation($input: MemberAssociationInput!) {\\n    addMemberAssociation(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject25 = function _templateObject25() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject24() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createSlug($createSlugInput: SlugInput!) {\\n    addMemberSlug(input: $createSlugInput) {\\n      id\\n      slug\\n      priority\\n      memberId\\n    }\\n  }\\n\"]);\n\n  _templateObject24 = function _templateObject24() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject23() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateSlug($updateSlugInput: UpdateSlugInput!) {\\n    updateMemberSlug(input: $updateSlugInput){\\n      id\\n      slug\\n      priority\\n      memberId\\n    }\\n  }\\n\"]);\n\n  _templateObject23 = function _templateObject23() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject22() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addDuration($input: DurationInput) {\\n    addDuration(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject22 = function _templateObject22() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject21() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation removeDuration($input: DurationInput) {\\n    removeDuration(input: $input) {\\n      id\\n      priority\\n    }\\n  }\\n\"]);\n\n  _templateObject21 = function _templateObject21() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject20() {\n  var data = _taggedTemplateLiteral([\"\\n  query Durations($input: ScheduleBookingDurationInput!) {\\n    durations: schedulingBookingDurations(input: $input){\\n      hostId\\n      unit{\\n        id\\n        name\\n        key\\n      }\\n      bookingType{\\n        id\\n        key\\n        name\\n      }\\n      rates {\\n        id\\n        amount\\n        duration\\n        priority\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject20 = function _templateObject20() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject19() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation linkAppointmentToPayout($input: AppointmentToPayoutInput) {\\n    linkAppointmentToPayout(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject19 = function _templateObject19() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createPayoutForMember($input: PayoutInput) {\\n    createPayoutForMember(input: $input) {\\n      id\\n      status\\n      currency\\n      amount\\n      note\\n      createdOn\\n    }\\n  }\\n\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\"\\n  query membersByIds($ids: [Int]) {\\n    membersByIds(ids: $ids) {\\n      id\\n      payouts {\\n        id\\n        status\\n        currency\\n        amount\\n        note\\n        createdOn\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation treePatch($input: MemberTreePatchInput!) {\\n    memberTreePatch(input: $input) {\\n      id\\n      tenantId\\n      firstName\\n      sponsorOid\\n    }\\n  }\\n\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation upsertMemberAttribute($input: MemberAttributeInput!) {\\n    upsertMemberAttribute(input: $input) {\\n      id\\n      key\\n      value\\n    }\\n  }\\n\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation removeMemberAttribute($input: RemoveMemberAttributeInput!) {\\n    removeMemberAttribute(input: $input) {\\n      id\\n      key\\n      memberId\\n    }\\n  }\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n  query getMemberAttributes($input: GetMemberAttributesInput!) {\\n    getMemberAttributes(input: $input) {\\n      id\\n      key\\n      value\\n    }\\n  }\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePhone($input: ContactPhoneInput!) {\\n    updatePhoneNumber(input: $input) {\\n      id\\n      number\\n      contactId\\n    }\\n  }\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createPhone($input: ContactPhoneInput!) {\\n    contactPhoneUpsert(input: $input) {\\n      id\\n      number\\n      contactId\\n    }\\n  }\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  query phoneNumberByContact($input: ContactOrTenantInput) {\\n    phoneNumberByContact(input: $input) {\\n      id\\n      number\\n      contactId\\n    }\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateAddress($addressInput: AddressInput!) {\\n    updateAddress(input: $addressInput) {\\n      id\\n      name\\n      street\\n      street2\\n      city\\n      province\\n      postalCode\\n      country\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  query addressByContactOrTenant($addressByContactOrTenant: ContactOrTenantInput!) {\\n    addressByContactOrTenant(input: $addressByContactOrTenant) {\\n      id\\n      name\\n      street\\n      street2\\n      city\\n      province\\n      postalCode\\n      country\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  query getMemberCredentials($input: getMemberCredentialsInput!) {\\n    getMemberCredentials(input: $input) {\\n      tenantId\\n      credentials {\\n        id\\n        identityId\\n        username\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation adjustTags($input: MemberTagAdjustmentInput!) {\\n    adjustTags(input: $input) {\\n      id\\n      name\\n      tags\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateMemberSubset($input: MemberInfoInputSubset!) {\\n    updateMemberSubset(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateMember($input: MemberInfoInput!) {\\n    updateMember(input: $input) {\\n      id\\n      displayName\\n      name\\n      firstName\\n      lastName\\n      slug\\n      timezoneId\\n      languageId\\n      legalLocaleId\\n      contactEmail\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query Appointments($input: AppointmentQuery!) {\\n    appointments(input: $input) {\\n      id\\n      host {\\n        id\\n        mrn\\n        displayName\\n        contactEmail\\n      }\\n      participants {\\n        id\\n        mrn\\n        displayName\\n        contactEmail\\n      }\\n      createdOn\\n      scheduledDate\\n      startTime\\n      endTime\\n      canceled\\n      canceledReason\\n      timeLimit\\n      maxParticipant\\n      type\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query Surveys($input: SurveyResponseSearch!) {\\n    surveyResponse(input: $input) {\\n      id\\n      surveyId\\n      modifiedOn\\n      answers {\\n        questionName\\n        values {\\n          value\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query members($memberCon: MemberSearchCondition!) {\\n    members(condition: $memberCon) {\\n      nodes {\\n        id\\n        displayName\\n        name\\n        firstName\\n        lastName\\n        contactEmail\\n        contacts {\\n          id\\n          memberId\\n          tenantId\\n          emails {\\n            email\\n          }\\n        }\\n        birthdate\\n        statusId\\n        status\\n        slugs(priority: 0){\\n          id\\n          priority\\n          slug\\n        }\\n        tenantOid\\n        sponsorOid\\n        mrn\\n        profileUrl\\n        createdOn\\n        joinedOn\\n        timezoneId\\n        languageId\\n        legalLocaleId\\n        tags\\n        claimedOn\\n        tenantId\\n      }\\n      totalCount\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar gql = require('graphql-tag');\n\nexport var searchUsers = gql(_templateObject());\nexport var getSurveys = gql(_templateObject2());\nexport var getAppointments = gql(_templateObject3());\nexport var updateMember = gql(_templateObject4());\nexport var updateMemberSubset = gql(_templateObject5());\nexport var adjustTags = gql(_templateObject6());\nexport var getMemberCredentials = gql(_templateObject7());\nexport var getAddress = gql(_templateObject8());\nexport var updateAddress = gql(_templateObject9());\nexport var getPhone = gql(_templateObject10());\nexport var createPhone = gql(_templateObject11());\nexport var updatePhone = gql(_templateObject12());\nexport var getMemberAttribute = gql(_templateObject13());\nexport var removeMemberAttribute = gql(_templateObject14());\nexport var upsertMemberAttribute = gql(_templateObject15());\nexport var treePatch = gql(_templateObject16());\nexport var getMemberPayout = gql(_templateObject17());\nexport var createMemberPayout = gql(_templateObject18());\nexport var linkAppointmentToPayout = gql(_templateObject19());\nexport var queryDurations = gql(_templateObject20());\nexport var removeDuration = gql(_templateObject21());\nexport var addDuration = gql(_templateObject22());\nexport var updateSlug = gql(_templateObject23());\nexport var createSlug = gql(_templateObject24());\nexport var addMemberAssociation = gql(_templateObject25());\nexport var associationsSearch = gql(_templateObject26());\nexport var getAssociation = gql(_templateObject27()); // if ID property is queried on member, it will break and not throw any sort of trace\n// https://github.com/apollographql/apollo-client/pull/4895/files\n\nexport var GET_MEMBERS_OF_ASSN = gql(_templateObject28());",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/users/users.gql.js"],"names":["gql","require","searchUsers","getSurveys","getAppointments","updateMember","updateMemberSubset","adjustTags","getMemberCredentials","getAddress","updateAddress","getPhone","createPhone","updatePhone","getMemberAttribute","removeMemberAttribute","upsertMemberAttribute","treePatch","getMemberPayout","createMemberPayout","linkAppointmentToPayout","queryDurations","removeDuration","addDuration","updateSlug","createSlug","addMemberAssociation","associationsSearch","getAssociation","GET_MEMBERS_OF_ASSN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAMC,QAAQ,aAAR,CAAZ;;AAEA,OAAO,IAAMC,cAAcF,GAAd,mBAAN;AA4CP,OAAO,IAAMG,aAAaH,GAAb,oBAAN;AAgBP,OAAO,IAAMI,kBAAkBJ,GAAlB,oBAAN;AA6BP,OAAO,IAAMK,eAAeL,GAAf,oBAAN;AAiBP,OAAO,IAAMM,qBAAqBN,GAArB,oBAAN;AAQP,OAAO,IAAMO,aAAaP,GAAb,oBAAN;AAUP,OAAO,IAAMQ,uBAAuBR,GAAvB,oBAAN;AAaP,OAAO,IAAMS,aAAaT,GAAb,oBAAN;AAeP,OAAO,IAAMU,gBAAgBV,GAAhB,oBAAN;AAeP,OAAO,IAAMW,WAAWX,GAAX,qBAAN;AASP,OAAO,IAAMY,cAAcZ,GAAd,qBAAN;AAUP,OAAO,IAAMa,cAAcb,GAAd,qBAAN;AAUP,OAAO,IAAMc,qBAAqBd,GAArB,qBAAN;AAUP,OAAO,IAAMe,wBAAwBf,GAAxB,qBAAN;AAUP,OAAO,IAAMgB,wBAAwBhB,GAAxB,qBAAN;AAUP,OAAO,IAAMiB,YAAYjB,GAAZ,qBAAN;AAWP,OAAO,IAAMkB,kBAAkBlB,GAAlB,qBAAN;AAgBP,OAAO,IAAMmB,qBAAqBnB,GAArB,qBAAN;AAaP,OAAO,IAAMoB,0BAA0BpB,GAA1B,qBAAN;AAQP,OAAO,IAAMqB,iBAAiBrB,GAAjB,qBAAN;AAwBP,OAAO,IAAMsB,iBAAiBtB,GAAjB,qBAAN;AASP,OAAO,IAAMuB,cAAcvB,GAAd,qBAAN;AAQP,OAAO,IAAMwB,aAAaxB,GAAb,qBAAN;AAWP,OAAO,IAAMyB,aAAazB,GAAb,qBAAN;AAWP,OAAO,IAAM0B,uBAAuB1B,GAAvB,qBAAN;AAQP,OAAO,IAAM2B,qBAAqB3B,GAArB,qBAAN;AAcP,OAAO,IAAM4B,iBAAiB5B,GAAjB,qBAAN,C,CAmCP;AACA;;AACA,OAAO,IAAM6B,sBAAsB7B,GAAtB,qBAAN","sourcesContent":["const gql = require('graphql-tag')\n\nexport const searchUsers = gql`\n  query members($memberCon: MemberSearchCondition!) {\n    members(condition: $memberCon) {\n      nodes {\n        id\n        displayName\n        name\n        firstName\n        lastName\n        contactEmail\n        contacts {\n          id\n          memberId\n          tenantId\n          emails {\n            email\n          }\n        }\n        birthdate\n        statusId\n        status\n        slugs(priority: 0){\n          id\n          priority\n          slug\n        }\n        tenantOid\n        sponsorOid\n        mrn\n        profileUrl\n        createdOn\n        joinedOn\n        timezoneId\n        languageId\n        legalLocaleId\n        tags\n        claimedOn\n        tenantId\n      }\n      totalCount\n    }\n  }\n`\n\nexport const getSurveys = gql`\n  query Surveys($input: SurveyResponseSearch!) {\n    surveyResponse(input: $input) {\n      id\n      surveyId\n      modifiedOn\n      answers {\n        questionName\n        values {\n          value\n        }\n      }\n    }\n  }\n`\n\nexport const getAppointments = gql`\n  query Appointments($input: AppointmentQuery!) {\n    appointments(input: $input) {\n      id\n      host {\n        id\n        mrn\n        displayName\n        contactEmail\n      }\n      participants {\n        id\n        mrn\n        displayName\n        contactEmail\n      }\n      createdOn\n      scheduledDate\n      startTime\n      endTime\n      canceled\n      canceledReason\n      timeLimit\n      maxParticipant\n      type\n    }\n  }\n`\n\nexport const updateMember = gql`\n  mutation updateMember($input: MemberInfoInput!) {\n    updateMember(input: $input) {\n      id\n      displayName\n      name\n      firstName\n      lastName\n      slug\n      timezoneId\n      languageId\n      legalLocaleId\n      contactEmail\n    }\n  }\n`\n\nexport const updateMemberSubset = gql`\n  mutation updateMemberSubset($input: MemberInfoInputSubset!) {\n    updateMemberSubset(input: $input) {\n      id\n    }\n  }\n`\n\nexport const adjustTags = gql`\n  mutation adjustTags($input: MemberTagAdjustmentInput!) {\n    adjustTags(input: $input) {\n      id\n      name\n      tags\n    }\n  }\n`\n\nexport const getMemberCredentials = gql`\n  query getMemberCredentials($input: getMemberCredentialsInput!) {\n    getMemberCredentials(input: $input) {\n      tenantId\n      credentials {\n        id\n        identityId\n        username\n      }\n    }\n  }\n`\n\nexport const getAddress = gql`\n  query addressByContactOrTenant($addressByContactOrTenant: ContactOrTenantInput!) {\n    addressByContactOrTenant(input: $addressByContactOrTenant) {\n      id\n      name\n      street\n      street2\n      city\n      province\n      postalCode\n      country\n    }\n  }\n`\n\nexport const updateAddress = gql`\n  mutation updateAddress($addressInput: AddressInput!) {\n    updateAddress(input: $addressInput) {\n      id\n      name\n      street\n      street2\n      city\n      province\n      postalCode\n      country\n    }\n  }\n`\n\nexport const getPhone = gql`\n  query phoneNumberByContact($input: ContactOrTenantInput) {\n    phoneNumberByContact(input: $input) {\n      id\n      number\n      contactId\n    }\n  }\n`\nexport const createPhone = gql`\n  mutation createPhone($input: ContactPhoneInput!) {\n    contactPhoneUpsert(input: $input) {\n      id\n      number\n      contactId\n    }\n  }\n`\n\nexport const updatePhone = gql`\n  mutation updatePhone($input: ContactPhoneInput!) {\n    updatePhoneNumber(input: $input) {\n      id\n      number\n      contactId\n    }\n  }\n`\n\nexport const getMemberAttribute = gql`\n  query getMemberAttributes($input: GetMemberAttributesInput!) {\n    getMemberAttributes(input: $input) {\n      id\n      key\n      value\n    }\n  }\n`\n\nexport const removeMemberAttribute = gql`\n  mutation removeMemberAttribute($input: RemoveMemberAttributeInput!) {\n    removeMemberAttribute(input: $input) {\n      id\n      key\n      memberId\n    }\n  }\n`\n\nexport const upsertMemberAttribute = gql`\n  mutation upsertMemberAttribute($input: MemberAttributeInput!) {\n    upsertMemberAttribute(input: $input) {\n      id\n      key\n      value\n    }\n  }\n`\n\nexport const treePatch = gql`\n  mutation treePatch($input: MemberTreePatchInput!) {\n    memberTreePatch(input: $input) {\n      id\n      tenantId\n      firstName\n      sponsorOid\n    }\n  }\n`\n\nexport const getMemberPayout = gql`\n  query membersByIds($ids: [Int]) {\n    membersByIds(ids: $ids) {\n      id\n      payouts {\n        id\n        status\n        currency\n        amount\n        note\n        createdOn\n      }\n    }\n  }\n`\n\nexport const createMemberPayout = gql`\n  mutation createPayoutForMember($input: PayoutInput) {\n    createPayoutForMember(input: $input) {\n      id\n      status\n      currency\n      amount\n      note\n      createdOn\n    }\n  }\n`\n\nexport const linkAppointmentToPayout = gql`\n  mutation linkAppointmentToPayout($input: AppointmentToPayoutInput) {\n    linkAppointmentToPayout(input: $input) {\n      id\n    }\n  }\n`\n\nexport const queryDurations = gql`\n  query Durations($input: ScheduleBookingDurationInput!) {\n    durations: schedulingBookingDurations(input: $input){\n      hostId\n      unit{\n        id\n        name\n        key\n      }\n      bookingType{\n        id\n        key\n        name\n      }\n      rates {\n        id\n        amount\n        duration\n        priority\n      }\n    }\n  }\n`\n\nexport const removeDuration = gql`\n  mutation removeDuration($input: DurationInput) {\n    removeDuration(input: $input) {\n      id\n      priority\n    }\n  }\n`\n\nexport const addDuration = gql`\n  mutation addDuration($input: DurationInput) {\n    addDuration(input: $input) {\n      id\n    }\n  }\n`\n\nexport const updateSlug = gql`\n  mutation updateSlug($updateSlugInput: UpdateSlugInput!) {\n    updateMemberSlug(input: $updateSlugInput){\n      id\n      slug\n      priority\n      memberId\n    }\n  }\n`\n\nexport const createSlug = gql`\n  mutation createSlug($createSlugInput: SlugInput!) {\n    addMemberSlug(input: $createSlugInput) {\n      id\n      slug\n      priority\n      memberId\n    }\n  }\n`\n\nexport const addMemberAssociation = gql`\n  mutation addMemberAssociation($input: MemberAssociationInput!) {\n    addMemberAssociation(input: $input) {\n      id\n    }\n  }\n`\n\nexport const associationsSearch = gql`\n  query getMemberAssociation($input: MemberAssociationInput!) {\n    getMemberAssociation(input: $input) {\n      id\n      typeId\n      name\n      key\n      metadata\n      createdOn\n      modifiedOn\n    }\n  }\n`\n\nexport const getAssociation = gql`\nquery getAssociation($input: MemberSearchCondition!){\n  members(condition: $input) {\n    nodes {\n      id\n      name\n      associations {\n        id\n        association {\n          name\n          key\n          type {\n            id\n            name\n            key\n          }\n        }\n        associationId\n        memberId\n        member {\n          id\n          displayName\n          name\n        }\n        role {\n          id\n          name\n          key\n        }\n      }\n    }\n  }\n}\n`\n\n// if ID property is queried on member, it will break and not throw any sort of trace\n// https://github.com/apollographql/apollo-client/pull/4895/files\nexport const GET_MEMBERS_OF_ASSN = gql`\nquery getMembersOfAssociation($input: MemberAssociationInput) {\n  getMemberAssociation(input: $input) {\n    name\n    memberships{\n      metadata\n      memberId\n      member {\n        displayName\n      }\n      role {\n        name\n      }\n    }\n    type {\n      name\n    }\n  }\n}\n`\n"]}]}