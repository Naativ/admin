{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/SalesDataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/SalesDataTable.vue","mtime":1574205365000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'SalesDataTable',\n  props: {\n    sales: {\n      type: Array,\n      required: true\n    },\n    loading: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      editingArr: [],\n      headers: [{\n        text: 'Date',\n        value: 'date'\n      }, {\n        text: 'Order ID',\n        value: 'orderId'\n      }, // actually providerOid\n      {\n        text: 'Sale Total',\n        value: 'total'\n      }, {\n        text: 'Total Points',\n        value: 'points'\n      }, {\n        text: 'Commissionable Total',\n        value: 'comTotal'\n      }, {\n        text: 'Commissionable Points',\n        value: 'comPoints'\n      }, {\n        text: 'Seller Name',\n        value: 'displayName'\n      }, {\n        text: 'Seller Email',\n        value: 'contactEmail'\n      }, {\n        text: 'Actions',\n        value: null,\n        sortable: false\n      }],\n      overrideValuesArr: []\n    };\n  },\n  methods: {\n    lineItemsAmount: function lineItemsAmount(lineItems) {\n      if (!lineItems) {\n        lineItems = [];\n      }\n\n      var totalAmount = lineItems.map(function (item) {\n        return item.total;\n      });\n      return totalAmount.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n    },\n    override: function override(props) {\n      this.$set(this.editingArr, \"\".concat(props.index), !this.editingArr[props.index]); // TODO this.$apollo.mutate({\n      //   mutation: SALES_OVERRIDE,\n      //   variables: {\n      //     input: {\n      //       TBD\n      //     }\n      //   }\n      // })\n    },\n    reprocess: function reprocess(props) {// console.log('reprocess', props)\n      // TODO this.$apollo.query({\n      //   query: SALES_REPROCESS,\n      //   variables: {\n      //     input: {\n      //     }\n      //   }\n      // })\n    },\n    textFieldInputHandle: function textFieldInputHandle(props, e) {\n      var index = props.index,\n          name = props.name;\n      this.overrideValuesArr[index][name] = e;\n    }\n  },\n  watch: {\n    sales: {\n      handler: function handler() {\n        var _this = this;\n\n        var overrideValues = Array(this.sales.length).fill({\n          awardedDate: null,\n          totalAmount: null,\n          commissionableAmount: null,\n          commissionablePoints: null\n        });\n        overrideValues.forEach(function (orVal, i) {\n          _this.$set(_this.overrideValuesArr, i, orVal);\n        });\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["SalesDataTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA,eAAA;AACA,QAAA,gBADA;AAEA,SAAA;AACA,WAAA;AACA,YAAA,KADA;AAEA,gBAAA;AAFA,KADA;AAKA,aAAA;AACA,YAAA,OADA;AAEA,gBAAA;AAFA;AALA,GAFA;AAYA,MAZA,kBAYA;AACA,WAAA;AACA,kBAAA,EADA;AAEA,eAAA,CACA;AAAA,cAAA,MAAA;AAAA,eAAA;AAAA,OADA,EAEA;AAAA,cAAA,UAAA;AAAA,eAAA;AAAA,OAFA,EAEA;AACA;AAAA,cAAA,YAAA;AAAA,eAAA;AAAA,OAHA,EAIA;AAAA,cAAA,cAAA;AAAA,eAAA;AAAA,OAJA,EAKA;AAAA,cAAA,sBAAA;AAAA,eAAA;AAAA,OALA,EAMA;AAAA,cAAA,uBAAA;AAAA,eAAA;AAAA,OANA,EAOA;AAAA,cAAA,aAAA;AAAA,eAAA;AAAA,OAPA,EAQA;AAAA,cAAA,cAAA;AAAA,eAAA;AAAA,OARA,EASA;AAAA,cAAA,SAAA;AAAA,eAAA,IAAA;AAAA,kBAAA;AAAA,OATA,CAFA;AAaA,yBAAA;AAbA,KAAA;AAeA,GA5BA;AA6BA,WAAA;AACA,mBADA,2BACA,SADA,EACA;AACA,UAAA,CAAA,SAAA,EAAA;AACA,oBAAA,EAAA;AACA;;AACA,UAAA,cAAA,UAAA,GAAA,CAAA,gBAAA;AACA,eAAA,KAAA,KAAA;AACA,OAFA,CAAA;AAGA,aAAA,YAAA,MAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,IAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AACA,KATA;AAUA,YAVA,oBAUA,KAVA,EAUA;AACA,WAAA,IAAA,CAAA,KAAA,UAAA,YAAA,MAAA,KAAA,GAAA,CAAA,KAAA,UAAA,CAAA,MAAA,KAAA,CAAA,EADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KApBA;AAqBA,aArBA,qBAqBA,KArBA,EAqBA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA9BA;AA+BA,wBA/BA,gCA+BA,KA/BA,EA+BA,CA/BA,EA+BA;AAAA,UACA,KADA,GACA,KADA,CACA,KADA;AAAA,UACA,IADA,GACA,KADA,CACA,IADA;AAEA,WAAA,iBAAA,CAAA,KAAA,EAAA,IAAA,IAAA,CAAA;AACA;AAlCA,GA7BA;AAiEA,SAAA;AACA,WAAA;AACA,eAAA,mBAAA;AAAA;;AACA,YAAA,iBAAA,MAAA,KAAA,KAAA,CAAA,MAAA,EAAA,IAAA,CAAA;AACA,uBAAA,IADA;AAEA,uBAAA,IAFA;AAGA,gCAAA,IAHA;AAIA,gCAAA;AAJA,SAAA,CAAA;AAMA,uBAAA,OAAA,CAAA,UAAA,KAAA,EAAA,CAAA,EAAA;AACA,gBAAA,IAAA,CAAA,MAAA,iBAAA,EAAA,CAAA,EAAA,KAAA;AACA,SAFA;AAGA,OAXA;AAYA,YAAA;AAZA;AADA;AAjEA,CAAA","sourcesContent":["<template>\n  <v-data-table\n    class=\"elevation-1\"\n    expand\n    :loading=\"loading\"\n    :items=\"sales\"\n    :headers=\"headers\"\n    item-key=\"saleId\"\n    :rows-per-page-items=\"[\n      10,\n      25,\n      50,\n      100,\n      {\n        text: '$vuetify.dataIterator.rowsPerPageAll',\n        value: -1\n      }\n    ]\"\n  >\n    <template slot=\"items\" slot-scope=\"props\">\n      <tr @click=\"props.expanded = !props.expanded\">\n        <td class=\"text-xs\">\n          {{ props.item.awardedDate }}\n          <v-text-field\n            :key=\"`awardedDate${props.index}`\"\n            @click.stop\n            :placeholder=\"`${props.item.awardedDate}`\"\n            v-if=\"editingArr[props.index]\"\n            v-model=\"sales[item].awardedDate\"\n          >\n          </v-text-field>\n        </td>\n        <td class=\"text-xs\">{{ props.item.orderId}}</td>\n        <td class=\"text-xs\">{{ lineItemsAmount(props.item.lineItems)}}</td>\n        <td class=\"text-xs\">\n          {{ props.item.totalPoints }}\n          <v-text-field\n            @click.stop\n            :placeholder=\"`${props.item.totalPoints}`\"\n            v-if=\"editingArr[props.index]\"\n          ></v-text-field>\n        </td>\n        <td class=\"text-xs\">\n          {{ props.item.commissionableAmount}}\n          <v-text-field @click.stop :placeholder=\"`${props.item.commissionableAmount}`\" v-if=\"editingArr[props.index]\"></v-text-field>\n        </td>\n        <td class=\"text-xs\">\n          {{ props.item.commissionablePoints}}\n          <v-text-field @click.stop :placeholder=\"`${props.item.commissionablePoints}`\" v-if=\"editingArr[props.index]\"></v-text-field>\n        </td>\n        <td class=\"text-xs\">{{ props.item.displayName}}</td>\n        <td class=\"text-xs\">{{ props.item.sellerEmail}}</td>\n        <td >\n          <v-tooltip left :open-delay=\"500\">\n            <v-icon slot=\"activator\" @click.stop=\"override(props)\">\n              {{ editingArr[props.index] ? 'cancel' : 'edit'}}\n            </v-icon>\n            <span>{{ editingArr[props.index] ? 'Cancel Override' : 'Override Order'}}</span>\n          </v-tooltip>\n          <v-tooltip top :open-delay=\"500\">\n            <v-icon slot=\"activator\" @click.stop=\"reprocess(props)\">\n              autorenew\n            </v-icon>\n            <span>Reprocess Order</span>\n          </v-tooltip>\n        </td>\n      </tr>\n    </template>\n    <template slot=\"expand\" slot-scope=\"props\">\n      <div class=\"pa-3 sale-details\">\n        <v-container fluid>\n          <v-layout>\n            <v-flex xs4>\n              <h4>Details:</h4>\n              <ul>\n                <li>Originating ID: {{props.item.providerOid}}</li>\n                <li>Status: {{props.item.status}}</li>\n                <li>Customer Note: {{props.item.customerNote}}</li>\n              </ul>\n            </v-flex>\n            <v-flex xs4>\n              <h4>Customer Info:</h4>\n              <ul>\n                <li>{{props.item.shippingFirstName}} {{props.item.shippingLastName}}</li>\n                <li>{{props.item.shippingAddress1}}</li>\n                <li>{{props.item.shippingAddress2}}</li>\n                <li>{{props.item.shippingCity}}, {{props.item.shippingState}} {{props.item.shippingZip}}</li>\n              </ul>\n            </v-flex>\n            <v-flex xs4>\n              <h4>Billing Info:</h4>\n              <ul>\n                <li>{{props.item.billingFirstName}} {{props.item.billingLastName}}</li>\n                <li>{{props.item.billingAddress1}}</li>\n                <li>{{props.item.billingAddress2}}</li>\n                <li>{{props.item.billingCity}}, {{props.item.billingState}} {{props.item.billingZip}}</li>\n                <li>{{props.item.billingEmail}}</li>\n              </ul>\n            </v-flex>\n          </v-layout>\n          <v-layout>\n            <v-flex xs12>\n              <h4>Line Items</h4>\n              <ul>\n                <li\n                  v-for=\"line in props.item.lineItems\"\n                  :key=\"line.id\"\n                >{{line.name}} ({{line.total}})</li>\n              </ul>\n            </v-flex>\n          </v-layout>\n        </v-container>\n      </div>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nexport default {\n  name: 'SalesDataTable',\n  props: {\n    sales: {\n      type: Array,\n      required: true\n    },\n    loading: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data () {\n    return {\n      editingArr: [],\n      headers: [\n        { text: 'Date', value: 'date' },\n        { text: 'Order ID', value: 'orderId' }, // actually providerOid\n        { text: 'Sale Total', value: 'total' },\n        { text: 'Total Points', value: 'points' },\n        { text: 'Commissionable Total', value: 'comTotal' },\n        { text: 'Commissionable Points', value: 'comPoints' },\n        { text: 'Seller Name', value: 'displayName' },\n        { text: 'Seller Email', value: 'contactEmail' },\n        { text: 'Actions', value: null, sortable: false }\n      ],\n      overrideValuesArr: []\n    }\n  },\n  methods: {\n    lineItemsAmount(lineItems) {\n      if (!lineItems) {\n        lineItems = []\n      }\n      let totalAmount = lineItems.map(item => {\n        return item.total\n      })\n      return totalAmount.reduce((a, b) => a + b, 0)\n    },\n    override(props) {\n      this.$set(this.editingArr, `${props.index}`, !this.editingArr[props.index])\n      // TODO this.$apollo.mutate({\n      //   mutation: SALES_OVERRIDE,\n      //   variables: {\n      //     input: {\n      //       TBD\n      //     }\n      //   }\n      // })\n    },\n    reprocess(props) {\n      // console.log('reprocess', props)\n      // TODO this.$apollo.query({\n      //   query: SALES_REPROCESS,\n      //   variables: {\n      //     input: {\n      //     }\n      //   }\n      // })\n    },\n    textFieldInputHandle(props, e) {\n      const { index, name } = props\n      this.overrideValuesArr[index][name] = e\n    }\n  },\n  watch: {\n    sales: {\n      handler: function() {\n        const overrideValues = Array(this.sales.length).fill({\n          awardedDate: null,\n          totalAmount: null,\n          commissionableAmount: null,\n          commissionablePoints: null\n        })\n        overrideValues.forEach((orVal, i) => {\n          this.$set(this.overrideValuesArr, i, orVal)\n        })\n      },\n      deep: true\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}