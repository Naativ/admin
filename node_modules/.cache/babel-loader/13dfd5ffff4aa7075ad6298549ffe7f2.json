{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/narfdre/Code/hexly/admin/src/curriculum/curriculum.gql.js","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/curriculum/curriculum.gql.js","mtime":1554331296000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation lessonProgression($input: LessonProgressionInput) {\\n    lessonProgression(input: $input) {\\n      id\\n      fromId\\n      toId\\n    }\\n  }\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation upsertLesson($input: UpsertLessonInput) {\\n    upsertLesson(input: $input) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation attachAssetToSlide($input: AssetSlideInput) {\\n    attachAssetToSlide(input: $input) \\n  }\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation detachAssetFromSlide($input: AssetSlideInput) {\\n    detachAssetFromSlide(input: $input) \\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation upsertSlide($input: UpsertSlideInput) {\\n    upsertSlide(input: $input) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  query getLessonById($input: CurriculumLessonCondition) {\\n    getLessonById(input: $input) {\\n      ...on CurriculumLesson {\\n        id\\n        name\\n        key\\n        description\\n        priority\\n        createdBy\\n        modifiedBy\\n        blockId\\n        nextLessonId\\n        metadata\\n        slides {\\n          typeId\\n          id\\n          name\\n          description\\n          priority\\n          key\\n          metadata\\n          assets {\\n            url\\n            id\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  query getLessons($input: CurriculumCondition) {\\n    getLessons(input: $input) {\\n      page\\n      pageSize\\n      totalPages\\n      totalResults\\n      results {\\n        ...on CurriculumLesson {\\n          id\\n          key\\n          nextLessonId\\n          description\\n          modifiedBy\\n          priority\\n          name\\n          blockId\\n          metadata\\n          progressions {\\n            id\\n            fromId\\n            toId\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation upsertUnit($input: UpsertUnitInput) {\\n    upsertUnit(input: $input) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  query getUnits($input: CurriculumCondition) {\\n    getUnits(input: $input) {\\n      page\\n      pageSize\\n      totalPages\\n      totalResults\\n      results {\\n        ...on CurriculumUnit {\\n          id\\n          courseId\\n          key\\n          name\\n          description\\n          modifiedBy\\n          priority\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation upsertBlock($input: UpsertBlockInput) {\\n    upsertBlock(input: $input) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query getBlocks($input: CurriculumCondition) {\\n    getBlocks(input: $input) {\\n      page\\n      pageSize\\n      totalPages\\n      totalResults\\n      results {\\n        ...on CurriculumBlock {\\n          id\\n          unitId\\n          key\\n          name\\n          description\\n          modifiedBy\\n          priority\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation upsertCourse($input: UpsertCourseInput) {\\n    upsertCourse(input: $input) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getCourses {\\n    getCourses {\\n      page\\n      pageSize\\n      totalPages\\n      totalResults\\n      results {\\n        ...on CurriculumCourse {\\n          id\\n          key\\n          description\\n          tenantId\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar gql = require('graphql-tag');\n\nexport var getCourses = gql(_templateObject());\nexport var upsertCourse = gql(_templateObject2());\nexport var getBlocks = gql(_templateObject3());\nexport var upsertBlock = gql(_templateObject4());\nexport var getUnits = gql(_templateObject5());\nexport var upsertUnit = gql(_templateObject6());\nexport var getLessons = gql(_templateObject7());\nexport var getLessonsById = gql(_templateObject8());\nexport var upsertSlide = gql(_templateObject9());\nexport var detachAssetFromSlide = gql(_templateObject10());\nexport var attachAssetToSlide = gql(_templateObject11());\nexport var upsertLesson = gql(_templateObject12());\nexport var lessonProgression = gql(_templateObject13());",{"version":3,"sources":["/Users/narfdre/Code/hexly/admin/src/curriculum/curriculum.gql.js"],"names":["gql","require","getCourses","upsertCourse","getBlocks","upsertBlock","getUnits","upsertUnit","getLessons","getLessonsById","upsertSlide","detachAssetFromSlide","attachAssetToSlide","upsertLesson","lessonProgression"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAMC,QAAQ,aAAR,CAAZ;;AAEA,OAAO,IAAMC,aAAaF,GAAb,mBAAN;AAmBP,OAAO,IAAMG,eAAeH,GAAf,oBAAN;AASP,OAAO,IAAMI,YAAYJ,GAAZ,oBAAN;AAsBP,OAAO,IAAMK,cAAcL,GAAd,oBAAN;AASP,OAAO,IAAMM,WAAWN,GAAX,oBAAN;AAsBP,OAAO,IAAMO,aAAaP,GAAb,oBAAN;AASP,OAAO,IAAMQ,aAAaR,GAAb,oBAAN;AA6BP,OAAO,IAAMS,iBAAiBT,GAAjB,oBAAN;AAgCP,OAAO,IAAMU,cAAcV,GAAd,oBAAN;AASP,OAAO,IAAMW,uBAAuBX,GAAvB,qBAAN;AAMP,OAAO,IAAMY,qBAAqBZ,GAArB,qBAAN;AAKP,OAAO,IAAMa,eAAeb,GAAf,qBAAN;AASP,OAAO,IAAMc,oBAAoBd,GAApB,qBAAN","sourcesContent":["const gql = require('graphql-tag')\n\nexport const getCourses = gql`\n  query getCourses {\n    getCourses {\n      page\n      pageSize\n      totalPages\n      totalResults\n      results {\n        ...on CurriculumCourse {\n          id\n          key\n          description\n          tenantId\n        }\n      }\n    }\n  }\n`\n\nexport const upsertCourse = gql`\n  mutation upsertCourse($input: UpsertCourseInput) {\n    upsertCourse(input: $input) {\n      id\n      name\n    }\n  }\n`\n\nexport const getBlocks = gql`\n  query getBlocks($input: CurriculumCondition) {\n    getBlocks(input: $input) {\n      page\n      pageSize\n      totalPages\n      totalResults\n      results {\n        ...on CurriculumBlock {\n          id\n          unitId\n          key\n          name\n          description\n          modifiedBy\n          priority\n        }\n      }\n    }\n  }\n`\n\nexport const upsertBlock = gql`\n  mutation upsertBlock($input: UpsertBlockInput) {\n    upsertBlock(input: $input) {\n      id\n      name\n    }\n  }\n`\n\nexport const getUnits = gql`\n  query getUnits($input: CurriculumCondition) {\n    getUnits(input: $input) {\n      page\n      pageSize\n      totalPages\n      totalResults\n      results {\n        ...on CurriculumUnit {\n          id\n          courseId\n          key\n          name\n          description\n          modifiedBy\n          priority\n        }\n      }\n    }\n  }\n`\n\nexport const upsertUnit = gql`\n  mutation upsertUnit($input: UpsertUnitInput) {\n    upsertUnit(input: $input) {\n      id\n      name\n    }\n  }\n`\n\nexport const getLessons = gql`\n  query getLessons($input: CurriculumCondition) {\n    getLessons(input: $input) {\n      page\n      pageSize\n      totalPages\n      totalResults\n      results {\n        ...on CurriculumLesson {\n          id\n          key\n          nextLessonId\n          description\n          modifiedBy\n          priority\n          name\n          blockId\n          metadata\n          progressions {\n            id\n            fromId\n            toId\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const getLessonsById = gql`\n  query getLessonById($input: CurriculumLessonCondition) {\n    getLessonById(input: $input) {\n      ...on CurriculumLesson {\n        id\n        name\n        key\n        description\n        priority\n        createdBy\n        modifiedBy\n        blockId\n        nextLessonId\n        metadata\n        slides {\n          typeId\n          id\n          name\n          description\n          priority\n          key\n          metadata\n          assets {\n            url\n            id\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const upsertSlide = gql`\n  mutation upsertSlide($input: UpsertSlideInput) {\n    upsertSlide(input: $input) {\n      id\n      name\n    }\n  }\n`\n\nexport const detachAssetFromSlide = gql`\n  mutation detachAssetFromSlide($input: AssetSlideInput) {\n    detachAssetFromSlide(input: $input) \n  }\n`\n\nexport const attachAssetToSlide = gql`\n  mutation attachAssetToSlide($input: AssetSlideInput) {\n    attachAssetToSlide(input: $input) \n  }\n`\nexport const upsertLesson = gql`\n  mutation upsertLesson($input: UpsertLessonInput) {\n    upsertLesson(input: $input) {\n      id\n      name\n    }\n  }\n`\n\nexport const lessonProgression = gql`\n  mutation lessonProgression($input: LessonProgressionInput) {\n    lessonProgression(input: $input) {\n      id\n      fromId\n      toId\n    }\n  }\n`\n"]}]}