{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/AssociationsDataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/AssociationsDataTable.vue","mtime":1575760925477},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataTableInputField from '@/components/DataTableInputField.vue';\nvar screenEnum = {\n  dashboard: 0,\n  membersInAssociation: 1,\n  associationsByMember: 2\n};\nvar nameColText = ['Member Name', 'Member Name', 'Association Name'];\nvar typeColText = ['', 'Role', 'Type'];\nvar typeObjText = ['', 'role', 'type'];\nvar idColText = ['Id', 'Member Id', 'Id'];\nvar idObjText = ['id', 'id', 'id'];\nvar metadataObjText = ['metadata', 'metadata', 'metadata'];\nexport default {\n  name: 'AssociationsDataTable',\n  components: {\n    DataTableInputField: DataTableInputField\n  },\n  props: {\n    currentScreen: {\n      type: String,\n      required: true\n    },\n    associations: {\n      type: Array,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      headers: [{\n        text: idColText[screenEnum[this.currentScreen]],\n        value: 'id',\n        sortable: false\n      }, {\n        text: nameColText[screenEnum[this.currentScreen]],\n        value: 'name',\n        sortable: false\n      }],\n      idObjName: idObjText[screenEnum[this.currentScreen]],\n      typeObjName: typeObjText[screenEnum[this.currentScreen]],\n      metadataObjName: metadataObjText[screenEnum[this.currentScreen]],\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    if (this.currentScreen !== 'dashboard') {\n      this.headers.push({\n        text: typeColText[screenEnum[this.currentScreen]],\n        value: 'type',\n        sortable: false\n      });\n    }\n  }\n};",{"version":3,"sources":["AssociationsDataTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,OAAA,mBAAA,MAAA,sCAAA;AAEA,IAAA,aAAA;AACA,aAAA,CADA;AAEA,wBAAA,CAFA;AAGA,wBAAA;AAHA,CAAA;AAKA,IAAA,cAAA,CACA,aADA,EAEA,aAFA,EAGA,kBAHA,CAAA;AAKA,IAAA,cAAA,CACA,EADA,EAEA,MAFA,EAGA,MAHA,CAAA;AAKA,IAAA,cAAA,CACA,EADA,EAEA,MAFA,EAGA,MAHA,CAAA;AAKA,IAAA,YAAA,CACA,IADA,EAEA,WAFA,EAGA,IAHA,CAAA;AAKA,IAAA,YAAA,CACA,IADA,EAEA,IAFA,EAGA,IAHA,CAAA;AAKA,IAAA,kBAAA,CACA,UADA,EAEA,UAFA,EAGA,UAHA,CAAA;AAMA,eAAA;AACA,QAAA,uBADA;AAEA,cAAA;AACA;AADA,GAFA;AAKA,SAAA;AACA,mBAAA;AACA,YAAA,MADA;AAEA,gBAAA;AAFA,KADA;AAKA,kBAAA;AACA,YAAA,KADA;AAEA,gBAAA;AAFA;AALA,GALA;AAeA,MAfA,kBAeA;AACA,WAAA;AACA,eAAA,CACA;AAAA,cAAA,UAAA,WAAA,KAAA,aAAA,CAAA,CAAA;AAAA,eAAA,IAAA;AAAA,kBAAA;AAAA,OADA,EAEA;AAAA,cAAA,YAAA,WAAA,KAAA,aAAA,CAAA,CAAA;AAAA,eAAA,MAAA;AAAA,kBAAA;AAAA,OAFA,CADA;AAKA,iBAAA,UAAA,WAAA,KAAA,aAAA,CAAA,CALA;AAMA,mBAAA,YAAA,WAAA,KAAA,aAAA,CAAA,CANA;AAOA,uBAAA,gBAAA,WAAA,KAAA,aAAA,CAAA,CAPA;AAQA,eAAA;AARA,KAAA;AAUA,GA1BA;AA2BA,SA3BA,qBA2BA;AACA,QAAA,KAAA,aAAA,KAAA,WAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,cAAA,YAAA,WAAA,KAAA,aAAA,CAAA,CAAA;AAAA,eAAA,MAAA;AAAA,kBAAA;AAAA,OAAA;AACA;AACA;AA/BA,CAAA","sourcesContent":["<template>\n  <v-data-table class=\"association-table\" :loading=\"loading\" :items=\"associations\" :headers=\"headers\" hide-actions>\n    <template slot=\"items\" slot-scope=\"props\">\n      <tr @click=\"$emit('view', currentScreen === 'dashboard' ? props.item.id : props, props.item.id)\">\n        <td class=\"text-xs\">{{ props.item[idObjName] }}</td>\n        <td class=\"text-xs\">{{ props.item.name }}</td>\n        <td v-if=\"currentScreen !== 'dashboard'\" class=\"text-xs\">{{ props.item[typeObjName] }}</td>\n        <td v-if=\"currentScreen !== 'dashboard'\" class=\"text-xs\">{{ props.item[metadataObjName] }}</td>\n      </tr>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nimport DataTableInputField from '@/components/DataTableInputField.vue'\n\nconst screenEnum = {\n  dashboard: 0,\n  membersInAssociation: 1,\n  associationsByMember: 2\n}\nconst nameColText = [\n  'Member Name',\n  'Member Name',\n  'Association Name'\n]\nconst typeColText = [\n  '',\n  'Role',\n  'Type'\n]\nconst typeObjText = [\n  '',\n  'role',\n  'type'\n]\nconst idColText = [\n  'Id',\n  'Member Id',\n  'Id'\n]\nconst idObjText = [\n  'id',\n  'id',\n  'id'\n]\nconst metadataObjText = [\n  'metadata',\n  'metadata',\n  'metadata'\n]\n\nexport default {\n  name: 'AssociationsDataTable',\n  components: {\n    DataTableInputField\n  },\n  props: {\n    currentScreen: {\n      type: String,\n      required: true\n    },\n    associations: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      headers: [\n        { text: idColText[screenEnum[this.currentScreen]], value: 'id', sortable: false },\n        { text: nameColText[screenEnum[this.currentScreen]], value: 'name', sortable: false }\n      ],\n      idObjName: idObjText[screenEnum[this.currentScreen]],\n      typeObjName: typeObjText[screenEnum[this.currentScreen]],\n      metadataObjName: metadataObjText[screenEnum[this.currentScreen]],\n      loading: false\n    }\n  },\n  mounted() {\n    if (this.currentScreen !== 'dashboard') {\n      this.headers.push({ text: typeColText[screenEnum[this.currentScreen]], value: 'type', sortable: false })\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/components"}]}