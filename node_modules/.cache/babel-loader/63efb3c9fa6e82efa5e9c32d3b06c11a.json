{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/users/actions/UserTreePatch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/users/actions/UserTreePatch.vue","mtime":1556830707000},{"path":"/Users/narfdre/Code/hexly/admin/.babelrc","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/narfdre/Code/hexly/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { debounce, get } from 'lodash';\nimport { treePatch } from '@/users/users.gql';\nimport SEARCH_QUERY from '@/graphql/Search.gql';\nimport { getImmediateTeamByMemberId } from '@/graphql/GetTeam';\nimport { StoreGetters } from '@/store';\nimport { mapGetters } from 'vuex';\nvar mappedGetters = mapGetters({\n  access: StoreGetters.access\n});\nexport default {\n  props: {\n    user: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    show: Boolean\n  },\n  data: function data() {\n    return {\n      result: null,\n      destination: null,\n      searchDebounce: '',\n      reason: '',\n      recalculateTree: true,\n      loading: false,\n      items: [],\n      table: {\n        headers: [{\n          text: 'ID',\n          value: 'System ID',\n          width: '50px'\n        }, {\n          text: 'Front Line Team Member',\n          align: 'left',\n          sortable: false,\n          value: 'name'\n        }]\n      }\n    };\n  },\n  watch: {\n    searchDebounce: debounce(function (val) {\n      this.search(val);\n    }, 300),\n    show: function show(val) {\n      val && this.$apollo.queries.team.refresh();\n    }\n  },\n  apollo: {\n    team: function team() {\n      var _this$user = this.user,\n          id = _this$user.id,\n          sponsorOid = _this$user.sponsorOid,\n          tenantId = _this$user.tenantId;\n      var query = getImmediateTeamByMemberId(id, sponsorOid, tenantId);\n      return query;\n    }\n  },\n  methods: {\n    search: function () {\n      var _search = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(searchTerm) {\n        var result, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.items = [];\n\n                if (!searchTerm) {\n                  _context.next = 17;\n                  break;\n                }\n\n                this.loading = true;\n                _context.prev = 3;\n                _context.next = 6;\n                return this.$apollo.query({\n                  query: SEARCH_QUERY,\n                  variables: {\n                    searchInput: {\n                      search: searchTerm\n                    }\n                  }\n                });\n\n              case 6:\n                result = _context.sent;\n                data = get(result, 'data.searchHierarchy.hierarchies', []);\n                this.items = data;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](3);\n                console.error({\n                  error: _context.t0\n                });\n\n              case 14:\n                _context.prev = 14;\n                this.loading = false;\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 11, 14, 17]]);\n      }));\n\n      function search(_x) {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }(),\n    move: function () {\n      var _move = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var targetId, destinationId, reason, recalculateTree, result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                _context2.prev = 1;\n                targetId = this.user.id;\n                destinationId = (this.destination || {}).id;\n                reason = this.reason, recalculateTree = this.recalculateTree;\n                _context2.next = 7;\n                return this.$apollo.mutate({\n                  mutation: treePatch,\n                  variables: {\n                    input: {\n                      targetId: targetId,\n                      destinationId: destinationId,\n                      reason: reason,\n                      recalculateTree: recalculateTree\n                    }\n                  }\n                });\n\n              case 7:\n                result = _context2.sent;\n                this.result = result;\n\n              case 9:\n                _context2.prev = 9;\n                this.loading = false;\n                return _context2.finish(9);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1,, 9, 12]]);\n      }));\n\n      function move() {\n        return _move.apply(this, arguments);\n      }\n\n      return move;\n    }(),\n    cancel: function cancel() {\n      this.$emit('cancel');\n    },\n    clear: function clear() {\n      this.destination = null;\n    },\n    reload: function reload() {\n      window.location.reload();\n    }\n  },\n  computed: _objectSpread({}, mappedGetters, {\n    children: function children() {\n      return get(this, 'team.children', []);\n    },\n    sponsor: function sponsor() {\n      return get(this, 'team.sponsor', {});\n    },\n    noAccess: function noAccess() {\n      return !get(this, 'access.hasSponsorChange', false);\n    }\n  })\n};",{"version":3,"sources":["UserTreePatch.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-dialog v-if=\"user\" v-model=\"show\" persistent :hide-overlay=\"false\" width=\"80%\">\n    <v-card v-if=\"noAccess\">\n      <v-card-title>\n        <h1>Member Tree Patch</h1>\n      </v-card-title>\n      <v-alert type=\"error\" :value=\"true\">\n        <strong>Illegal Access Attempt:</strong>\n        This account does not have access to change a member's sponsors.\n      </v-alert>\n      <v-card-actions>\n        <v-layout row justify-center>\n          <v-btn @click=\"cancel\">Close</v-btn>\n        </v-layout>\n      </v-card-actions>\n    </v-card>\n    <v-card v-else-if=\"result\">\n      <v-card-title>\n        <h1>Member Tree Patch</h1>\n      </v-card-title>\n      <v-card-text>This member was patched successfully. Please reload any browser sessions.</v-card-text>\n      <v-card-actions>\n        <v-layout row justify-center>\n          <v-btn color=\"dark pink\" class=\"white--text\" @click=\"reload\">Reload</v-btn>\n        </v-layout>\n      </v-card-actions>\n    </v-card>\n    <v-card v-else>\n      <v-card-title>\n        <h1>Member Tree Patch</h1>\n      </v-card-title>\n      <v-card-text>\n        <v-form ref=\"mergeForm\">\n          <v-layout row wrap>\n            <v-flex xs12>\n              <p>\n                This process will move any team members directly associated with\n                <strong>{{user.name}} ({{user.id}})</strong> and place them under\n                <strong>{{sponsor.name || 'the company root'}} {{ sponsor.memberId ? '(' + sponsor.memberId + ')' : ''}}</strong>.\n              </p>\n            </v-flex>\n            <v-flex xs12 sm6>\n              <v-autocomplete\n                v-model=\"destination\"\n                :items=\"items\"\n                :loading=\"loading\"\n                :search-input.sync=\"searchDebounce\"\n                item-text=\"name\"\n                item-value=\"id\"\n                return-object\n                label=\"Sponsor to move under\"\n                clearable\n                :disabled=\"loading\"\n              >\n                <template slot=\"item\" slot-scope=\"data\">\n                  <v-flex xs4>\n                    <v-icon left>person</v-icon>\n                    {{data.item.displayName}}\n                  </v-flex>\n                  <v-flex xs4>{{data.item.contactEmail}}</v-flex>\n                  <v-flex xs4>{{data.item.id}}</v-flex>\n                </template>\n              </v-autocomplete>\n            </v-flex>\n            <v-flex xs12 sm6>\n              <v-checkbox :disabled=\"loading\" v-model=\"recalculateTree\" label=\"Recalculate Tree\"></v-checkbox>\n            </v-flex>\n            <v-flex xs12 sm12>\n              <v-textarea solo label=\"Solo textarea\" v-model=\"reason\" multi-line></v-textarea>\n            </v-flex>\n          </v-layout>\n          <v-alert type=\"warning\" :value=\"destination\" v-if=\"destination\">\n            <template slot=\"default\">\n              <v-layout row wrap>\n                <v-flex xs12>\n                  <p>\n                    Proceeding will move\n                    <strong>{{user.name}}</strong>\n                    under the following new sponsor:\n                  </p>\n                </v-flex>\n                <v-flex xs12 sm4>\n                  <v-icon>account_box</v-icon>\n                  {{destination.id}}\n                </v-flex>\n                <v-flex xs12 sm4>\n                  <v-icon>person</v-icon>\n                  {{destination.name}}\n                </v-flex>\n                <v-flex xs12 sm4>\n                  <v-icon>email</v-icon>\n                  {{destination.contactEmail}}\n                </v-flex>\n              </v-layout>\n            </template>\n          </v-alert>\n          <v-alert type=\"info\" :value=\"!destination\">\n            <strong>\n              <u>Reminder</u>:\n            </strong>\n            Not selecting a new sponsor\n            will move this\n            <strong>{{user.name}}</strong> to the\n            <strong>root of the company</strong>\n          </v-alert>\n        </v-form>\n      </v-card-text>\n      <v-data-table :headers=\"table.headers\" :items=\"children\">\n        <template slot=\"items\" slot-scope=\"props\">\n          <td>{{ props.item.memberId }}</td>\n          <td>{{ props.item.name }}</td>\n        </template>\n      </v-data-table>\n      <v-card-actions>\n        <v-layout row justify-center>\n          <v-btn color=\"dark pink\" class=\"white--text\" @click=\"move\" :loading=\"loading\">Confirm Move</v-btn>\n          <v-btn @click=\"cancel\" :disabled=\"loading\">Cancel</v-btn>\n        </v-layout>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { debounce, get } from 'lodash'\nimport { treePatch } from '@/users/users.gql'\nimport SEARCH_QUERY from '@/graphql/Search.gql'\nimport { getImmediateTeamByMemberId } from '@/graphql/GetTeam'\n\nimport { StoreGetters } from '@/store'\nimport { mapGetters } from 'vuex'\nconst mappedGetters = mapGetters({\n  access: StoreGetters.access\n})\n\nexport default {\n  props: {\n    user: {\n      type: Object,\n      default () { return {} }\n    },\n    show: Boolean\n  },\n  data () {\n    return {\n      result: null,\n      destination: null,\n      searchDebounce: '',\n      reason: '',\n      recalculateTree: true,\n      loading: false,\n      items: [],\n      table: {\n        headers: [\n          { text: 'ID', value: 'System ID', width: '50px' },\n          {\n            text: 'Front Line Team Member',\n            align: 'left',\n            sortable: false,\n            value: 'name'\n          }\n        ]\n      }\n    }\n  },\n  watch: {\n    searchDebounce: debounce(function (val) {\n      this.search(val)\n    }, 300),\n    show (val) {\n      val && this.$apollo.queries.team.refresh()\n    }\n  },\n  apollo: {\n    team () {\n      const { id, sponsorOid, tenantId } = this.user\n      const query = getImmediateTeamByMemberId(\n        id,\n        sponsorOid,\n        tenantId\n      )\n      return query\n    }\n\n  },\n  methods: {\n    async search (searchTerm) {\n      this.items = []\n      if (searchTerm) {\n        this.loading = true\n        try {\n          const result = await this.$apollo.query({\n            query: SEARCH_QUERY,\n            variables: {\n              searchInput: {\n                search: searchTerm\n              }\n            }\n          })\n          const data = get(result, 'data.searchHierarchy.hierarchies', [])\n          this.items = data\n        } catch (error) {\n          console.error({ error })\n        } finally {\n          this.loading = false\n        }\n      }\n    },\n    async move () {\n      this.loading = true\n      try {\n        const targetId = this.user.id\n        const destinationId = (this.destination || {}).id\n        const { reason, recalculateTree } = this\n\n        const result = await this.$apollo.mutate({\n          mutation: treePatch,\n          variables: {\n            input: { targetId, destinationId, reason, recalculateTree }\n          }\n        })\n        this.result = result\n      } finally {\n        this.loading = false\n      }\n    },\n    cancel () {\n      this.$emit('cancel')\n    },\n    clear () {\n      this.destination = null\n    },\n    reload () {\n      window.location.reload()\n    }\n  },\n  computed: {\n    ...mappedGetters,\n    children () {\n      return get(this, 'team.children', [])\n    },\n    sponsor () {\n      return get(this, 'team.sponsor', {})\n    },\n    noAccess () {\n      return !get(this, 'access.hasSponsorChange', false)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/users/actions"}]}