{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/assets/ViewAll.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/assets/ViewAll.vue","mtime":1559148307000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.search-box {\n  width: 90%;\n  justify-content: center;\n}\n",{"version":3,"sources":["ViewAll.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA;AACA;AACA;AACA","file":"ViewAll.vue","sourceRoot":"src/views/assets","sourcesContent":["<template>\n  <div>\n    <AssetDialog\n      :showAssetDialog=\"showAssetDialog\"\n      :asset=\"this.selectedAsset\"\n      @closeAssetDialog=\"closeAssetDialog\"\n    />\n    <v-form>\n      <v-layout row just-space-around align-center>\n        <!-- <v-combobox\n          v-model=\"assetSearch.owners\"\n          hide-selected\n          label=\"Search by Owner\"\n          multiple\n          small-chips\n          solo\n        ></v-combobox> -->\n        <v-combobox\n          solo\n          label=\"Search Assets By Tag\"\n          v-model=\"assetSearch.anyTags\"\n          item-text=\"name\"\n          item-value=\"id\"\n          :items=\"assetMeta.allTags\"\n          chips\n          multiple\n        />\n        <v-btn @click=\"goSearchAssets\">Search</v-btn>\n      </v-layout>\n    </v-form>\n    <div class=\"text-xs-center\">\n      <v-pagination v-model=\"assetSearch.page\" :length=\"library.totalPages\" :total-visible=\"7\"></v-pagination>\n    </div>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"library.assets\"\n      :expand=\"true\"\n      :hide-actions=\"true\"\n      :loading=\"loading\"\n    >\n      <v-progress-linear slot=\"progress\" color=\"blue\" indeterminate></v-progress-linear>\n      <template slot=\"items\" slot-scope=\"props\">\n        <td>{{ props.item.id }}</td>\n        <td>\n          <a slot=\"activator\" @click=\"showAsset(props.item)\">\n            {{ props.item.name }}\n          </a>\n        </td>\n        <td>{{ props.item.description }}</td>\n        <td>{{ props.item.owner.displayName }}</td>\n        <td>{{ props.item.categoryKey }}</td>\n        <td>{{ convert(props.item.visibilityId) }}</td>\n        <td>\n          <ul v-for=\"p in props.item.tags\" :key=p.id>\n            <li>{{ p.name }}</li>\n          </ul>\n        </td>\n        <td>{{ props.item.url }}</td>\n      </template>\n    </v-data-table>\n    <div class=\"text-xs-center\">\n      <v-pagination v-model=\"assetSearch.page\" :length=\"library.totalPages\" :total-visible=\"7\"></v-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AssetDialog from '@/content/AssetDialog.vue'\n\nimport { getAssetVisibility } from '@/content/content.gql.js'\nimport { forEach } from 'lodash'\nimport { mapActions, mapGetters } from 'vuex'\nimport { ContentActions, ContentGetters } from '@/content/ContentStore'\n\nexport default {\n  components: {\n    AssetDialog\n  },\n  data() {\n    return {\n      filtered: [],\n      headers: [\n        { text: 'ID', value: 'id', width: '50px' },\n        { text: 'Name', value: 'name', width: '50px' },\n        { text: 'Description', value: 'description', width: '75px' },\n        { text: 'Owner', value: 'owner', width: '150px' },\n        { text: 'Category', value: 'category', width: '150px' },\n        { text: 'Visibility ID', value: 'visibilityId', width: '100px' },\n        { text: 'Tags', value: 'tags' },\n        { text: 'url', value: 'url' }\n      ],\n      loading: true,\n      search: '',\n      selectedAsset: {},\n      showAssetDialog: false,\n      visibilityIds: {},\n      assetSearch: {\n        pageSize: 25,\n        page: 1,\n        anyTags: [],\n        owners: []\n      }\n    }\n  },\n  async mounted() {\n    this.goSearchAssets()\n  },\n  methods: {\n    ...mapActions({\n      refreshLibrary: ContentActions.REFRESH_LIBRARY_ASSETS\n    }),\n    convert(id) {\n      return this.visibilityIds[id]\n    },\n    showAsset(asset) {\n      this.showAssetDialog = true\n      this.selectedAsset = asset\n    },\n    closeAssetDialog() {\n      this.showAssetDialog = false\n      this.selectedAsset = {}\n    },\n    async getVisibilityIds() {\n      const { data } = await this.$apollo.query({\n        query: getAssetVisibility,\n        fetchPolicy: 'network-only'\n      })\n      const visibilityArray = data.getAssetVisibility\n      forEach(visibilityArray, _ => {\n        this.visibilityIds[_.id] = _.name\n      })\n    },\n    async goSearchAssets() {\n      let { anyTags } = this.assetSearch\n      this.loading = true\n      this.assetSearch.owners = this.assetSearch.owners.map(v => ~~v)\n      if (anyTags.length) {\n        anyTags = anyTags.map(assMap => {\n          return assMap.id\n        })\n      }\n      await this.refreshLibrary({ ...this.assetSearch, anyTags })\n      await this.getVisibilityIds()\n      this.loading = false\n    }\n  },\n  computed: {\n    ...mapGetters({\n      library: ContentGetters.libraryAssets,\n      assetMeta: ContentGetters.assetMeta\n    })\n  },\n  watch: {\n    'assetSearch.page'(newVal, oldVal) {\n      this.goSearchAssets()\n    }\n  }\n}\n</script>\n\n<style>\n.search-box {\n  width: 90%;\n  justify-content: center;\n}\n</style>\n"]}]}