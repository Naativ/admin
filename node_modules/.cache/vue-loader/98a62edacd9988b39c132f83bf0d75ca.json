{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/members/ContactCardPhones.vue?vue&type=style&index=0&id=7f597075&scoped=true&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/members/ContactCardPhones.vue","mtime":1577329618151},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.findme {\n  border: 2px solid red;\n}\n.details {\n  text-align: left;\n}\n.addresses {\n  display: flex;\n  flex-direction: column;\n  height: 39vh;\n  flex-wrap: wrap;\n  min-width: 45vw;\n  padding-top: 11px;\n  padding-top: 48px;\n  position: relative;\n}\n#contact-list {\n  width: 100%;\n}\n.address-title {\n  position: absolute;\n  top: 9px;\n}\n.contact-section-heading {\n  display: inline;\n}\n",{"version":3,"sources":["ContactCardPhones.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContactCardPhones.vue","sourceRoot":"src/views/members","sourcesContent":["<template>\n  <span v-if =\"model\">\n    <v-list-tile-sub-title\n      v-for =\"(phoneNumber, index) in model.phoneNumbers\"\n      :key  =\"index\"\n    >\n      <h4 class=\"contact-section-heading\">Phone {{model.phoneNumbers.length > 1 ? index+1 : null}}</h4>\n      <EditButton\n        :index         =\"index\"\n        :disabled      =\"disabled[index]\"\n        @editClicked   =\"editClicked(index)\"\n        @saveClicked   =\"saveClicked(index)\"\n        @cancelClicked =\"cancelClicked(index)\"\n      />\n      <v-text-field\n        prepend-icon =\"phone\"\n        :disabled    =\"disabled[index]\"\n        v-model      =\"model.phoneNumbers[index].number\"\n        label=\"Number\"\n      />\n      <v-text-field\n        prepend-icon =\"phone\"\n        :disabled    =\"disabled[index]\"\n        v-model      =\"model.phoneNumbers[index].type\"\n        label=\"Type\"\n      />\n    </v-list-tile-sub-title>\n  </span>\n</template>\n\n<script>\nimport { cloneDeep, get } from 'lodash'\n\nimport { ContactCardPhoneGQL, PhoneUpsert } from '../../users/members.gql'\nimport EditButton from './EditButton'\n\nexport default {\n  name: 'ContactCardPhones',\n  components: {\n    EditButton\n  },\n  data () {\n    return {\n      model: null,\n      disabled: [],\n      memberId: ~~this.$route.params.id\n    }\n  },\n  methods: {\n    editClicked (index) {\n      this.setDisabled(index, false)\n    },\n    async saveClicked(index) {\n      try {\n        await this.$apollo.mutate({\n          mutation: PhoneUpsert,\n          variables: {\n            input: {\n              id: this.model.phoneNumbers[index].id,\n              number: this.model.phoneNumbers[index].number,\n              type: this.model.phoneNumbers[index].type,\n              contactId: this.model.phoneNumbers[index].contactId\n            }\n          }\n        })\n        this.$emit('snackbarEmit', 'Phone updated!')\n      } catch (error) {\n        this.$emit('snackbarEmit', error.message)\n        console.error(error)\n        throw new Error('Error Updating phone number!')\n      }\n\n      this.$apollo.queries.phones.refetch()\n\n      this.setDisabled(index, true)\n    },\n    async cancelClicked (index) {\n      this.setDisabled(index, true)\n      this.initMember(this.phones)\n    },\n    initMember(contact) {\n      this.model = cloneDeep(contact)\n      const { phoneNumbers = [] } = this.model\n\n      const disabled = Array(phoneNumbers.length).fill(true)\n      this.disabled = disabled\n    },\n    setDisabled(index, value) {\n      const { phoneNumbers = [] } = this.model\n      const disabled = Array(phoneNumbers.length).fill(true)\n\n      disabled[index] = value\n      this.disabled = disabled\n    }\n  },\n  watch: {\n    phones (next) {\n      this.initMember(next)\n    },\n    '$route'(newRoute) {\n      const { params: { id } } = newRoute\n      this.memberId = ~~id\n    }\n  },\n  apollo: {\n    phones: {\n      ...ContactCardPhoneGQL,\n      variables() {\n        return {\n          memberId: this.memberId\n        }\n      },\n      update(data) {\n        let member = { ...get(data, 'members.nodes.0') }\n        const { contacts } = member\n\n        if (contacts && Array.isArray(contacts) && contacts.length < 2) {\n          let phoneNumbers\n          let parsedContacts\n\n          if (contacts[0].phoneNumbers.length) {\n            parsedContacts = contacts[0]\n          } else {\n            phoneNumbers = [{\n              contactId: contacts[0].id,\n              id: null,\n              number: null,\n              type: null\n            }]\n            parsedContacts = { ...contacts[0], phoneNumbers }\n          }\n\n          return parsedContacts\n        }\n        return contacts\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.findme {\n  border: 2px solid red;\n}\n.details {\n  text-align: left;\n}\n.addresses {\n  display: flex;\n  flex-direction: column;\n  height: 39vh;\n  flex-wrap: wrap;\n  min-width: 45vw;\n  padding-top: 11px;\n  padding-top: 48px;\n  position: relative;\n}\n#contact-list {\n  width: 100%;\n}\n.address-title {\n  position: absolute;\n  top: 9px;\n}\n.contact-section-heading {\n  display: inline;\n}\n</style>\n"]}]}