{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/courses/AddDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/courses/AddDialog.vue","mtime":1554331296000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    showDialog: { type: Boolean, default: false },\n    uploadConfig: Object,\n    dialogTitle: { type: String, default: 'component' }\n  },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    show: {\n      get() { return this.showDialog },\n      set(v) { this.$emit('closeDialog') }\n    },\n    form: {\n      get() { return this.uploadConfig }\n    },\n    title: {\n      get() { return this.dialogTitle }\n    }\n  },\n  methods: {\n    add(data) {\n      if (data.key === 'wordList') {\n        const val = data.item.split(',')\n        val.forEach(d => data.value.push(d))\n      } else {\n        data.value.push(data.item)\n      }\n      data.item = ''\n    },\n    remove(arr, index) {\n      arr.value.splice(index, 1)\n    },\n    onSubmit() {\n      this.$emit('submitForm', this.form)\n    },\n    cancel() {\n      this.$emit('closeDialog', this.form)\n    },\n    formatIndex(label) {\n      // return label.charAt(0).toUpperCase() + label.slice(1)\n      return label\n    }\n  }\n}\n",{"version":3,"sources":["AddDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddDialog.vue","sourceRoot":"src/components/courses","sourcesContent":["<template>\n  <v-dialog v-model=\"show\" max-width=\"768\" persistent>\n      <v-card class=\"course-dialog\">\n        <v-layout column justify-space-around align-center>\n          <h3>Create a new {{title}}</h3>\n          <v-form\n            class=\"dialog-form\"\n            @submit.prevent=\"onSubmit()\"\n          >\n            <template v-for=\"(data, index) in form\">\n              <v-text-field\n                v-if=\"typeof(data) !== 'object'\"\n                :key=\"index\"\n                required\n                v-model=\"form[index]\"\n                :label=\"formatIndex(index)\"\n              ></v-text-field>\n            </template>\n            <template v-if=\"form.metadata\">\n              <h3>Metadata</h3>\n              <v-flex xs12>\n                <template v-for=\"(data, index) in form.metadata\">\n                  <v-form :key=\"index + data.key\" @submit.prevent=\"add(data)\">\n                  <v-layout row>\n                      <v-text-field\n                        :label=\"data.label\"\n                        v-model=\"data.item\"\n                        :hint=\"data.hint\"\n                      ></v-text-field>\n                      <v-btn @click=\"add(data)\">Add</v-btn>\n                  </v-layout>\n                  </v-form>\n                  <template v-for=\"(val, i) in data.value\">\n                    <v-list :key=\"i\">\n                      <v-layout>\n                        <v-list-tile-content>{{ val }}</v-list-tile-content>\n                        <v-list-tile-action>\n                          <v-btn icon>\n                            <v-icon @click=\"remove(data, i)\">close</v-icon>\n                          </v-btn>\n                        </v-list-tile-action>\n                      </v-layout>\n                    </v-list>\n                  </template>\n\n                </template>\n              </v-flex>\n\n            </template>\n            <v-card-actions>\n              <v-btn type=\"submit\" dark color=\"pink\">Add</v-btn>\n              <v-btn @click=\"cancel\">Cancel</v-btn>\n            </v-card-actions>\n          </v-form>\n        </v-layout>\n      </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  props: {\n    showDialog: { type: Boolean, default: false },\n    uploadConfig: Object,\n    dialogTitle: { type: String, default: 'component' }\n  },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    show: {\n      get() { return this.showDialog },\n      set(v) { this.$emit('closeDialog') }\n    },\n    form: {\n      get() { return this.uploadConfig }\n    },\n    title: {\n      get() { return this.dialogTitle }\n    }\n  },\n  methods: {\n    add(data) {\n      if (data.key === 'wordList') {\n        const val = data.item.split(',')\n        val.forEach(d => data.value.push(d))\n      } else {\n        data.value.push(data.item)\n      }\n      data.item = ''\n    },\n    remove(arr, index) {\n      arr.value.splice(index, 1)\n    },\n    onSubmit() {\n      this.$emit('submitForm', this.form)\n    },\n    cancel() {\n      this.$emit('closeDialog', this.form)\n    },\n    formatIndex(label) {\n      // return label.charAt(0).toUpperCase() + label.slice(1)\n      return label\n    }\n  }\n}\n</script>\n\n<style scoped>\n.course-dialog {\n  padding: 10px;\n}\n\n.dialog-form {\n  width: 100%;\n}\n</style>\n"]}]}