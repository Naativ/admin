{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/users/UserAttributes.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/users/UserAttributes.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.duration {\n  min-width: 650px;\n}\n\n.attribute {\n  margin: 20px 10px;\n  text-align: left;\n}\n\n.attribute-remove-button-center {\n  text-align: center;\n}\n\n.text {\n  padding: 0 10px;\n}\n\n.edit-btn {\n  position: absolute !important;\n  top: 50 !important;\n  right: 100px;\n  z-index: 1;\n}\n.edit-speed-dial {\n  top: 88px !important;\n}\n.vjs-value, .vjs-value__string {\n  word-break: break-word;\n}\n.card-title {\n  text-align: center;\n  font-size: 29px;\n  font-weight: 500;\n  margin: auto;\n  width: fit-content;\n  font-variant-caps: small-caps;\n  padding-top: 0;\n}\n",{"version":3,"sources":["UserAttributes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserAttributes.vue","sourceRoot":"src/views/users","sourcesContent":["<template>\n  <v-container xs6>\n    <v-layout justify-space-around v-if=\"attributes.length\">\n      <template v-for=\"(data, index) in attributes\">\n        <v-flex class=\"attribute-remove-button-center\" xs12 column wrap :key=\"index\" >\n          <v-card class=\"attribute\">\n            <v-container>\n              <v-card-title class=\"card-title\">{{data.key}}</v-card-title>\n              <vue-json-pretty\n                :data=\"data\"\n                :deep=\"1\"\n                showLength\n              />\n            </v-container>\n          </v-card>\n          <v-btn @click=\"removalConfirmation(attributes[index].key)\">Remove</v-btn>\n        </v-flex>\n      </template>\n    </v-layout>\n    <v-layout justify-space-around v-else-if=\"!$apollo.loading\">\n      <h3>There are no attributes for this member</h3>\n    </v-layout>\n    <v-layout v-if=\"this.$store.state.user.principal.tenantId === 1007\">\n      <v-card class=\"pa-4 my-5\">\n        <v-flex xs12>\n          <div class=\"text-xs-left duration\">Session Length</div>\n          <v-list v-if=\"durations && durations.rates\">\n            <template v-for=\"(data, index) in durations.rates\">\n              <v-list-tile class=\"text-xs-left\" :key=\"index\">\n                <v-flex xs6>\n                  Session Length: {{data.duration}} {{~~data.duration === 1 ? 'minute' : 'minutes'}}\n                </v-flex>\n                <v-flex xs6>\n                  Amount: ${{getAmount(data.amount)}}\n                </v-flex>\n                <v-icon @click=\"removeDuration(data)\">cancel</v-icon>\n              </v-list-tile>\n            </template>\n          </v-list>\n          <v-list v-else>\n            <v-list-tile class=\"text-xs-left\">\n              There are no current session length/amounts defined.\n            </v-list-tile>\n          </v-list>\n          <v-layout v-if=\"addingDuration\" row>\n            <v-text-field\n              class=\"mx-3\"\n              placeholder=\"0\"\n              label=\"Session Length\"\n              suffix=\"minutes\"\n              v-model=\"newDuration\"\n              type=\"number\"\n              :rules=\"rules\"\n            />\n            <v-text-field\n              placeholder=\"0.00\"\n              prefix=\"$\"\n              label=\"Amount\"\n              v-model=\"newAmount\"\n              type=\"number\"\n            />\n          </v-layout>\n          <v-flex right>\n            <v-btn\n              v-if=\"!addingDuration\"\n              class=\"primary text-capitalize\"\n              @click=\"addingDuration = true\"\n            >\n              Add new session length\n            </v-btn>\n            <v-btn\n              v-else\n              :disabled=\"!newAmount || !newDuration\"\n              class=\"primary text-capitalize\"\n              @click=\"saveDuration\"\n            >\n              Save Session Length\n            </v-btn>\n          </v-flex>\n        </v-flex >\n      </v-card>\n    </v-layout>\n    <v-dialog max-width=\"25vw\" v-model=\"showConfirmationDialog\">\n      <v-card>\n        <v-card-text class=\"text-xs-center\">\n          <v-card-text>Are you sure you want to remove this attribute?</v-card-text>\n          <v-btn color=\"error\" @click=\"removeOneAttribute()\">Yes</v-btn>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\n\nimport VueJsonPretty from 'vue-json-pretty'\n\nimport { getMemberAttribute, removeMemberAttribute, upsertMemberAttribute, queryDurations, removeDuration, addDuration } from '@/users/users.gql'\n\nimport { pathOr } from 'ramda'\nimport { cloneDeep } from 'lodash'\n\nexport default {\n  data() {\n    return {\n      editing: false,\n      attributes: [],\n      removalKey: null,\n      showConfirmationDialog: false,\n      durations: [],\n      newDuration: '',\n      newAmount: '',\n      addingDuration: false,\n      saving: false,\n      rules: [\n        v =>\n          (v >= 5) ||\n        'Duration length must be greater than 5 minutes'\n      ]\n    }\n  },\n  components: {\n    VueJsonPretty\n  },\n  async mounted() {\n    await this.loadAttributes()\n    await this.getDurations()\n  },\n  computed: {\n    id() {\n      return ~~this.$route.params.id\n    },\n    locked() {\n      return this.saving || !this.editing\n    }\n  },\n  methods: {\n    async getDurations() {\n      const { data } = await this.$apollo.query({\n        query: queryDurations,\n        variables: { input: { hostId: this.id, bookingTypeKey: 'vip-session', priority: 0 } },\n        fetchPolicy: 'network-only'\n      })\n      this.durations = data.durations[0]\n    },\n    async saveDuration() {\n      this.addingDuration = true\n      await this.$apollo.mutate({\n        mutation: addDuration,\n        variables: { input: {\n          hostId: this.id,\n          unitId: 1,\n          bookingTypeId: 1005,\n          duration: ~~this.newDuration,\n          amount: ~~this.newAmount * 100,\n          priority: 0 } }\n      })\n      await this.getDurations()\n      this.addingDuration = false\n      this.newDuration = ''\n      this.newAmount = ''\n    },\n    getAmount(amount) {\n      const a = amount / 100\n      return a.toFixed(2)\n    },\n    async removeDuration(duration) {\n      await this.$apollo.mutate({\n        mutation: removeDuration,\n        variables: { input: {\n          hostId: this.id,\n          unitId: 1,\n          bookingTypeId: 1005,\n          duration: duration.duration,\n          amount: duration.amount,\n          priority: 0\n        } }\n      })\n      await this.getDurations()\n    },\n    async loadAttributes() {\n      const result = await this.getAttributes()\n      this.attributes = cloneDeep(result)\n    },\n    async getAttributes() {\n      const res = await this.$apollo.query({\n        query: getMemberAttribute,\n        variables: {\n          input: {\n            memberId: this.id\n          }\n        },\n        fetchPolicy: 'network-only'\n      })\n      const parsedRes = pathOr([], ['data', 'getMemberAttributes'], res)\n      return parsedRes\n    },\n    removalConfirmation(key) {\n      this.removalKey = key\n      this.showConfirmationDialog = true\n    },\n    async removeOneAttribute() {\n      this.showConfirmationDialog = false\n      await this.$apollo.mutate({\n        mutation: removeMemberAttribute,\n        variables: {\n          input: {\n            memberId: this.id,\n            key: this.removalKey\n          }\n        }\n      })\n      this.loadAttributes()\n    },\n    async upsertAttribute(attribute) {\n      await this.$apollo.mutate({\n        mutation: upsertMemberAttribute,\n        variables: {\n          input: {\n            id: attribute.id,\n            key: attribute.key,\n            value: attribute.value\n          }\n        }\n      })\n    },\n    async saveData() {\n      this.saving = true\n      const promises = this.attributes.map(data => this.upsertAttribute(data))\n      await Promise.all(promises)\n      this.editing = false\n      this.saving = false\n    },\n    async cancelEdit () {\n      this.editing = false\n    }\n  }\n}\n</script>\n\n<style>\n.duration {\n  min-width: 650px;\n}\n\n.attribute {\n  margin: 20px 10px;\n  text-align: left;\n}\n\n.attribute-remove-button-center {\n  text-align: center;\n}\n\n.text {\n  padding: 0 10px;\n}\n\n.edit-btn {\n  position: absolute !important;\n  top: 50 !important;\n  right: 100px;\n  z-index: 1;\n}\n.edit-speed-dial {\n  top: 88px !important;\n}\n.vjs-value, .vjs-value__string {\n  word-break: break-word;\n}\n.card-title {\n  text-align: center;\n  font-size: 29px;\n  font-weight: 500;\n  margin: auto;\n  width: fit-content;\n  font-variant-caps: small-caps;\n  padding-top: 0;\n}\n</style>\n"]}]}