{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/users/UsersWorkbench.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/users/UsersWorkbench.vue","mtime":1581353753565},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { get, debounce } from 'lodash'\nimport { mapActions, mapState } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\nimport { TenantsActions } from '@/tenants/TenantsStore'\n\nexport default {\n  props: {\n    memberId: Number\n  },\n  data () {\n    return {\n      drawer: true,\n      mini: true,\n      right: null,\n      selected: null,\n      target: undefined,\n      ...mapState({\n        tags: state => state.tenants.tags\n      })\n    }\n  },\n  watch: {\n    async memberId (id) {\n      this.selected = id\n      if (id) {\n        this.target = await this.getUser({ id })\n      } else {\n        this.target = undefined\n      }\n    }\n  },\n  created () {\n    this.toggleDebounce = debounce((value) => {\n      this.mini = !value\n    }, 150)\n  },\n  methods: {\n    ...mapActions([TenantsActions.FETCH_MEMBER_TAGS]),\n    ...mapActions({\n      removeUser: UsersActions.STOP_VIEWING,\n      getUser: UsersActions.GET_USER\n    }),\n    close (member) {\n      this.removeUser(member.id)\n      const route = get(this, '$route.params.id', -1)\n      if (member && route === member.id) {\n        this.$router.push('/members/')\n      }\n    },\n    view (member) {\n      const id = typeof member === 'object' ? member.id : member\n      this.$router.push('/members/' + id)\n    },\n    openSearch () {\n      this.$router.push('/members/')\n    },\n    mouseOver () {\n      this.toggleDebounce(true)\n    },\n    mouseOut () {\n      this.toggleDebounce(false)\n    }\n  },\n  computed: {\n    ...mapState({\n      viewing: state => state.users.viewing\n    })\n  }\n}\n",{"version":3,"sources":["UsersWorkbench.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UsersWorkbench.vue","sourceRoot":"src/views/users","sourcesContent":["<template>\n  <v-layout row align-stretch fill-height>\n    <div v-if=\"this.$vuetify.breakpoint.name === 'xs'\">\n      <v-select\n        clearable\n        v-model=\"selected\"\n        :items=\"viewing\"\n        item-text=\"displayName\"\n        item-value=\"id\"\n        prepend-icon=\"person\"\n        @change=\"selected ? view(selected) : openSearch()\"\n      />\n      <slot />\n    </div>\n    <v-layout row v-else>\n      <v-flex shrink @mouseover=\"mouseOver\" @mouseleave=\"mouseOut\">\n        <v-navigation-drawer v-model=\"drawer\" :mini-variant.sync=\"mini\" hide-overlay stateless>\n          <v-toolbar flat class=\"transparent\">\n            <v-list class=\"pa-0\">\n              <v-list-tile class=\"mouseover\" avatar @click.stop=\"openSearch\">\n                <v-list-tile-avatar>\n                  <v-icon>search</v-icon>\n                </v-list-tile-avatar>\n\n                <v-list-tile-content>\n                  <!-- TODO: put a search inline here-->\n                  <v-list-tile-title>Search</v-list-tile-title>\n                </v-list-tile-content>\n\n                <v-list-tile-action>\n                  <v-btn icon @click.stop=\"openSearch\">\n                    <v-icon>chevron_right</v-icon>\n                  </v-btn>\n                </v-list-tile-action>\n              </v-list-tile>\n\n              <v-list-tile class=\"mouseover\" avatar v-for=\"member in viewing.slice().reverse()\" :key=\"member.id\">\n                <v-list-tile-avatar @click.stop=\"view(member)\">\n                  <img :src=\"member.profileUrl\" v-if=\"member.profileUrl\" />\n                  <v-icon v-else class=\"no-profile\">person</v-icon>\n                </v-list-tile-avatar>\n\n                <v-list-tile-content class=\"collapse-overflow\" @click.stop=\"view(member)\">\n                  <v-list-tile-title>{{member.displayName}}</v-list-tile-title>\n                  <v-list-tile-sub-title>{{member.id}}</v-list-tile-sub-title>\n                </v-list-tile-content>\n\n                <v-list-tile-action>\n                  <v-btn icon @click.stop=\"close(member)\">\n                    <v-icon>close</v-icon>\n                  </v-btn>\n                </v-list-tile-action>\n              </v-list-tile>\n            </v-list>\n          </v-toolbar>\n        </v-navigation-drawer>\n      </v-flex>\n      <v-flex grow>\n        <div class=\"tray\">\n          <slot />\n        </div>\n      </v-flex>\n    </v-layout>\n  </v-layout>\n</template>\n\n<script>\nimport { get, debounce } from 'lodash'\nimport { mapActions, mapState } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\nimport { TenantsActions } from '@/tenants/TenantsStore'\n\nexport default {\n  props: {\n    memberId: Number\n  },\n  data () {\n    return {\n      drawer: true,\n      mini: true,\n      right: null,\n      selected: null,\n      target: undefined,\n      ...mapState({\n        tags: state => state.tenants.tags\n      })\n    }\n  },\n  watch: {\n    async memberId (id) {\n      this.selected = id\n      if (id) {\n        this.target = await this.getUser({ id })\n      } else {\n        this.target = undefined\n      }\n    }\n  },\n  created () {\n    this.toggleDebounce = debounce((value) => {\n      this.mini = !value\n    }, 150)\n  },\n  methods: {\n    ...mapActions([TenantsActions.FETCH_MEMBER_TAGS]),\n    ...mapActions({\n      removeUser: UsersActions.STOP_VIEWING,\n      getUser: UsersActions.GET_USER\n    }),\n    close (member) {\n      this.removeUser(member.id)\n      const route = get(this, '$route.params.id', -1)\n      if (member && route === member.id) {\n        this.$router.push('/members/')\n      }\n    },\n    view (member) {\n      const id = typeof member === 'object' ? member.id : member\n      this.$router.push('/members/' + id)\n    },\n    openSearch () {\n      this.$router.push('/members/')\n    },\n    mouseOver () {\n      this.toggleDebounce(true)\n    },\n    mouseOut () {\n      this.toggleDebounce(false)\n    }\n  },\n  computed: {\n    ...mapState({\n      viewing: state => state.users.viewing\n    })\n  }\n}\n</script>\n\n<style scoped>\n.no-profile {\n  border: 1px solid #efefef;\n}\n.mouseover {\n  cursor: pointer;\n}\n.collapse-overflow {\n  text-overflow: ellipsis;\n  max-width: 160px;\n}\n.tray {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n}\n</style>\n"]}]}