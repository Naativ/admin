{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/sales/SalesMember.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/sales/SalesMember.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SEARCH_SALES_QUERY from '@/graphql/SearchSales.gql'\nimport DateSelector from '@/components/DateSelector'\nimport SalesDataTable from '@/components/SalesDataTable'\nimport { mapGetters } from 'vuex'\nimport { StoreGetters } from '@/store'\nimport moment from 'moment'\n\nexport default {\n  components: {\n    DateSelector,\n    SalesDataTable\n  },\n  data () {\n    return {\n      loading: false,\n      memberName: null,\n      sales: [],\n      startDate: moment()\n        .startOf('week').subtract(5, 'weeks')\n        .format('YYYY-MM-DD'),\n      endDate: moment()\n        .endOf('week').subtract(1, 'weeks')\n        .format('YYYY-MM-DD'),\n      addDialog: false\n    }\n  },\n  async mounted () {\n    this.sales = await this.getSalesHistory()\n  },\n  methods: {\n    findMemberName() {\n      if (!this.sales.length) {\n        return null\n      }\n      const salesIds = this.sales.map(sale => sale.id)\n      const index = salesIds.indexOf(this.id)\n      this.memberName = this.sales[index].displayName\n    },\n    async startDateChanged({ date }) {\n      this.startDate = date\n      this.sales = await this.getSalesHistory()\n    },\n    async endDateChanged({ date }) {\n      this.endDate = date\n      this.sales = await this.getSalesHistory()\n    },\n    async getSalesHistory () {\n      const input = {\n        tenantId: this.$store.state.user.principal.tenantId,\n        endDate: this.endDate,\n        startDate: this.startDate,\n        sellerId: parseInt(this.id)\n      }\n      this.loading = true\n      const data = await this.$apollo.query({\n        query: SEARCH_SALES_QUERY,\n        variables: {\n          saleSearchInput: {\n            ...input\n          }\n        },\n        fetchPolicy: 'network-only'\n      })\n      this.loading = false\n      return data.data.searchSales\n    }\n  },\n  computed: {\n    ...mapGetters({\n      permissions: StoreGetters.permissions\n    }),\n    id () { return ~~this.$route.params.id }\n  },\n  watch: {\n    '$route': async function (to, from) {\n      this.memberName = null\n      this.sales = await this.getSalesHistory()\n    }\n  }\n}\n",{"version":3,"sources":["SalesMember.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SalesMember.vue","sourceRoot":"src/views/sales","sourcesContent":["<template>\n  <v-layout column ma-5>\n    <h1>Sales {{memberName ? `for ${memberName}` : null}}</h1>\n    <v-card>\n      <v-card-text>\n        <v-subheader>Range</v-subheader>\n        <v-container grid-list-md text-xs-center>\n          <v-layout row wrap>\n            <v-flex xs12 sm6>\n              <DateSelector\n                :selectedDate=\"startDate\"\n                :label=\"'Select Start Date'\"\n                @date-changed=\"startDateChanged\"\n              />\n            </v-flex>\n            <v-flex xs12 sm6>\n              <DateSelector\n                :selectedDate=\"endDate\"\n                :label=\"'Select End Date'\"\n                @date-changed=\"endDateChanged\"\n              />\n            </v-flex>\n          </v-layout>\n        </v-container>\n      </v-card-text>\n    </v-card>\n    <SalesDataTable\n      :sales=\"sales\"\n      :loading=\"loading\"\n    />\n  </v-layout>\n</template>\n\n<script>\nimport SEARCH_SALES_QUERY from '@/graphql/SearchSales.gql'\nimport DateSelector from '@/components/DateSelector'\nimport SalesDataTable from '@/components/SalesDataTable'\nimport { mapGetters } from 'vuex'\nimport { StoreGetters } from '@/store'\nimport moment from 'moment'\n\nexport default {\n  components: {\n    DateSelector,\n    SalesDataTable\n  },\n  data () {\n    return {\n      loading: false,\n      memberName: null,\n      sales: [],\n      startDate: moment()\n        .startOf('week').subtract(5, 'weeks')\n        .format('YYYY-MM-DD'),\n      endDate: moment()\n        .endOf('week').subtract(1, 'weeks')\n        .format('YYYY-MM-DD'),\n      addDialog: false\n    }\n  },\n  async mounted () {\n    this.sales = await this.getSalesHistory()\n  },\n  methods: {\n    findMemberName() {\n      if (!this.sales.length) {\n        return null\n      }\n      const salesIds = this.sales.map(sale => sale.id)\n      const index = salesIds.indexOf(this.id)\n      this.memberName = this.sales[index].displayName\n    },\n    async startDateChanged({ date }) {\n      this.startDate = date\n      this.sales = await this.getSalesHistory()\n    },\n    async endDateChanged({ date }) {\n      this.endDate = date\n      this.sales = await this.getSalesHistory()\n    },\n    async getSalesHistory () {\n      const input = {\n        tenantId: this.$store.state.user.principal.tenantId,\n        endDate: this.endDate,\n        startDate: this.startDate,\n        sellerId: parseInt(this.id)\n      }\n      this.loading = true\n      const data = await this.$apollo.query({\n        query: SEARCH_SALES_QUERY,\n        variables: {\n          saleSearchInput: {\n            ...input\n          }\n        },\n        fetchPolicy: 'network-only'\n      })\n      this.loading = false\n      return data.data.searchSales\n    }\n  },\n  computed: {\n    ...mapGetters({\n      permissions: StoreGetters.permissions\n    }),\n    id () { return ~~this.$route.params.id }\n  },\n  watch: {\n    '$route': async function (to, from) {\n      this.memberName = null\n      this.sales = await this.getSalesHistory()\n    }\n  }\n}\n</script>\n\n<style>\n.addbtn.sm {\n  top: -5px !important;\n}\n.addbtn {\n  top: 15px;\n}\n</style>\n"]}]}