{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/associations/Association.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/associations/Association.vue","mtime":1574205365000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.association-table {\n  cursor: default;\n}\n.link {\n  margin: auto;\n}\n",{"version":3,"sources":["Association.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA","file":"Association.vue","sourceRoot":"src/views/associations","sourcesContent":["<template>\n  <v-layout column ma-5>\n    <v-card>\n      <v-card-title class=\"secondary white--text\" primary-title style=\"justify-content: center;\">\n        <h1>Associations Dashboard</h1>\n      </v-card-title>\n      <v-card-text>\n        <v-text-field\n          v-model      =\"searchInput\"\n          prepend-icon =\"search\"\n          label        =\"Search by member name\"\n          @keyup       =\"searchInputDebounce\"\n          :loading       =\"loading\"\n        >\n        </v-text-field>\n      </v-card-text>\n\n      <AssociationsDataTable\n        :associations  =\"members\"\n        :currentScreen =\"'dashboard'\"\n        @view          =\"view\"\n      />\n    </v-card>\n  </v-layout>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\nimport { debounce } from 'lodash'\n\nimport AssociationsDataTable from '@/components/AssociationsDataTable.vue'\n\nexport default {\n  components: {\n    AssociationsDataTable\n  },\n  data () {\n    return {\n      searchInputDebounce: debounce(() => this.search(), 500),\n      members: [],\n      searchInput: '',\n      loading: false,\n      addDialog: false\n    }\n  },\n  methods: {\n    ...mapActions({\n      usersFetch: UsersActions.FETCH_USERS,\n      startViewing: UsersActions.START_VIEWING\n    }),\n    async search(input) {\n      const { searchInput } = this\n      this.loading = true\n      await this.usersFetch({ term: searchInput, first: 25, after: 0 })\n      this.loading = false\n    },\n    async view(id) {\n      let displayName\n\n      this.usersSearchResults.forEach(result => {\n        if (!displayName && result.id === id) {\n          displayName = result.displayName\n        }\n      })\n\n      this.startViewing({ id, displayName })\n      this.$router.push(`/associations/member/${id}`)\n    },\n    handleEdittingMetaDataArr(index, inputValue) {\n      this.edittingMetaDataArr[index].metadata.percent = inputValue\n    }\n  },\n  computed: {\n    ...mapState({\n      usersSearchResults: state => state.users.searched.results\n    })\n  },\n  watch: {\n    usersSearchResults(newVal) {\n      if (!Array.isArray(newVal)) {\n        this.members = []\n        throw new Error('watcher requires an array')\n      }\n      const mappedMembers = newVal.map(member => {\n        const { displayName: name, id } = member\n        return { name, id }\n      })\n      this.members = mappedMembers\n    }\n  }\n}\n</script>\n\n<style>\n.association-table {\n  cursor: default;\n}\n.link {\n  margin: auto;\n}\n</style>\n"]}]}