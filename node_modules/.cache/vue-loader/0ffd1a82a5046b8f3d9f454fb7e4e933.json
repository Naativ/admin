{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/Dashboard.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport { StoreGetters } from '@/store'\nimport DashCard from '@/components/DashboardCard.vue'\nimport LeaderBoard from '@/components/Leaderboard.vue'\nimport MembersMap from '@/components/MembersMap.vue'\nimport ALL_TENANT_SALES_SUMMARIES_QUERY from '../graphql/AllTenantSales.gql'\nimport {\n  MONTHLY_SALES_LEADERBOARD,\n  MONTHLY_FRONTLINE_LEADERBOARD\n} from '@/graphql/Leaderboard.js'\nimport MEMBERS_COUNT from '../graphql/MemberCount.gql'\nimport MEMBERS_COUNT_BY_RANGE from '../graphql/MemberCountByRange.gql'\nimport * as R from 'ramda'\nimport moment from 'moment'\n\nexport default {\n  name: 'home',\n  components: {\n    DashCard,\n    LeaderBoard,\n    MembersMap\n  },\n  data: () => ({\n    monthlySales: {\n      totalAmount: 0,\n      commissionablePoints: 0,\n      saleCount: 0\n    },\n    totalSales: 0,\n    totalPoints: 0,\n    saleCount: 0,\n    memberCount: 0,\n    membersThisMonth: 0,\n    MonthlyFrontlineLeaders: [],\n    MonthlySalesLeaders: [],\n    currentMonth: ~~moment().format('M'),\n    currentYear: ~~moment().format('YYYY'),\n    tenantId: 0,\n    accessToken: '',\n    mapStyle: ''\n  }),\n  mounted () {\n    this.tenantId = this.$store.state.user.principal.tenantId\n    this.accessToken =\n      process.env[`VUE_APP_MAPBOX_${this.tenantId}_ACCESS_TOKEN`]\n    this.mapStyle = process.env[`VUE_APP_MAPBOX_${this.tenantId}_MAP_STYLE`]\n  },\n  apollo: {\n    monthlySales () {\n      return {\n        query: ALL_TENANT_SALES_SUMMARIES_QUERY,\n        variables: {\n          idCondition: {\n            tenantId: this.$store.state.user.principal.tenantId,\n            year: this.currentYear\n          }\n        },\n        update ({ allTenantSalesSummaries }) {\n          const sales = allTenantSalesSummaries.nodes\n          const currentMonth = this.currentMonth\n          this.totalSales = R.reduce(\n            (acc, sale) => {\n              return R.add(acc, sale.totalAmount)\n            },\n            0,\n            sales\n          )\n          this.totalPoints = R.reduce(\n            (acc, sale) => {\n              return R.add(acc, sale.totalPoints)\n            },\n            0,\n            sales\n          )\n          this.saleCount = R.reduce(\n            (acc, sale) => {\n              return R.add(acc, sale.saleCount)\n            },\n            0,\n            sales\n          )\n\n          return (\n            R.find(R.propEq('month', currentMonth))(sales) || this.monthlySales\n          )\n        }\n      }\n    },\n    memberCount: {\n      query: MEMBERS_COUNT,\n      variables () {\n        return {\n          input: {\n            tenantId: this.$store.state.user.principal.tenantId\n          }\n        }\n      },\n      update ({ memberCount }) {\n        return memberCount\n      }\n    },\n    membersThisMonth: {\n      query: MEMBERS_COUNT_BY_RANGE,\n      variables () {\n        return {\n          input: {\n            tenantId: this.$store.state.user.principal.tenantId,\n            startDate: moment()\n              .startOf('month')\n              .format('YYYY-MM-DD'),\n            endDate: moment()\n              .endOf('month')\n              .format('YYYY-MM-DD')\n          }\n        }\n      },\n      update ({ memberCountByRange }) {\n        return memberCountByRange\n      }\n    },\n    MonthlySalesLeaders: {\n      query: MONTHLY_SALES_LEADERBOARD,\n      variables () {\n        return {\n          leaderInput: {\n            tenantId: this.$store.state.user.principal.tenantId,\n            month: ~~moment().format('MM'),\n            year: ~~moment().format('YYYY'),\n            omitTagIds: [8]\n          }\n        }\n      },\n      update ({ monthlySalesLeaderboard }) {\n        return monthlySalesLeaderboard\n      }\n    },\n    MonthlyFrontlineLeaders: {\n      query: MONTHLY_FRONTLINE_LEADERBOARD,\n      variables () {\n        return {\n          leaderInput: {\n            tenantId: this.$store.state.user.principal.tenantId,\n            month: ~~moment().format('MM'),\n            year: ~~moment().format('YYYY'),\n            omitTagIds: [8]\n          }\n        }\n      },\n      update ({ monthlyFrontlineLeaderboard }) {\n        return monthlyFrontlineLeaderboard\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      access: StoreGetters.access,\n      permissions: StoreGetters.permissions\n    }),\n    isSuperAdmin () {\n      return this.permissions.find(p => p.id === 11)\n    }\n    // totalSales() {\n    //   const test = null\n    //   if (this.allSales) {\n    //     const test = R.reduce(R.add, 'totalAmount', this.allSales.nodes)\n    //   }\n    //   return test\n    // }\n  }\n}\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home main-container\">\n    <h1>Dashboard</h1>\n    <div v-if=\"access.hasDashboard || isSuperAdmin\">\n      <v-subheader>Yearly Sales</v-subheader>\n      <v-container\n        fluid\n        grid-list-xs\n      >\n        <v-layout\n          row\n          wrap\n        >\n          <v-flex\n            sm4\n            pa-3\n          >\n            <DashCard\n              color=\"light-blue\"\n              darken=\"1\"\n              :currency=\"true\"\n              :display=\"totalSales\"\n              subheading=\"Total Company Sales\"\n              icon=\"person\"\n            />\n          </v-flex>\n          <v-flex\n            sm4\n            pa-3\n          >\n            <DashCard\n              color=\"indigo\"\n              darken=\"1\"\n              :display=\"totalPoints\"\n              subheading=\"Total Company Points\"\n              icon=\"people\"\n            />\n          </v-flex>\n          <v-flex\n            sm4\n            pa-3\n          >\n            <DashCard\n              color=\"pink\"\n              darken=\"1\"\n              :display=\"saleCount\"\n              subheading=\"Total Orders\"\n              icon=\"star\"\n            />\n          </v-flex>\n        </v-layout>\n      </v-container>\n      <v-subheader>Team</v-subheader>\n      <v-container\n        fluid\n        grid-list-xs\n      >\n        <v-layout\n          row\n          wrap\n        >\n          <v-flex\n            sm6\n            pa-3\n          >\n            <DashCard\n              v-if=\"memberCount.length === 0\"\n              color=\"pink\"\n              darken=\"2\"\n              :display=\"0\"\n              subheading=\"Total Size\"\n              icon=\"perm_contact_calendar\"\n            />\n            <DashCard\n              v-for=\"(mCount, index) in memberCount\"\n              :key=\"index\"\n              color=\"light-blue\"\n              darken=\"2\"\n              :display=\"mCount.count\"\n              :subheading=\"`Total Size (${mCount.type})`\"\n              icon=\"person_outline\"\n            />\n          </v-flex>\n          <v-flex\n            sm6\n            pa-3\n          >\n            <DashCard\n              v-if=\"membersThisMonth.length === 0\"\n              color=\"pink\"\n              darken=\"2\"\n              :display=\"0\"\n              subheading=\"Joined this Month\"\n              icon=\"perm_contact_calendar\"\n            />\n            <DashCard\n              v-for=\"(mCount, index) in membersThisMonth\"\n              :key=\"index\"\n              color=\"pink\"\n              darken=\"2\"\n              :display=\"mCount.count\"\n              :subheading=\"`Joined this Month (${mCount.type})`\"\n              icon=\"perm_contact_calendar\"\n            />\n          </v-flex>\n        </v-layout>\n      </v-container>\n      <v-subheader>Monthly Sales</v-subheader>\n      <v-container\n        fluid\n        grid-list-xs\n      >\n        <v-layout\n          row\n          wrap\n        >\n          <v-flex\n            sm4\n            pa-3\n          >\n            <DashCard\n              color=\"light-blue\"\n              darken=\"1\"\n              :currency=\"true\"\n              :display=\"monthlySales.totalAmount\"\n              subheading=\"Monthly Sales\"\n              icon=\"person\"\n            />\n          </v-flex>\n          <v-flex\n            sm4\n            pa-3\n          >\n            <DashCard\n              color=\"indigo\"\n              darken=\"1\"\n              :display=\"monthlySales.commissionablePoints\"\n              subheading=\"Monthly Points\"\n              icon=\"people\"\n            />\n          </v-flex>\n          <v-flex\n            sm4\n            pa-3\n          >\n            <DashCard\n              color=\"pink\"\n              darken=\"1\"\n              :display=\"monthlySales.saleCount\"\n              subheading=\"Monthly Orders\"\n              icon=\"star\"\n            />\n          </v-flex>\n        </v-layout>\n      </v-container>\n      <div v-if=\"tenantId !== 0 && accessToken\">\n        <v-subheader>Members</v-subheader>\n        <MembersMap\n          :accessToken=\"accessToken\"\n          :mapStyle=\"mapStyle\"\n          :tenantId=\"tenantId\"\n        />\n      </div>\n      <v-subheader>Leaderboards</v-subheader>\n      <v-container\n        fluid\n        grid-list-xs\n      >\n        <v-layout\n          row\n          wrap\n        >\n          <v-flex\n            sm6\n            pa-3\n          >\n            <LeaderBoard\n              :leaders=\"MonthlySalesLeaders\"\n              title=\"Top Sellers\"\n              :currency=\"true\"\n            />\n          </v-flex>\n          <v-flex\n            sm6\n            pa-3\n          >\n            <LeaderBoard\n              :leaders=\"MonthlyFrontlineLeaders\"\n              title=\"Top Recruiters\"\n            />\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </div>\n    <div v-else>\n      <p>Looks like you don't have access to any Dashboard Widgets. Contact your Hexly system administrator to get you set up.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { StoreGetters } from '@/store'\nimport DashCard from '@/components/DashboardCard.vue'\nimport LeaderBoard from '@/components/Leaderboard.vue'\nimport MembersMap from '@/components/MembersMap.vue'\nimport ALL_TENANT_SALES_SUMMARIES_QUERY from '../graphql/AllTenantSales.gql'\nimport {\n  MONTHLY_SALES_LEADERBOARD,\n  MONTHLY_FRONTLINE_LEADERBOARD\n} from '@/graphql/Leaderboard.js'\nimport MEMBERS_COUNT from '../graphql/MemberCount.gql'\nimport MEMBERS_COUNT_BY_RANGE from '../graphql/MemberCountByRange.gql'\nimport * as R from 'ramda'\nimport moment from 'moment'\n\nexport default {\n  name: 'home',\n  components: {\n    DashCard,\n    LeaderBoard,\n    MembersMap\n  },\n  data: () => ({\n    monthlySales: {\n      totalAmount: 0,\n      commissionablePoints: 0,\n      saleCount: 0\n    },\n    totalSales: 0,\n    totalPoints: 0,\n    saleCount: 0,\n    memberCount: 0,\n    membersThisMonth: 0,\n    MonthlyFrontlineLeaders: [],\n    MonthlySalesLeaders: [],\n    currentMonth: ~~moment().format('M'),\n    currentYear: ~~moment().format('YYYY'),\n    tenantId: 0,\n    accessToken: '',\n    mapStyle: ''\n  }),\n  mounted () {\n    this.tenantId = this.$store.state.user.principal.tenantId\n    this.accessToken =\n      process.env[`VUE_APP_MAPBOX_${this.tenantId}_ACCESS_TOKEN`]\n    this.mapStyle = process.env[`VUE_APP_MAPBOX_${this.tenantId}_MAP_STYLE`]\n  },\n  apollo: {\n    monthlySales () {\n      return {\n        query: ALL_TENANT_SALES_SUMMARIES_QUERY,\n        variables: {\n          idCondition: {\n            tenantId: this.$store.state.user.principal.tenantId,\n            year: this.currentYear\n          }\n        },\n        update ({ allTenantSalesSummaries }) {\n          const sales = allTenantSalesSummaries.nodes\n          const currentMonth = this.currentMonth\n          this.totalSales = R.reduce(\n            (acc, sale) => {\n              return R.add(acc, sale.totalAmount)\n            },\n            0,\n            sales\n          )\n          this.totalPoints = R.reduce(\n            (acc, sale) => {\n              return R.add(acc, sale.totalPoints)\n            },\n            0,\n            sales\n          )\n          this.saleCount = R.reduce(\n            (acc, sale) => {\n              return R.add(acc, sale.saleCount)\n            },\n            0,\n            sales\n          )\n\n          return (\n            R.find(R.propEq('month', currentMonth))(sales) || this.monthlySales\n          )\n        }\n      }\n    },\n    memberCount: {\n      query: MEMBERS_COUNT,\n      variables () {\n        return {\n          input: {\n            tenantId: this.$store.state.user.principal.tenantId\n          }\n        }\n      },\n      update ({ memberCount }) {\n        return memberCount\n      }\n    },\n    membersThisMonth: {\n      query: MEMBERS_COUNT_BY_RANGE,\n      variables () {\n        return {\n          input: {\n            tenantId: this.$store.state.user.principal.tenantId,\n            startDate: moment()\n              .startOf('month')\n              .format('YYYY-MM-DD'),\n            endDate: moment()\n              .endOf('month')\n              .format('YYYY-MM-DD')\n          }\n        }\n      },\n      update ({ memberCountByRange }) {\n        return memberCountByRange\n      }\n    },\n    MonthlySalesLeaders: {\n      query: MONTHLY_SALES_LEADERBOARD,\n      variables () {\n        return {\n          leaderInput: {\n            tenantId: this.$store.state.user.principal.tenantId,\n            month: ~~moment().format('MM'),\n            year: ~~moment().format('YYYY'),\n            omitTagIds: [8]\n          }\n        }\n      },\n      update ({ monthlySalesLeaderboard }) {\n        return monthlySalesLeaderboard\n      }\n    },\n    MonthlyFrontlineLeaders: {\n      query: MONTHLY_FRONTLINE_LEADERBOARD,\n      variables () {\n        return {\n          leaderInput: {\n            tenantId: this.$store.state.user.principal.tenantId,\n            month: ~~moment().format('MM'),\n            year: ~~moment().format('YYYY'),\n            omitTagIds: [8]\n          }\n        }\n      },\n      update ({ monthlyFrontlineLeaderboard }) {\n        return monthlyFrontlineLeaderboard\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      access: StoreGetters.access,\n      permissions: StoreGetters.permissions\n    }),\n    isSuperAdmin () {\n      return this.permissions.find(p => p.id === 11)\n    }\n    // totalSales() {\n    //   const test = null\n    //   if (this.allSales) {\n    //     const test = R.reduce(R.add, 'totalAmount', this.allSales.nodes)\n    //   }\n    //   return test\n    // }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n"]}]}