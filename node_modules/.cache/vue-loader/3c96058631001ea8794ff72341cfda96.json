{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/appointments/BookingDetails.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/appointments/BookingDetails.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.booking-details {\n  height: 100%;\n  padding: 10px 10px;\n  width: 100%;\n  margin: 10px 10px;\n}\n.editbtn.sm {\n  top: -5px !important;\n}\n.editbtn {\n  top: 15px;\n}\n.edit-speed-dial {\n  top: 88px !important;\n}\n",{"version":3,"sources":["BookingDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BookingDetails.vue","sourceRoot":"src/views/appointments","sourcesContent":["<template>\n<v-layout column>\n  <ParticipantDialog\n    @close=\"participantSet\"\n    @cancel=\"cancelDialogue\"\n    :open=\"choosingParticipant\"\n  />\n  <v-layout v-if=\"host\" justify-space-between align-center row>\n    <v-btn\n      :class=\"{ editbtn: true, sm: this.$vuetify.breakpoint.name === 'xs' }\"\n      class=\"edit-speed-dial\"\n      v-if=\"!editing\"\n      absolute\n      dark\n      fab\n      top\n      right\n      color=\"pink\"\n      @click=\"editing = true\"\n    >\n      <v-icon>edit</v-icon>\n    </v-btn>\n    <v-speed-dial\n      absolute\n      dark\n      fab\n      top\n      right\n      color=\"pink\"\n      v-model=\"saveSpeedDial\"\n      direction=\"bottom\"\n      :open-on-hover=\"true\"\n      transition=\"slide-y-transition\"\n      :disabled=\"!saving\"\n      v-else\n      class=\"edit-speed-dial\"\n    >\n      <v-btn slot=\"activator\" v-model=\"saveActivator\" color=\"pink\" dark fab>\n        <v-icon>save</v-icon>\n        <v-icon>close</v-icon>\n      </v-btn>\n      <v-btn fab dark small color=\"green\" @click=\"saveData\">\n        <v-icon>check</v-icon>\n      </v-btn>\n      <v-btn fab dark small color=\"red\" @click=\"cancelEdit\">\n        <v-icon>cancel</v-icon>\n      </v-btn>\n    </v-speed-dial>\n    <v-card class=\"booking-details\">\n      <h3>HOST</h3>\n      <a :href=\"'/members/' + host.id\">\n        <v-text-field\n          label=\"Name\"\n          v-model=\"host.name\"\n          required\n          regular\n          disabled\n        ></v-text-field>\n      </a>\n      <v-text-field\n        label=\"ID\"\n        v-model=\"host.id\"\n        required\n        :box=\"editing\"\n        @focus=\"dialogueOpened('host')\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n      <v-text-field\n        label=\"MRN\"\n        v-model=\"host.mrn\"\n        required\n        disabled\n      ></v-text-field>\n      <v-text-field\n        label=\"Contact Email\"\n        v-model=\"host.contactEmail\"\n        required\n        disabled\n      ></v-text-field>\n    </v-card>\n    <v-card class=\"booking-details\">\n      <h3>PARTICIPANT</h3>\n      <a :href=\"'/members/' + participant.id\">\n        <v-text-field\n          label=\"Name\"\n          v-model=\"participant.name\"\n          required\n          regular\n          disabled\n        ></v-text-field>\n      </a>\n      <v-text-field\n        label=\"ID\"\n        v-model=\"participant.id\"\n        required\n        :box=\"editing\"\n        @focus=\"dialogueOpened('participant')\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n      <v-text-field\n        label=\"MRN\"\n        v-model=\"participant.mrn\"\n        required\n        disabled\n      ></v-text-field>\n      <v-text-field\n        label=\"Contact Email\"\n        v-model=\"participant.contactEmail\"\n        required\n        disabled\n      ></v-text-field>\n    </v-card>\n  </v-layout>\n  <v-card class=\"booking-details\" v-if=\"bookingPayment && canReadPayout\">\n    <h3>PAYOUT</h3>\n    <v-text-field\n      :label=\"(bookingPayment.amount / 100) | toCurrency(bookingPayment.currency)\"\n      required\n      regular\n      disabled\n    ></v-text-field>\n    <v-text-field\n      label=\"Description\"\n      v-model=\"bookingPayment.description\"\n      required\n      regular\n      disabled\n    ></v-text-field>\n    <v-text-field\n      label=\"Status\"\n      v-model=\"bookingPayment.status\"\n      required\n      regular\n      disabled\n    ></v-text-field>\n  </v-card>\n  <v-card class=\"booking-details\" v-if=\"booking\">\n    <h3>BOOKING STATS</h3>\n    <v-layout column>\n      <v-text-field\n        label=\"Scheduled Start Date\"\n        v-model=\"booking.start\"\n        required\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n      <v-text-field\n        label=\"Scheduled End Date\"\n        v-model=\"booking.end\"\n        required\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n      <v-select\n        v-model=\"status\"\n        :label=\"!editing ? 'Status' : 'Select your status'\"\n        :items=\"statuses\"\n        item-text=\"name\"\n        item-value=\"id\"\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      />\n      <v-select\n        label=\"Type\"\n        v-model=\"type\"\n        :items=\"types\"\n        required\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-select>\n      <v-text-field\n        label=\"Availability ID\"\n        v-model=\"booking.availabilityId\"\n        required\n        :box=\"editing\"\n        :regular=\"!editing\"\n        :disabled=\"!editing\"\n      ></v-text-field>\n    </v-layout>\n  </v-card>\n</v-layout>\n</template>\n\n<script>\nimport { booking as GET_BOOKING, getBookingStatus as GET_BOOKING_STATUS, getBookingType as GET_BOOKING_TYPE } from '@/appointments/appointments.gql'\nimport { forEach, cloneDeep } from 'lodash'\nimport { UPSERT_BOOKING } from '@/graphql/Booking.js'\nimport ParticipantDialog from '@/views/users/appointments/ParticipantDialog.vue'\nimport { getPaymentFromBooking } from '@/payouts/payouts.gql'\nimport { mapGetters } from 'vuex'\nimport { StoreGetters } from '@/store'\n\nexport default {\n  components: { ParticipantDialog },\n  data() {\n    return {\n      bookingPayment: {},\n      bookingIds: [],\n      typeIds: [],\n      status: '',\n      type: '',\n      booking: {},\n      editing: false,\n      saveSpeedDial: false,\n      saving: false,\n      saveActivator: false,\n      statuses: [],\n      types: [],\n      bookingStatusArray: [],\n      bookingTypeArray: [],\n      choosingParticipant: false,\n      participantType: ''\n    }\n  },\n  async mounted() {\n    await this.getBooking()\n    await this.getBookingStatusIds()\n    await this.getBookingTypeIds()\n    await this.getPayment()\n  },\n  computed: {\n    ...mapGetters({\n      permissions: StoreGetters.permissions\n    }),\n    canReadPayout() {\n      return this.permissions.find(p => p.id === 14)\n    },\n    host() {\n      return this.booking ? this.booking.host : ''\n    },\n    participant() {\n      return this.booking ? this.booking.guest : ''\n    },\n    id() {\n      const id = this.$route.params.id\n      const ids = id.split('_')\n      return ids[1]\n    }\n  },\n  methods: {\n    participantSet(id) {\n      this.choosingParticipant = false\n      if (this.participantType === 'host') {\n        this.host.id = id\n      } else if (this.participantType === 'participant') {\n        this.participant.id = id\n      }\n    },\n    cancelDialogue() {\n      this.choosingParticipant = false\n    },\n    dialogueOpened(participantType) {\n      this.choosingParticipant = true\n      this.participantType = participantType\n    },\n    async getBookingStatusIds() {\n      const { data } = await this.$apollo.query({\n        query: GET_BOOKING_STATUS,\n        fetchPolicy: 'network-only'\n      })\n      this.bookingStatusArray = data.getBookingStatus\n      this.statuses = this.bookingStatusArray.map(r => {\n        return r.name\n      })\n      forEach(this.bookingStatusArray, _ => {\n        this.bookingIds[~~_.id] = _.name\n      })\n      this.status = this.bookingIds[~~this.booking.statusId]\n    },\n    async saveData() {\n      const booking = this.bookingStatusArray.filter(booking => {\n        return booking.name === this.status\n      })\n      const type = this.bookingTypeArray.filter(booking => {\n        return booking.name === this.type\n      })\n      const statusId = booking[0].id\n      const typeId = type[0].id\n      await this.$apollo.mutate({\n        mutation: UPSERT_BOOKING,\n        variables: {\n          input: {\n            id: ~~this.booking.id,\n            availabilityId: this.booking.availabilityId,\n            end: this.booking.end,\n            guestId: ~~this.participant.id,\n            hostId: ~~this.host.id,\n            start: this.booking.start,\n            statusId: statusId,\n            typeId: typeId\n          }\n        }\n      })\n      await this.getBooking()\n      this.editing = false\n    },\n    async cancelEdit() {\n      this.editing = false\n    },\n    async getPayment() {\n      const { data } = await this.$apollo.query({\n        query: getPaymentFromBooking,\n        variables: { bookingId: ~~this.id },\n        fetchPolicy: 'network-only'\n      })\n      this.bookingPayment = data.getPaymentFromBooking\n    },\n    async getBooking() {\n      const res = await this.$apollo.query({\n        query: GET_BOOKING,\n        variables: {\n          input: {\n            ids: [~~this.id]\n          }\n        },\n        fetchPolicy: 'network-only'\n      })\n      this.booking = cloneDeep(res.data.bookingSearch.results[0])\n    },\n    async getBookingTypeIds() {\n      const { data } = await this.$apollo.query({\n        query: GET_BOOKING_TYPE,\n        fetchPolicy: 'network-only'\n      })\n      this.bookingTypeArray = data.getBookingType\n      this.types = this.bookingTypeArray.map(t => {\n        return t.name\n      })\n      forEach(this.bookingTypeArray, _ => {\n        this.typeIds[~~_.id] = _.name\n      })\n      this.type = this.typeIds[~~this.booking.typeId]\n    }\n  }\n}\n</script>\n\n<style>\n.booking-details {\n  height: 100%;\n  padding: 10px 10px;\n  width: 100%;\n  margin: 10px 10px;\n}\n.editbtn.sm {\n  top: -5px !important;\n}\n.editbtn {\n  top: 15px;\n}\n.edit-speed-dial {\n  top: 88px !important;\n}\n</style>\n"]}]}