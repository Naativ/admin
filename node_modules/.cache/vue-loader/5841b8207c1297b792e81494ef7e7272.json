{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/Address.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/Address.vue","mtime":1555089484000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapMutations } from 'vuex'\n\nimport { UsersActions, UsersMutations } from '@/users/UsersStore'\n\nexport default {\n  name: 'AddressForm',\n  props: {\n    memberId: Number\n  },\n  data() {\n    return {\n      address: {\n        id: null,\n        name: null,\n        street: null,\n        city: null,\n        province: null,\n        country: null,\n        postalCode: null,\n        street2: null\n      },\n      loading: false,\n      valid: false\n    }\n  },\n  async mounted() {\n    const address = await this.getAddress(this.memberId)\n    this.address = { ...address }\n  },\n  methods: {\n    ...mapActions({ getAddress: UsersActions.GET_ADDRESS }),\n    ...mapMutations({ updateAddress: UsersMutations.UPDATE_ADDRESS }),\n    async save() {\n      if (this.$refs.form.validate()) {\n        try {\n          this.loading = true\n          await this.updateAddress({\n            id: this.address.id,\n            name: this.address.name,\n            street: this.address.street,\n            city: this.address.city,\n            province: this.address.province,\n            country: this.address.country,\n            postalCode: this.address.postalCode,\n            street2: this.address.street2 || '',\n            memberId: this.memberId\n          })\n          this.loading = false\n        } catch (e) {\n          console.error({ e })\n          this.loading = false\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Address.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Address.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-form @submit.prevent=\"save\" ref=\"form\" v-model=\"valid\" lazy-validation>\n      <v-text-field\n        label=\"Name\"\n        v-model=\"address.name\"\n        :rules=\"[v => !!v || 'Name is required']\"\n        required\n      />\n      <v-text-field\n        label=\"Street\"\n        v-model=\"address.street\"\n        :rules=\"[v => !!v || 'Street is required']\"\n        required\n      />\n      <v-text-field label=\"Street 2\" v-model=\"address.street2\"/>\n      <v-text-field\n        label=\"City\"\n        v-model=\"address.city\"\n        :rules=\"[v => !!v || 'City is required']\"\n        required\n      />\n      <v-text-field\n        label=\"State/Province\"\n        v-model=\"address.province\"\n        :rules=\"[v => !!v || 'State/Province is required']\"\n        required\n      />\n      <v-text-field\n        label=\"Postal Code\"\n        v-model=\"address.postalCode\"\n        :rules=\"[v => !!v || 'Postal Code is required']\"\n        required\n      />\n      <v-text-field\n        label=\"Country\"\n        v-model=\"address.country\"\n        :rules=\"[v => !!v || 'Country is required']\"\n        required\n      />\n      <v-btn\n        @click=\"save()\"\n        :disabled=\"!valid\"\n        :loading=\"loading\"\n        color=\"success\"\n      >\n        Save Address\n      </v-btn>\n    </v-form>\n</template>\n\n<script>\nimport { mapActions, mapMutations } from 'vuex'\n\nimport { UsersActions, UsersMutations } from '@/users/UsersStore'\n\nexport default {\n  name: 'AddressForm',\n  props: {\n    memberId: Number\n  },\n  data() {\n    return {\n      address: {\n        id: null,\n        name: null,\n        street: null,\n        city: null,\n        province: null,\n        country: null,\n        postalCode: null,\n        street2: null\n      },\n      loading: false,\n      valid: false\n    }\n  },\n  async mounted() {\n    const address = await this.getAddress(this.memberId)\n    this.address = { ...address }\n  },\n  methods: {\n    ...mapActions({ getAddress: UsersActions.GET_ADDRESS }),\n    ...mapMutations({ updateAddress: UsersMutations.UPDATE_ADDRESS }),\n    async save() {\n      if (this.$refs.form.validate()) {\n        try {\n          this.loading = true\n          await this.updateAddress({\n            id: this.address.id,\n            name: this.address.name,\n            street: this.address.street,\n            city: this.address.city,\n            province: this.address.province,\n            country: this.address.country,\n            postalCode: this.address.postalCode,\n            street2: this.address.street2 || '',\n            memberId: this.memberId\n          })\n          this.loading = false\n        } catch (e) {\n          console.error({ e })\n          this.loading = false\n        }\n      }\n    }\n  }\n}\n</script>\n"]}]}