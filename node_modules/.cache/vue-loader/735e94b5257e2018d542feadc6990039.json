{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/assets/UploadDialog.vue?vue&type=template&id=25c9212b&scoped=true&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/assets/UploadDialog.vue","mtime":1574205365000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-layout\",\n    { attrs: { \"justify-space-around\": \"\", column: \"\", \"align-center\": \"\" } },\n    [\n      _c(\n        \"v-card\",\n        {\n          staticClass: \"upload\",\n          attrs: { fullscreen: _vm.$vuetify.breakpoint.xs }\n        },\n        [\n          _c(\n            \"v-card-title\",\n            { staticClass: \"application-title; justify-center\" },\n            [_c(\"h3\", [_vm._v(\"Select a Video or Image to Upload\")])]\n          ),\n          _c(\"v-divider\"),\n          _c(\n            \"v-card-text\",\n            [\n              _vm.error\n                ? _c(\n                    \"v-alert\",\n                    { attrs: { type: \"error\", value: _vm.error } },\n                    [_vm._v(_vm._s(_vm.error))]\n                  )\n                : _vm._e(),\n              _c(\"file-pond\", {\n                ref: \"pond\",\n                attrs: {\n                  name: \"libaryUpload\",\n                  \"class-name\": \"my-pond\",\n                  \"label-idle\": \"Drop file here or click to browse files\",\n                  \"allow-multiple\": false,\n                  instantUpload: false,\n                  \"allow-revert\": false,\n                  imageTransformOutputQuality: 95,\n                  allowImageExifOrientation: true,\n                  \"accepted-file-types\":\n                    \"image/jpeg, image/png, video/webm, video/mp4, video/mov, video/quicktime, application/pdf\",\n                  files: _vm.files,\n                  beforeAddFile: _vm.beforeAddFile\n                },\n                on: {\n                  addfile: _vm.onaddfile,\n                  removefile: _vm.onremovefile,\n                  error: _vm.onError\n                }\n              }),\n              _vm.currentFile && !_vm.loading\n                ? _c(\n                    \"div\",\n                    [\n                      _c(\"v-subheader\", [_vm._v(\"Asset Title\")]),\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          solo: \"\",\n                          label:\n                            \"Name your \" +\n                            _vm.currentFile.fileType.split(\"/\")[0],\n                          counter: \"100\",\n                          maxLength: \"100\"\n                        },\n                        model: {\n                          value: _vm.fileData.name,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fileData, \"name\", $$v)\n                          },\n                          expression: \"fileData.name\"\n                        }\n                      }),\n                      _c(\"br\"),\n                      _c(\"v-textarea\", {\n                        attrs: {\n                          solo: \"\",\n                          label: \"Please provide a short description\",\n                          counter: \"250\",\n                          maxLength: \"250\"\n                        },\n                        model: {\n                          value: _vm.fileData.desc,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fileData, \"desc\", $$v)\n                          },\n                          expression: \"fileData.desc\"\n                        }\n                      }),\n                      _c(\"v-combobox\", {\n                        attrs: {\n                          solo: \"\",\n                          \"persistent-hint\": \"\",\n                          label: \"Select relevant tags\",\n                          \"item-text\": \"name\",\n                          \"item-value\": \"id\",\n                          items: _vm.assetMeta.allTags,\n                          chips: \"\",\n                          \"deletable-chips\": \"\",\n                          multiple: \"\",\n                          \"return-object\": true\n                        },\n                        model: {\n                          value: _vm.fileData.tags,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fileData, \"tags\", $$v)\n                          },\n                          expression: \"fileData.tags\"\n                        }\n                      }),\n                      _c(\n                        \"v-card-actions\",\n                        { staticClass: \"justify-end\" },\n                        [\n                          _c(\n                            \"v-btn\",\n                            {\n                              attrs: { loading: _vm.loading, color: \"primary\" },\n                              on: { click: _vm.upload }\n                            },\n                            [_vm._v(\"Upload\")]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          ),\n          _c(\"v-divider\"),\n          _c(\n            \"v-card-actions\",\n            { staticClass: \"justify-center\" },\n            [\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { disabled: _vm.loading, color: \"primary\", flat: \"\" },\n                  on: { click: _vm.done }\n                },\n                [_vm._v(\"Exit\")]\n              )\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"text-xs-center\" }, [\n            _c(\"small\", [_vm._v(\"Exiting before Uploading will Cancel Action\")])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"v-alert\",\n        {\n          attrs: {\n            transition: \"slide-y-transition\",\n            type: \"success\",\n            value: _vm.success\n          }\n        },\n        [_vm._v(\"\\n      \" + _vm._s(_vm.success) + \"\\n    \")]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}