{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/ChangeSponsorDialog.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/ChangeSponsorDialog.vue","mtime":1577329618149},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntd.dropcol .drop {\n  padding: 12px 24px;\n}\n.drop {\n  transition: all 500ms ease-in;\n}\n.drop.over {\n  color: white;\n  background: #1976d2 !important;\n  transition: all 500ms ease-in;\n}\n.drop.dragging {\n  color: white;\n  background: #78a3cd;\n  transition: all 250ms ease-in;\n}\n.drop.error {\n  color: white;\n  background: red;\n  transition: all 250ms ease-in;\n}\ntd.dropcol {\n  padding: 0px !important;\n}\n",{"version":3,"sources":["ChangeSponsorDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChangeSponsorDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog v-model=\"showing\" :persistent=\"true\" :fullscreen=\"true\">\n    <v-snackbar :timeout=\"8000\" :top=\"true\" :right=\"true\" v-model=\"snackbar.show\">\n      {{snackbar.message}}\n      <v-btn flat color=\"pink\" @click.native=\"snackbar.show = false\">Close</v-btn>\n    </v-snackbar>\n    <v-card>\n      <v-toolbar class=\"black white--text\" primary-title>\n        <v-spacer />\n        <v-toolbar-title>\n          <h1>Change Sponsor</h1>\n        </v-toolbar-title>\n        <v-spacer />\n        <v-tooltip left>\n          <template slot=\"activator\">\n            <v-btn style=\"color: white;\" flat icon @click=\"close\">\n              <v-icon>close</v-icon>\n            </v-btn>\n          </template>\n          <span>Close</span>\n        </v-tooltip>\n      </v-toolbar>\n      <div style=\"padding: 0 25px; margin-top: 25px;\">\n        <p>Use the form below to search for members by name, then drag them by the name to the table below.</p>\n        <v-flex>\n          <MemberSearch\n            @emitDragging=\"emitDragging\"\n            @emitDraggingStop=\"emitDraggingStop\"\n            :draggable=\"true\"\n            @memberSelected=\"childSelected\"\n            :disabled=\"locked\"\n            :defaultMember=\"defaultMember\"\n          />\n        </v-flex>\n        <br />\n        <br />\n        <p>\n          Drop the member below to add them to the list, then drop another member\n          into the \"New Sponsor\" column to update the sponsor.\n        </p>\n        <p>\n          <strong>Warning:</strong> Make sure you're not creating \"cycles\" where a\n          member's sponsor is part of their downline, as the entire operation will fail.\n        </p>\n        <br />\n        <v-data-table :headers=\"headers\" :items=\"selected\" hide-actions class=\"elevation-1\">\n          <template v-if=\"Object.keys(props.item).length\" slot=\"items\" slot-scope=\"props\">\n            <td>{{ props.item.member.id }}</td>\n            <td>{{ props.item.member.name }}</td>\n            <td>{{ props.item.sponsor ? props.item.sponsor.displayName : '' }}</td>\n            <td class=\"dropcol\">\n              <drop\n                class=\"drop\"\n                :class=\"{ over: over == props.item.id, dragging: dragging, error: error }\"\n                @dragover=\"over = props.item.id\"\n                @dragleave=\"over = undefined\"\n                @drop=\"handleDrop\"\n              >{{ props.item.newSponsor ? props.item.newSponsor.displayName : 'Drop a new Sponsor here' }}</drop>\n            </td>\n            <td>\n              <a @click=\"childRemoved(props.item)\" :disabled=\"locked\">Delete</a>\n            </td>\n          </template>\n          <template slot=\"no-data\">\n            <td colspan=\"4\" style=\"display: none\"></td>\n          </template>\n          <template slot=\"footer\">\n            <td colspan=\"4\" class=\"dropcol\">\n              <drop\n                class=\"drop\"\n                :class=\"{ dragging, over: over == -1 }\"\n                @dragover=\"over = -1\"\n                @dragleave=\"over = undefined\"\n                @drop=\"childSelected\"\n              >Drop a member here to change their sponsor</drop>\n            </td>\n          </template>\n        </v-data-table>\n      </div>\n      <v-card-actions class=\"px-4 pt-5\">\n        <v-btn color=\"secondary\" @click=\"attemptChanges\" :disabled=\"locked\">Persist Changes</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n<script>\nimport MemberSearch from '@/components/MemberSearch'\nimport { Drag, Drop } from 'vue-drag-drop'\nimport CHANGE_SPONSOR from '@/graphql/ChangeSponsor.gql'\n\nconst defaultData = {\n  id: 2,\n  selected: [],\n  over: undefined,\n  snackbar: {\n    show: false,\n    message: undefined\n  },\n  locked: false,\n  dragging: false,\n  error: false\n}\nexport default {\n  props: {\n    showing: Boolean,\n    defaultMember: Object\n  },\n  name: 'SponsorDialog',\n  components: {\n    MemberSearch,\n    Drag,\n    Drop\n  },\n  data () {\n    return {\n      ...defaultData,\n      headers: [\n        { text: 'ID', value: 'id' },\n        { text: 'Member', value: 'displayName' },\n        { text: 'Current Sponsor', value: 'currentSponsor' },\n        { text: 'New Sponsor', value: 'newSponsor' },\n        { text: '', value: 'actions' }\n      ]\n    }\n  },\n  methods: {\n    emitDragging (e) {\n      this.error = false\n      this.dragging = true\n    },\n    emitDraggingStop (e) {\n      this.dragging = false\n    },\n    handleDrop (data) {\n      const idx = this.selected.findIndex(e => e.id === this.over)\n      this.over = undefined\n      const updated = {\n        ...this.selected[idx],\n        newSponsor: data.member\n      }\n      this.selected.splice(idx, 1, updated)\n    },\n    childSelected ({ member }) {\n      this.over = undefined\n      let sponsor = null\n      if (member && member.upline && member.upline.length > 1) {\n        sponsor = member.upline[member.upline.length - 2]\n      }\n      this.selected.push({\n        id: this.id++,\n        member,\n        sponsor,\n        newSponsor: undefined\n      })\n    },\n    childRemoved ({ id }) {\n      const idx = this.selected.findIndex(e => e.id === id)\n      this.selected.splice(idx, 1)\n    },\n    attemptChanges () {\n      const mappedNewSponsors = this.selected.map(s => s.newSponsor)\n      if (mappedNewSponsors.indexOf(undefined) > -1) {\n        this.error = true\n        return null\n      }\n\n      this.locked = true\n\n      const changes = this.selected.map(e => ({\n        memberId: e.member.id,\n        sponsorId: e.newSponsor.id\n      }))\n      const { tenantId } = this.$store.state.user.principal\n      this.$apollo\n        .mutate({\n          mutation: CHANGE_SPONSOR,\n          variables: {\n            input: { changes: { changes }, tenantId }\n          },\n          update: async (store, { data: { changeSponsors: { members } } }) => {\n            this.selected = []\n            this.close({\n              message: `Successfully updated the sponsor for ${\n                members.length\n              } member(s)`\n            })\n            this.reset()\n            this.locked = false\n          }\n        })\n        .catch(error => {\n          this.close({\n            message: `There was a problem updating the sponsor. Please contact customer support`\n          })\n          this.reset()\n          this.locked = false\n          console.error(error)\n          throw new Error(error)\n        })\n    },\n    close (config = {}) {\n      this.$emit('close', config)\n      this.reset()\n    },\n    reset () {\n      const selectedBuffer = [this.defaultMember]\n\n      Object.assign(this, defaultData)\n      this.selected = selectedBuffer\n    }\n  },\n  watch: {\n    defaultMember(newVal, oldVal) {\n      const selectedBuffer = [newVal]\n      this.selected = selectedBuffer\n    }\n  }\n}\n</script>\n\n<style>\ntd.dropcol .drop {\n  padding: 12px 24px;\n}\n.drop {\n  transition: all 500ms ease-in;\n}\n.drop.over {\n  color: white;\n  background: #1976d2 !important;\n  transition: all 500ms ease-in;\n}\n.drop.dragging {\n  color: white;\n  background: #78a3cd;\n  transition: all 250ms ease-in;\n}\n.drop.error {\n  color: white;\n  background: red;\n  transition: all 250ms ease-in;\n}\ntd.dropcol {\n  padding: 0px !important;\n}\n</style>\n"]}]}