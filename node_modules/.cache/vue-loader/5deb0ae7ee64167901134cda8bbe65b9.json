{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/curriculum/Courses.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/curriculum/Courses.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AddDialog from '@/components/courses/AddDialog.vue'\n\nimport { uploadCourseForm } from '@/components/courses/forms'\nimport { mapActions } from 'vuex'\nimport { CurriculumActions } from '@/curriculum/CurriculumStore'\n\nimport Sortable from 'sortablejs'\n\nexport default {\n  components: {\n    AddDialog\n  },\n  data () {\n    return {\n      headers: [\n        { text: '', sortable: false },\n        { text: 'ID', value: 'id' },\n        { text: 'Key', value: 'key' },\n        { text: 'Description', value: 'description' }\n      ],\n      courses: {},\n      sortedCourses: [],\n      showDialog: false,\n      courseForm: uploadCourseForm,\n      pageLoading: true\n    }\n  },\n  async mounted () {\n    this.courses = await this.getCourses()\n    this.sortedCourses = await this.courses.results.slice().sort(function(a, b) {\n      return a.id - b.id\n    })\n    this.pageLoading = false\n    const table = document.querySelector('.v-datatable tbody')\n    const _self = this\n    Sortable.create(table, {\n      onEnd({ newIndex, oldIndex }) {\n        const rowSelected = _self.sortedCourses.splice(oldIndex, 1)[0]\n        _self.sortedCourses.splice(newIndex, 0, rowSelected)\n      },\n      handle: '.sortHandle'\n    })\n  },\n  methods: {\n    ...mapActions([CurriculumActions.GET_COURSES, CurriculumActions.UPSERT_COURSE]),\n    openDialog () {\n      this.showDialog = true\n    },\n    async closeDialog (val) {\n      this.showDialog = false\n    },\n    openUnit(item) {\n      this.$router.push('/curriculum/courses/' + item)\n    },\n    async submitForm(val) {\n      this.showDialog = false\n      await this.upsertCourse(val)\n\n      Object.keys(this.courseForm).forEach(index => {\n        this.courseForm[index] = ''\n      })\n\n      this.courses = await this.getCourses()\n      this.sortedCourses = await this.courses.results.slice().sort(function(a, b) {\n        return a.id - b.id\n      })\n    }\n  }\n}\n",{"version":3,"sources":["Courses.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Courses.vue","sourceRoot":"src/views/curriculum","sourcesContent":["<template>\n  <v-layout justify-space-around align-center column>\n    <v-progress-circular v-if=\"pageLoading\" color=\"blue\" indeterminate></v-progress-circular>\n    <h3>Available Courses</h3>\n    <v-container class=\"table\">\n      <v-btn\n        @click=\"openDialog\"\n        color=\"pink\"\n        dark\n        absolute\n        right\n        fab\n      >\n        <v-icon>add</v-icon>\n      </v-btn>\n      <v-data-table\n        :items=\"sortedCourses\"\n        :headers=\"headers\"\n        hide-actions\n      >\n      <template slot=\"items\" slot-scope=\"props\">\n        <tr @click=\"openUnit(props.item.id)\">\n          <td class=\"px-1\" style=\"width: 0.1%\">\n            <v-btn style=\"cursor: move\" icon class=\"sortHandle\"><v-icon>drag_handle</v-icon></v-btn>\n          </td>\n          <td class=\"text-xs\">{{ props.item.id}}</td>\n          <td class=\"text-xs\">{{ props.item.key}}</td>\n          <td class=\"text-xs\">{{ props.item.description}}</td>\n        </tr>\n      </template>\n      </v-data-table>\n    </v-container>\n    <AddDialog\n      :showDialog=\"showDialog\"\n      :uploadConfig=\"courseForm\"\n      @closeDialog=\"closeDialog\"\n      @submitForm=\"submitForm\"\n    />\n  </v-layout>\n</template>\n\n<script>\nimport AddDialog from '@/components/courses/AddDialog.vue'\n\nimport { uploadCourseForm } from '@/components/courses/forms'\nimport { mapActions } from 'vuex'\nimport { CurriculumActions } from '@/curriculum/CurriculumStore'\n\nimport Sortable from 'sortablejs'\n\nexport default {\n  components: {\n    AddDialog\n  },\n  data () {\n    return {\n      headers: [\n        { text: '', sortable: false },\n        { text: 'ID', value: 'id' },\n        { text: 'Key', value: 'key' },\n        { text: 'Description', value: 'description' }\n      ],\n      courses: {},\n      sortedCourses: [],\n      showDialog: false,\n      courseForm: uploadCourseForm,\n      pageLoading: true\n    }\n  },\n  async mounted () {\n    this.courses = await this.getCourses()\n    this.sortedCourses = await this.courses.results.slice().sort(function(a, b) {\n      return a.id - b.id\n    })\n    this.pageLoading = false\n    const table = document.querySelector('.v-datatable tbody')\n    const _self = this\n    Sortable.create(table, {\n      onEnd({ newIndex, oldIndex }) {\n        const rowSelected = _self.sortedCourses.splice(oldIndex, 1)[0]\n        _self.sortedCourses.splice(newIndex, 0, rowSelected)\n      },\n      handle: '.sortHandle'\n    })\n  },\n  methods: {\n    ...mapActions([CurriculumActions.GET_COURSES, CurriculumActions.UPSERT_COURSE]),\n    openDialog () {\n      this.showDialog = true\n    },\n    async closeDialog (val) {\n      this.showDialog = false\n    },\n    openUnit(item) {\n      this.$router.push('/curriculum/courses/' + item)\n    },\n    async submitForm(val) {\n      this.showDialog = false\n      await this.upsertCourse(val)\n\n      Object.keys(this.courseForm).forEach(index => {\n        this.courseForm[index] = ''\n      })\n\n      this.courses = await this.getCourses()\n      this.sortedCourses = await this.courses.results.slice().sort(function(a, b) {\n        return a.id - b.id\n      })\n    }\n  }\n}\n</script>\n\n<style>\n.link {\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.table {\n  text-align: left !important;\n}\n</style>\n"]}]}