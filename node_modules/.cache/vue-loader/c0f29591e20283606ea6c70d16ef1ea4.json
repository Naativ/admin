{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/iam/ImpersonatePrompt.vue?vue&type=style&index=0&id=71c9285a&scoped=true&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/iam/ImpersonatePrompt.vue","mtime":1577329618149},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.box-card {\n  width: 480px;\n  margin: auto;\n}\n.error {\n  margin: 5px;\n  padding: 10px;\n  text-align: center;\n}\n.logo {\n  width: 100%;\n  max-width: 250px;\n  margin: auto;\n  display: block;\n}\n",{"version":3,"sources":["ImpersonatePrompt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImpersonatePrompt.vue","sourceRoot":"src/iam","sourcesContent":["<template>\n  <v-content>\n    <v-form\n      ref=\"login\"\n      @submit.prevent=\"onSubmit()\"\n    >\n      <v-text-field\n        required\n        v-model=\"form.token\"\n        prepend-icon=\"business\"\n        name=\"token\"\n        label=\"One Time Token\"\n      ></v-text-field>\n      <v-text-field\n        required\n        v-model=\"form.pin\"\n        prepend-icon=\"person\"\n        name=\"pin\"\n        label=\"Pin\"\n      ></v-text-field>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          :loading=\"locked\"\n          type=\"submit\"\n          color=\"deep-purple\"\n          dark\n        > Impersonate </v-btn>\n      </v-card-actions>\n    </v-form>\n  </v-content>\n</template>\n\n<script>\nimport { UserActions, UserMutations } from '@/stores/UserStore'\n\nimport { IMPERSONATE_MUTATION } from '@/impersonation/impersonate.gql.js'\n\nexport default {\n  name: 'ImpersonatePrompt',\n  data () {\n    return {\n      locked: false,\n      form: {\n        token: this.$route.params.token || '',\n        pin: ''\n      }\n    }\n  },\n  methods: {\n    async onSubmit () {\n      this.locked = true\n      const { token, pin: temporaryPin } = this.form\n      try {\n        const result = await this.$apollo.mutate({\n          mutation: IMPERSONATE_MUTATION,\n          variables: {\n            input: { token, temporaryPin }\n          }\n        })\n\n        const { principal, token: jwtToken } = result.data.iamImpersonate\n\n        const { member, memberId, username, identityId, permissionIds } = principal\n        const { displayName, tenantId } = member\n\n        const legacy = {\n          role: 'system_authenticated',\n          username,\n          identityId,\n          memberId,\n          permissions: permissionIds,\n          displayName,\n          tenantId\n        }\n\n        this.$store.commit(UserMutations.SET_JWT, jwtToken)\n        await this.$store.dispatch(UserActions.LOGIN_SUCCESS, legacy)\n        this.$router.push('/dashboard')\n      } catch (err) {\n        console.warn(err)\n        alert('Something went wrong')\n      } finally {\n        this.locked = false\n      }\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n.box-card {\n  width: 480px;\n  margin: auto;\n}\n.error {\n  margin: 5px;\n  padding: 10px;\n  text-align: center;\n}\n.logo {\n  width: 100%;\n  max-width: 250px;\n  margin: auto;\n  display: block;\n}\n</style>\n"]}]}