{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/members/MiscDetailsCard.vue?vue&type=style&index=0&id=6d4044b4&scoped=true&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/members/MiscDetailsCard.vue","mtime":1581353753564},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.findme {\n  border: 2px solid red;\n}\n#contact-list {\n  width: 100%;\n}\n.address-title {\n  position: absolute;\n  top: 9px;\n}\n.member-section-heading {\n  display: inline;\n}\n#form {\n  min-width: 100%;\n}\n.section-subheader {\n  font-size: 18px !important;\n}\n#section-header-container {\n  display: flex;\n  justify-content: space-between;\n}\n.detail-field {\n  padding: 12px 10px 0px 10px;\n}\n",{"version":3,"sources":["MiscDetailsCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MiscDetailsCard.vue","sourceRoot":"src/views/members","sourcesContent":["<template>\n  <div>\n    <div id=\"section-header-container\">\n      <v-toolbar class=\"indigo darken-1 white--text\">\n        <v-toolbar-title class=\"section-subheader\">Misc Details</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-toolbar-items>\n          <EditButton\n            id             =\"misc-details-edit-btn\"\n            :disabled      =\"disabled\"\n            @editClicked   =\"editClicked\"\n            @saveClicked   =\"saveClicked\"\n            @cancelClicked =\"cancelClicked\"\n          />\n        </v-toolbar-items>\n      </v-toolbar>\n    </div>\n    <v-card>\n      <v-layout row wrap>\n        <v-form id=\"form\" ref=\"form\">\n          <v-card-text class=\"details\" v-if=\"model\">\n            <v-layout row wrap>\n              <v-flex xs6>\n                <v-select\n                  class=\"detail-field\"\n                  chips\n                  deletable-chips\n                  multiple\n                  label=\"Tags\"\n                  v-model=\"model.tags\"\n                  :regular=\"disabled\"\n                  :items=\"availableTags.values\"\n                  item-text=\"blah\"\n                  :disabled=\"disabled || availableTags.loading\"\n                  :menu-props=\"{\n                    closeOnClick: false,\n                    closeOnContentClick: true,\n                    disableKeys: true,\n                    openOnClick: false,\n                    maxHeight: 304\n                  }\"\n                  :append-icon=\"!disabled ? '$vuetify.icons.dropdown' : null\"\n                ></v-select>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  class=\"detail-field\"\n                  chips\n                  label=\"Account Status\"\n                  v-model=\"model.status\"\n                  :regular=\"disabled\"\n                  :items=\"statuses\"\n                  :disabled=\"disabled\"\n                  :menu-props=\"{\n                    closeOnClick: false,\n                    closeOnContentClick: true,\n                    disableKeys: true,\n                    openOnClick: false,\n                    maxHeight: 304\n                  }\"\n                  :append-icon=\"!disabled ? '$vuetify.icons.dropdown' : null\"\n                ></v-select>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-form>\n      </v-layout>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport { cloneDeep, get } from 'lodash'\nimport { mapState, mapActions } from 'vuex'\n\nimport {\n  MiscDetailsGQL,\n  UpdateMemberStatus,\n  AdjustTags\n} from '../../users/members.gql'\nimport EditButton from './EditButton'\n\nimport { UsersActions } from '@/users/UsersStore'\n\nexport default {\n  name: 'MiscDetailsCard',\n  components: {\n    EditButton\n  },\n  data () {\n    return {\n      model: null,\n      disabled: true,\n      memberId: ~~this.$route.params.id,\n      items: [],\n      slugModel: [],\n      statuses: [\n        'Active',\n        'Member Disabled',\n        'Member Expired',\n        'Member Locked'\n      ]\n    }\n  },\n  methods: {\n    ...mapActions({\n      adjustTags: UsersActions.ADJUST_TAGS,\n      upsertUser: UsersActions.UPSERT_USER\n    }),\n    editClicked () {\n      this.disabled = false\n    },\n    async saveClicked() {\n      this.disabled = true\n      const id = ~~this.$route.params.id\n      try {\n        let statusId\n\n        switch (this.model.status) {\n          case 'Active':\n            statusId = 1\n            break\n\n          case 'Member Disabled':\n            statusId = 2\n            break\n\n          case 'Member Expired':\n            statusId = 3\n            break\n\n          case 'Member Locked':\n            statusId = 4\n            break\n\n          default:\n            throw new Error(`Cannot update to status id of ${this.model.status}`)\n        }\n        this.$apollo.mutate({\n          mutation: UpdateMemberStatus,\n          variables: {\n            input: {\n              id,\n              statusId\n            }\n          }\n        })\n      } catch (error) {\n        this.$emit('snackbarEmit', error.message)\n        throw new Error(`Error saving Member Status: ${error.message}`)\n      }\n\n      try {\n        if (this.model.tags.length) {\n          await this.$apollo.mutate({\n            mutation: AdjustTags,\n            variables: {\n              input: {\n                memberId: id,\n                set: this.model.tags\n              }\n            }\n          })\n        } else {\n          await this.$apollo.mutate({\n            mutation: AdjustTags,\n            variables: {\n              input: {\n                memberId: id,\n                remove: this.miscDetails.tags\n              }\n            }\n          })\n        }\n      } catch (error) {\n        this.$emit('snackbarEmit', error.message)\n        throw new Error(`Error saving Member Tags: ${error.message}`)\n      }\n\n      this.$emit('snackbarEmit', 'Member tags and status saved!')\n      this.$apollo.queries.miscDetails.refetch()\n    },\n    async cancelClicked () {\n      this.disabled = true\n      await this.$apollo.queries.miscDetails.refetch()\n      this.initMember(this.miscDetails)\n    },\n    initMember(contact) {\n      this.model = cloneDeep(contact)\n    },\n    async updateSearch(search) {\n      try {\n        const slugRes = await this.checkSlug([{ slug: search }])\n\n        if (!slugRes.data) throw new Error('Error verifying slug')\n\n        const { data: { checkSlug } } = slugRes\n        if (!checkSlug) {\n          this.items = [{ slug: search }]\n        } else {\n          if (checkSlug.memberId === this.memberId) {\n            this.items = [{ slug: search }]\n          }\n        }\n      } catch (error) {\n\n      }\n    }\n  },\n  watch: {\n    miscDetails (next) {\n      this.initMember(next)\n    },\n    '$route'(newRoute) {\n      const { params: { id } } = newRoute\n      this.memberId = ~~id\n      this.disabled = true\n    },\n    'model.slugs'(slugs) {\n      this.items = slugs\n      this.slugModel = slugs\n    }\n  },\n  computed: {\n    ...mapState({\n      tenantId: state => state.user.principal.tenantId,\n      availableTags: state => ({\n        loading: state.tenants.tags.loading,\n        values: state.tenants.tags.values.map(e => e.name)\n      })\n    })\n  },\n  apollo: {\n    miscDetails: {\n      ...MiscDetailsGQL,\n      variables() {\n        return {\n          memberId: this.memberId\n        }\n      },\n      update(data) {\n        let member = { ...get(data, 'members.nodes.0') }\n        return member\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.findme {\n  border: 2px solid red;\n}\n#contact-list {\n  width: 100%;\n}\n.address-title {\n  position: absolute;\n  top: 9px;\n}\n.member-section-heading {\n  display: inline;\n}\n#form {\n  min-width: 100%;\n}\n.section-subheader {\n  font-size: 18px !important;\n}\n#section-header-container {\n  display: flex;\n  justify-content: space-between;\n}\n.detail-field {\n  padding: 12px 10px 0px 10px;\n}\n</style>\n"]}]}