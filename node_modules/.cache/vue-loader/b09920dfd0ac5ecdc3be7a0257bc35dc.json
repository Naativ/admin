{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/associations/AssociationFrame.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/associations/AssociationFrame.vue","mtime":1574205365000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapMutations } from 'vuex'\nimport { StoreGetters } from '@/store'\nimport Workbench from '@/views/generic/layout/WorkbenchFrame'\nimport { getAssociation } from '@/users/users.gql'\nimport { UsersMutations } from '@/users/UsersStore'\n\nexport default {\n  components: {\n    Workbench\n  },\n  methods: {\n    ...mapMutations({ usersSetOne: UsersMutations.SET_ONE }),\n    dashboard () {\n      this.$router.push('/associations')\n    },\n    async view (member) {\n      this.$router.push(`/associations/member/${member.id}`)\n    },\n    async getAssociations () {\n      this.loading = true\n      try {\n        const { data } = await this.$apollo.query({\n          query: getAssociation,\n          variables: {\n            input: {\n              ids: [this.$route.id]\n            }\n          },\n          fetchPolicy: 'network-only'\n        })\n        await this.usersSetOne({ property: 'associations', value: data.getAssociation })\n      } finally {\n        this.loading = false\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      access: StoreGetters.access\n    })\n  },\n  mounted() {\n    // this.getAssociations()\n  }\n}\n",{"version":3,"sources":["AssociationFrame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AssociationFrame.vue","sourceRoot":"src/views/associations","sourcesContent":["<template>\n  <v-layout fill-height row class=\"payouts\">\n    <v-flex>\n      <Workbench @dashboard=\"dashboard\" @view=\"view\">\n        <template slot=\"top\">\n          <v-tabs v-if=\"!!$route.params.id\" centered icons-and-text>\n            <v-tabs-slider color=\"pink\"></v-tabs-slider>\n            <v-tab key=\"1\">\n              Associations\n              <v-icon>recent_actors</v-icon>\n            </v-tab>\n          </v-tabs>\n        </template>\n\n        <router-view />\n      </Workbench>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex'\nimport { StoreGetters } from '@/store'\nimport Workbench from '@/views/generic/layout/WorkbenchFrame'\nimport { getAssociation } from '@/users/users.gql'\nimport { UsersMutations } from '@/users/UsersStore'\n\nexport default {\n  components: {\n    Workbench\n  },\n  methods: {\n    ...mapMutations({ usersSetOne: UsersMutations.SET_ONE }),\n    dashboard () {\n      this.$router.push('/associations')\n    },\n    async view (member) {\n      this.$router.push(`/associations/member/${member.id}`)\n    },\n    async getAssociations () {\n      this.loading = true\n      try {\n        const { data } = await this.$apollo.query({\n          query: getAssociation,\n          variables: {\n            input: {\n              ids: [this.$route.id]\n            }\n          },\n          fetchPolicy: 'network-only'\n        })\n        await this.usersSetOne({ property: 'associations', value: data.getAssociation })\n      } finally {\n        this.loading = false\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      access: StoreGetters.access\n    })\n  },\n  mounted() {\n    // this.getAssociations()\n  }\n}\n</script>\n\n<style>\n.results {\n  margin-top: 5px;\n  border-color: black;\n  border-style: solid;\n  position: absolute;\n  z-index: 5;\n  width: 600px !important;\n}\n\n.search {\n  width: 350px;\n}\n\n.text {\n  padding-right: 10px;\n}\n"]}]}