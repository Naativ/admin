{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/Emails.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/Emails.vue","mtime":1574205365000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.link {\n  margin: auto;\n}\n",{"version":3,"sources":["Emails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA","file":"Emails.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-card>\n    <v-card-text>\n      <v-container grid-list-md text-xs-center>\n        <v-layout row wrap>\n          <v-flex xs12 sm6>\n            <DateSelector\n              :selectedDate=\"startDate\"\n              :label=\"'Select Start Date'\"\n              @date-changed=\"startDateChanged\"\n            />\n          </v-flex>\n          <v-flex xs12 sm6>\n            <DateSelector\n              :selectedDate=\"endDate\"\n              :label=\"'Select End Date'\"\n              @date-changed=\"endDateChanged\"\n            />\n          </v-flex>\n          <v-flex xs12>\n            <v-text-field\n              v-model=\"toEmail\"\n              label=\"To email\"\n            />\n          </v-flex>\n        </v-layout>\n        <v-btn :loading=\"loading\" @click=\"getEmails\">Search Email</v-btn>\n      </v-container>\n    </v-card-text>\n    <v-data-table :loading=\"loading\" :items=\"emails\" :headers=\"headers\" hide-actions>\n      <template slot=\"items\" slot-scope=\"props\">\n        <td class=\"text-xs\">{{ props.item.last_event_time }}</td>\n        <td class=\"text-xs\">{{ props.item.from_email }}</td>\n        <td class=\"text-xs\">{{ props.item.to_email}}</td>\n        <td class=\"text-xs\">{{ props.item.subject}}</td>\n        <td class=\"text-xs\">{{ props.item.status}}</td>\n        <td class=\"text-xs\">{{ props.item.opens_count}}</td>\n        <td class=\"text-xs\">{{ props.item.clicks_count}}</td>\n      </template>\n    </v-data-table>\n  </v-card>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { TenantsActions } from '@/tenants/TenantsStore'\nimport { INTEGRATION_COMMAND } from '@/graphql/IntegrationActions.gql'\nimport DateSelector from '@/components/DateSelector.vue'\nimport moment from 'moment'\n\nexport default {\n  name: 'EmailView',\n  components: {\n    DateSelector\n  },\n  data () {\n    return {\n      emails: [],\n      loading: false,\n      headers: [\n        { text: 'Sent', value: 'last_event_time', sortable: false },\n        { text: 'From', value: 'from_email', sortable: false },\n        { text: 'To', value: 'to_email', sortable: false },\n        { text: 'Subject', value: 'subject', sortable: false },\n        { text: 'Status', value: 'status', sortable: false },\n        { text: 'Opens', value: 'opens_count', sortable: false },\n        { text: 'Clicks', value: 'clicks_count', sortable: false }\n      ],\n      startDate: moment()\n        .subtract(3, 'days')\n        .format('YYYY-MM-DD'),\n      endDate: moment()\n        .format('YYYY-MM-DD'),\n      toEmail: null,\n      integrationId: null\n    }\n  },\n  methods: {\n    ...mapActions({\n      fetchTenantInfo: TenantsActions.FETCH_TENANT_INFO\n    }),\n    async startDateChanged ({ date }) {\n      this.startDate = date\n      await this.getEmails()\n    },\n    async endDateChanged ({ date }) {\n      this.endDate = date\n      await this.getEmails()\n    },\n    async getEmails () {\n      this.loading = true\n      if (this.integrationId) {\n        console.log(this.integrationId)\n      }\n      try {\n        const { data } = await this.$apollo.mutate({\n          mutation: INTEGRATION_COMMAND,\n          variables: { input: {\n            command: 'sendgrid_fetch_activity',\n            tenantIntegrationId: this.integrationId,\n            data: {\n              toEmail: this.toEmail,\n              startDate: moment(this.startDate).format(),\n              endDate: moment(this.endDate).add(48, 'hours').format()\n            }\n          } }\n        })\n        this.emails = data.integrationCommand.payload\n      } finally {\n        this.loading = false\n      }\n    }\n  },\n  async mounted () {\n    if (this.integrations.length === 0) {\n      await this.fetchTenantInfo()\n    }\n    const integration = this.integrations.find(i => {\n      return i.key === 'sendgrid'\n    })\n    this.integrationId = integration.id\n    await this.getEmails()\n  },\n  computed: {\n    ...mapState({\n      integrations: state => {\n        return state.tenants.info.integrations\n      }\n    })\n  }\n\n}\n</script>\n\n<style>\n.link {\n  margin: auto;\n}\n</style>\n"]}]}