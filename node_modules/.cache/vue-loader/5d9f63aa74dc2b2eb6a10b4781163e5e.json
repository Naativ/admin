{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/members/MemberDetailsCard.vue?vue&type=style&index=0&id=a6248790&scoped=true&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/members/MemberDetailsCard.vue","mtime":1581353753564},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.findme {\n  border: 2px solid red;\n}\n#contact-list {\n  width: 100%;\n}\n.address-title {\n  position: absolute;\n  top: 9px;\n}\n.member-section-heading {\n  display: inline;\n}\n#form {\n  min-width: 100%;\n}\n.section-subheader {\n  font-size: 18px !important;\n}\n#section-header-container {\n  display: flex;\n  justify-content: space-between;\n}\n.details-field {\n  padding: 12px 10px 0px 10px;\n}\n.details-field-select {\n  padding: 2px 10px 0px 10px;\n}\n",{"version":3,"sources":["MemberDetailsCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MemberDetailsCard.vue","sourceRoot":"src/views/members","sourcesContent":["<template>\n  <div>\n    <div id=\"section-header-container\">\n      <v-toolbar class=\"indigo darken-1 white--text\">\n        <v-toolbar-title class=\"section-subheader\">Member Details</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-toolbar-items>\n          <EditButton\n            id             =\"member-details-edit-btn\"\n            :disabled      =\"disabled\"\n            @editClicked   =\"editClicked\"\n            @saveClicked   =\"saveClicked\"\n            @cancelClicked =\"cancelClicked\"\n          />\n        </v-toolbar-items>\n      </v-toolbar>\n    </div>\n    <v-card class=\"white lighten-5\">\n      <v-layout row wrap>\n        <v-form id=\"form\" ref=\"form\">\n          <v-card-text class=\"details\" v-if=\"model\">\n            <v-layout row wrap>\n              <v-flex xs6>\n                <v-text-field\n                  class   =\"details-field\"\n                  label   =\"System ID\"\n                  v-model =\"model.id\"\n                  disabled\n                />\n              </v-flex>\n              <v-flex xs6>\n                <v-text-field\n                  class   =\"details-field\"\n                  label   =\"Employer / Company ID\"\n                  v-model =\"model.tenantOid\"\n                  disabled\n                />\n              </v-flex>\n              <v-flex xs6>\n                <v-text-field\n                  class   =\"details-field\"\n                  label   =\"Joined On\"\n                  v-model =\"model.joinedOn\"\n                  disabled\n                />\n              </v-flex>\n              <v-flex xs6>\n                <v-text-field\n                  class   =\"details-field\"\n                  label   =\"Claimed On\"\n                  v-model =\"model.claimedOn\"\n                  disabled\n                />\n              </v-flex>\n              <v-flex xs6>\n                <v-text-field\n                  class     =\"details-field\"\n                  label     =\"First Name\"\n                  :disabled =\"disabled\"\n                  v-model   =\"model.firstName\"\n                />\n                </v-flex>\n              <v-flex xs6>\n                <v-text-field\n                  class     =\"details-field\"\n                  label     =\"Last Name\"\n                  v-model   =\"model.lastName\"\n                  :disabled =\"disabled\"\n                />\n              </v-flex>\n              <v-flex xs6>\n                <v-text-field\n                  class     =\"details-field\"\n                  label     =\"Legal Name\"\n                  v-model   =\"model.name\"\n                  :disabled =\"disabled\"\n                />\n              </v-flex>\n              <v-flex xs6>\n                <v-text-field\n                  class     =\"details-field\"\n                  label     =\"Display Name\"\n                  :disabled =\"disabled\"\n                  v-model   =\"model.displayName\"\n                />\n              </v-flex>\n              <v-flex xs6>\n                <v-text-field\n                  class     =\"details-field\"\n                  label     =\"Date of Birth\"\n                  :disabled =\"disabled\"\n                  v-model   =\"model.birthdate\"\n                  placeholder=\"MM/DD/YYYY\"\n                  :rules=\"[\n                    rules.isDate\n                  ]\"\n                />\n              </v-flex>\n              <v-flex xs6>\n                <v-combobox\n                  class      =\"details-field-select\"\n                  label      =\"Slugs\"\n                  v-model    =\"slugModel\"\n                  :items     =\"items\"\n                  item-text  =\"slug\"\n                  item-value =\"slug\"\n                  :disabled  =\"disabled\"\n                  return-object\n                  chips\n                  deletable-chips\n                  multiple\n                  @update:searchInput=\"debouncedSearchUpdate\"\n                  :menu-props=\"{\n                    closeOnClick: false,\n                    closeOnContentClick: true,\n                    disableKeys: true,\n                    openOnClick: false,\n                    maxHeight: 304\n                  }\"\n                >\n                  <template slot=\"item\" slot-scope=\"props\">\n                    <div>\n                      {{`Slug \\'${props.item.slug}\\' is available!`}}\n                    </div>\n                  </template>\n                </v-combobox>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-form>\n      </v-layout>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport { cloneDeep, get, debounce } from 'lodash'\nimport { mapState } from 'vuex'\n\nimport {\n  MemberDetailsGQL,\n  UpdateMemberSubset,\n  CheckSlugQuery,\n  AddMemberSlug,\n  UpdateMemberSlug\n} from '../../users/members.gql'\nimport EditButton from './EditButton'\nimport { rules } from './rules'\nimport moment from 'moment'\n\nexport default {\n  name: 'MemberDetailsCard',\n  components: {\n    EditButton\n  },\n  data () {\n    return {\n      debounce,\n      rules,\n      model: null,\n      disabled: true,\n      memberId: ~~this.$route.params.id,\n      items: [],\n      slugModel: [],\n      debouncedSearchUpdate: debounce(this.updateSearch, 500)\n    }\n  },\n  methods: {\n    editClicked () {\n      this.disabled = false\n    },\n    async saveClicked() {\n      const { form } = this.$refs\n      const valid = form.validate()\n\n      if (!valid) { return null }\n      this.disabled = true\n\n      try {\n        const { slugModel, tenantId, memberId } = this\n\n        if (slugModel && slugModel.length) {\n          for (let i = 0; i < slugModel.length; i++) {\n            const { slug } = slugModel[i]\n            const { id } = this.memberDetails.slugs[i] ? this.memberDetails.slugs[i] : { id: null }\n            const mappedSlugs = this.memberDetails.slugs.map(s => s.slug)\n            const alreadyHadSlug = this.memberDetails.slugs.hasOwnProperty(i)\n\n            if (slug && !alreadyHadSlug) {\n              await this.$apollo.mutate({\n                mutation: AddMemberSlug,\n                variables: {\n                  input: {\n                    memberId,\n                    slug,\n                    tenantId\n                  }\n                }\n              })\n            } else if (slug && alreadyHadSlug && mappedSlugs.indexOf(slug) < 0) {\n              await this.$apollo.mutate({\n                mutation: UpdateMemberSlug,\n                variables: {\n                  input: {\n                    id,\n                    memberId,\n                    slug,\n                    tenantId,\n                    priority: 0\n                  }\n                }\n              })\n            }\n          }\n        }\n\n        const birthdate = this.model.birthdate ? moment(this.model.birthdate).format('YYYY-MM-DD') : null\n        await this.$apollo.mutate({\n          mutation: UpdateMemberSubset,\n          variables: {\n            input: {\n              id: this.memberId,\n              displayName: this.model.displayName,\n              firstName: this.model.firstName,\n              lastName: this.model.lastName,\n              name: this.model.name,\n              birthday: birthdate\n            }\n          }\n        })\n\n        this.$emit('snackbarEmit', 'Member details saved!')\n        this.$apollo.queries.memberDetails.refetch()\n      } catch (error) {\n        this.$emit('snackbarEmit', error.message)\n        throw new Error(`Error saving Member Details: ${error.message}`)\n      }\n    },\n    async cancelClicked () {\n      this.disabled = true\n      await this.$apollo.queries.memberDetails.refetch()\n      this.initMember(this.memberDetails)\n    },\n    initMember(contact) {\n      this.model = cloneDeep(contact)\n      this.model.birthdate = this.model.birthdate ? moment(this.model.birthdate).format('MM/DD/YYYY') : null\n      this.model.claimedOn = this.model.claimedOn ? moment(this.model.claimedOn).format('MM/DD/YYYY') : null\n      this.model.joinedOn = this.model.joinedOn ? moment(this.model.joinedOn).format('MM/DD/YYYY') : null\n    },\n    async checkSlug(slugs) {\n      const { slug } = slugs.length > 0 ? slugs[0] : { slug: null }\n      if (!slug) return null\n      const slugRes = await this.$apollo.query({\n        query: CheckSlugQuery,\n        variables: {\n          input: {\n            slug\n          }\n        }\n      })\n      return slugRes\n    },\n    async updateSearch(search) {\n      try {\n        const slugRes = await this.checkSlug([{ slug: search }])\n\n        if (!slugRes.data) throw new Error('Error verifying slug')\n\n        const { data: { checkSlug } } = slugRes\n        if (!checkSlug) {\n          this.items = [{ slug: search }]\n        } else {\n          if (checkSlug.memberId === this.memberId) {\n            this.items = [{ slug: search }]\n          }\n        }\n      } catch (error) {\n\n      }\n    }\n  },\n  watch: {\n    memberDetails (next) {\n      this.initMember(next)\n    },\n    '$route'(newRoute) {\n      const { params: { id } } = newRoute\n      this.memberId = ~~id\n      this.disabled = true\n    },\n    'model.slugs'(slugs) {\n      this.items = slugs\n      this.slugModel = slugs\n    }\n  },\n  computed: {\n    ...mapState({\n      tenantId: state => state.user.principal.tenantId\n    })\n  },\n  apollo: {\n    memberDetails: {\n      ...MemberDetailsGQL,\n      variables() {\n        return {\n          memberId: this.memberId\n        }\n      },\n      update(data) {\n        let member = { ...get(data, 'members.nodes.0') }\n        return member\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.findme {\n  border: 2px solid red;\n}\n#contact-list {\n  width: 100%;\n}\n.address-title {\n  position: absolute;\n  top: 9px;\n}\n.member-section-heading {\n  display: inline;\n}\n#form {\n  min-width: 100%;\n}\n.section-subheader {\n  font-size: 18px !important;\n}\n#section-header-container {\n  display: flex;\n  justify-content: space-between;\n}\n.details-field {\n  padding: 12px 10px 0px 10px;\n}\n.details-field-select {\n  padding: 2px 10px 0px 10px;\n}\n</style>\n"]}]}