{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/MemberInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/MemberInfo.vue","mtime":1554331296000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport getLocalSettings from '@/graphql/GetLocaleSettings'\nimport UPDATE_MEMBER from '@/graphql/UpdateMember.gql'\nimport MEMBER_BY_ID from '@/graphql/MemberById.gql'\n// import { NULL } from 'graphql/language/kinds'\n// import moment from 'moment'\n\nexport default {\n  name: 'MemberInfo',\n  props: {\n    memberId: Number\n  },\n  data() {\n    return {\n      valid: false,\n      memberInfo: {\n        id: null,\n        displayName: null,\n        name: null,\n        contactEmail: null,\n        firstName: null,\n        lastName: null,\n        slug: null,\n        mrn: null,\n        claimedOn: null,\n        joinedOn: null,\n        timezoneId: null,\n        languageId: null,\n        legalLocaleId: null\n      },\n      settings: {}\n    }\n  },\n  apollo: {\n    memberInfo: {\n      query: MEMBER_BY_ID,\n      variables() {\n        return {\n          condition: {\n            ids: [this.memberId]\n          }\n        }\n      },\n      update({ members }) {\n        const nodes = members && members.nodes\n        return Object.assign({}, nodes && nodes[0])\n      }\n    },\n    settings: getLocalSettings()\n  },\n  methods: {\n    save() {\n      if (this.$refs.form.validate()) {\n        this.$apollo.mutate({\n          mutation: UPDATE_MEMBER,\n          variables: {\n            memberInput: {\n              id: this.memberInfo.id,\n              displayName: this.memberInfo.displayName,\n              name: this.memberInfo.name,\n              firstName: this.memberInfo.firstName,\n              lastName: this.memberInfo.lastName,\n              slug: this.memberInfo.slug,\n              timezoneId: this.memberInfo.timezoneId,\n              languageId: this.memberInfo.languageId,\n              legalLocaleId: this.memberInfo.legalLocaleId\n            }\n          },\n          update: async (store, { data: { updateMember } }) => {\n            this.memberInfo = { ...updateMember }\n          }\n        })\n      }\n    },\n    requiredRule(field) {\n      return [v => !!v || `${field} is required`]\n    }\n  }\n}\n",{"version":3,"sources":["MemberInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MemberInfo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-form @submit.prevent=\"save\" ref=\"form\" v-model=\"valid\" lazy-validation>\n    <v-text-field label=\"Name\" v-model=\"memberInfo.name\" :rules=\"requiredRule('Name')\" required></v-text-field>\n    <v-text-field\n      label=\"Display Name\"\n      v-model=\"memberInfo.displayName\"\n      :rules=\"requiredRule('Display Name')\"\n      required\n    ></v-text-field>\n    <v-text-field\n      label=\"First Name\"\n      v-model=\"memberInfo.firstName\"\n      :rules=\"requiredRule('First Name')\"\n      required\n    ></v-text-field>\n    <v-text-field\n      label=\"Last Name\"\n      v-model=\"memberInfo.lastName\"\n      :rules=\"requiredRule('Last Name')\"\n      required\n    ></v-text-field>\n    <v-text-field label=\"Slug\" v-model=\"memberInfo.slug\" :rules=\"requiredRule('Slug')\"></v-text-field>\n    <v-text-field label=\"MRN\" v-model=\"memberInfo.mrn\" disabled></v-text-field>\n    <v-text-field label=\"Contact Email\" disabled v-model=\"memberInfo.contactEmail\"></v-text-field>\n    <v-text-field label=\"Claimed On\" v-model=\"memberInfo.claimedOn\" disabled></v-text-field>\n    <v-text-field label=\"Joined On\" v-model=\"memberInfo.joinedOn\" disabled format=\"MM/DD/YYYY\"></v-text-field>\n    <v-select\n      v-model=\"memberInfo.legalLocaleId\"\n      label=\"Select your locale\"\n      :rules=\"requiredRule('Locale')\"\n      :items=\"settings.legalLocales\"\n      item-text=\"name\"\n      item-value=\"id\"\n    />\n    <v-select\n      v-model=\"memberInfo.languageId\"\n      label=\"Select your Language\"\n      :rules=\"requiredRule('Language')\"\n      :items=\"settings.languages\"\n      item-text=\"name\"\n      item-value=\"id\"\n    />\n    <v-select\n      v-model=\"memberInfo.timezoneId\"\n      label=\"Select your Timezone\"\n      :rules=\"requiredRule('Timezone')\"\n      :items=\"settings.timezones\"\n      item-text=\"name\"\n      item-value=\"id\"\n      autocomplete\n    />\n    <v-btn color=\"success\" :disabled=\"!valid\" @click=\"save()\">Save Info</v-btn>\n  </v-form>\n</template>\n\n<script>\nimport getLocalSettings from '@/graphql/GetLocaleSettings'\nimport UPDATE_MEMBER from '@/graphql/UpdateMember.gql'\nimport MEMBER_BY_ID from '@/graphql/MemberById.gql'\n// import { NULL } from 'graphql/language/kinds'\n// import moment from 'moment'\n\nexport default {\n  name: 'MemberInfo',\n  props: {\n    memberId: Number\n  },\n  data() {\n    return {\n      valid: false,\n      memberInfo: {\n        id: null,\n        displayName: null,\n        name: null,\n        contactEmail: null,\n        firstName: null,\n        lastName: null,\n        slug: null,\n        mrn: null,\n        claimedOn: null,\n        joinedOn: null,\n        timezoneId: null,\n        languageId: null,\n        legalLocaleId: null\n      },\n      settings: {}\n    }\n  },\n  apollo: {\n    memberInfo: {\n      query: MEMBER_BY_ID,\n      variables() {\n        return {\n          condition: {\n            ids: [this.memberId]\n          }\n        }\n      },\n      update({ members }) {\n        const nodes = members && members.nodes\n        return Object.assign({}, nodes && nodes[0])\n      }\n    },\n    settings: getLocalSettings()\n  },\n  methods: {\n    save() {\n      if (this.$refs.form.validate()) {\n        this.$apollo.mutate({\n          mutation: UPDATE_MEMBER,\n          variables: {\n            memberInput: {\n              id: this.memberInfo.id,\n              displayName: this.memberInfo.displayName,\n              name: this.memberInfo.name,\n              firstName: this.memberInfo.firstName,\n              lastName: this.memberInfo.lastName,\n              slug: this.memberInfo.slug,\n              timezoneId: this.memberInfo.timezoneId,\n              languageId: this.memberInfo.languageId,\n              legalLocaleId: this.memberInfo.legalLocaleId\n            }\n          },\n          update: async (store, { data: { updateMember } }) => {\n            this.memberInfo = { ...updateMember }\n          }\n        })\n      }\n    },\n    requiredRule(field) {\n      return [v => !!v || `${field} is required`]\n    }\n  }\n}\n</script>\n"]}]}