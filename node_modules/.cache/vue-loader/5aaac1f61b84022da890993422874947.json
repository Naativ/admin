{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/curriculum/Units.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/curriculum/Units.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.table {\n  text-align: left !important;\n}\n",{"version":3,"sources":["Units.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AACA;AACA","file":"Units.vue","sourceRoot":"src/views/curriculum","sourcesContent":["<template>\n  <v-layout justify-space-around align-center column>\n    <v-progress-circular v-if=\"pageLoading\" color=\"blue\" indeterminate></v-progress-circular>\n    <h3>Units for Course {{courseId}} </h3>\n    <v-container class=\"table\">\n      <v-btn @click=\"openDialog\" color=\"pink\" dark absolute right fab>\n        <v-icon>add</v-icon>\n      </v-btn>\n      <v-data-table\n        must-sort\n        :items=\"units\"\n        :headers=\"headers\"\n        hide-actions\n      >\n      <template slot=\"items\" slot-scope=\"props\">\n        <tr @click=\"openBlock(props.item.id)\">\n          <td class=\"px-1\" style=\"width: 0.1%\">\n            <v-btn style=\"cursor: move\" icon class=\"sortHandle\"><v-icon>drag_handle</v-icon></v-btn>\n          </td>\n          <td class=\"text-xs\">{{ props.item.priority}}</td>\n          <td class=\"text-xs\">{{ props.item.id}}</td>\n          <td class=\"text-xs\">{{ props.item.courseId}}</td>\n          <td class=\"text-xs\">{{ props.item.key}}</td>\n          <td class=\"text-xs\">{{ props.item.name}}</td>\n          <td class=\"text-xs\">{{ props.item.description}}</td>\n          <td class=\"text-xs\">{{ props.item.modifiedBy}}</td>\n        </tr>\n      </template>\n      </v-data-table>\n    </v-container>\n    <AddDialog\n      :showDialog=\"showDialog\"\n      :uploadConfig=\"unitForm\"\n      @closeDialog=\"closeDialog\"\n      @submitForm=\"submitForm\"\n      dialogTitle=\"Unit\"\n    />\n    <v-btn\n      v-if=\"orderChanged\"\n      :loading=\"loading\"\n      @click=\"saveOrder\"\n    >\n      Update Priority\n    </v-btn>\n  </v-layout>\n</template>\n\n<script>\nimport AddDialog from '@/components/courses/AddDialog.vue'\n\nimport { mapActions } from 'vuex'\nimport { uploadUnitForm } from '@/components/courses/forms'\nimport { CurriculumActions } from '@/curriculum/CurriculumStore'\n\nimport Sortable from 'sortablejs'\n\nexport default {\n  components: {\n    AddDialog\n  },\n  data() {\n    return {\n      headers: [\n        { text: '', sortable: false },\n        { text: 'Priority', value: 'priority' },\n        { text: 'ID', value: 'id', sortable: false },\n        { text: 'Course ID', value: 'unit_id', sortable: false },\n        { text: 'Key', value: 'key', sortable: false },\n        { text: 'Name', value: 'name', sortable: false },\n        { text: 'Description', value: 'description', sortable: false },\n        { text: 'Modified By', value: 'modified_by', sortable: false }\n      ],\n      units: [],\n      orderChanged: false,\n      loading: false,\n      showDialog: false,\n      unitForm: uploadUnitForm,\n      pageLoading: true\n    }\n  },\n  async mounted() {\n    const { results } = await this.getUnits([this.courseId])\n    this.units = results.map(u => { return { ...u } }).sort(function(a, b) {\n      return a.priority - b.priority\n    })\n\n    this.pageLoading = false\n    const table = document.querySelector('.v-datatable tbody')\n    Sortable.create(table, {\n      onEnd: this.updateUnits,\n      handle: '.sortHandle'\n    })\n  },\n  computed: {\n    courseId() {\n      return ~~this.$route.params.courseId ? ~~this.$route.params.courseId : ''\n    }\n  },\n  methods: {\n    ...mapActions([CurriculumActions.GET_UNITS, CurriculumActions.UPSERT_UNIT]),\n    async saveOrder() {\n      this.loading = true\n      const test = [ ...this.units ]\n      await test.forEach(row => {\n        this.upsertUnit(row)\n      })\n      this.loading = false\n      this.orderChanged = false\n    },\n    updateUnits({ newIndex, oldIndex }) {\n      this.orderChanged = true\n      var test = [...this.units]\n      this.units = []\n      const rowSelected = test.splice(oldIndex, 1)[0]\n      test.splice(newIndex, 0, rowSelected)\n      test.forEach((t, index) => {\n        t.priority = index\n        return t\n      })\n      this.$nextTick(() => {\n        this.units = [...test]\n      })\n    },\n    openDialog() {\n      this.showDialog = true\n    },\n    async closeDialog(val) {\n      this.showDialog = false\n    },\n    openBlock(unitId) {\n      this.$router.push('/curriculum/courses/' + this.courseId + '/unit/' + unitId)\n    },\n    async submitForm(val) {\n      val.courseId = this.courseId\n      await this.upsertUnit(val)\n\n      Object.keys(this.unitForm).forEach(index => {\n        this.unitForm[index] = ''\n      })\n      delete this.unitForm.courseId\n\n      this.showDialog = false\n      const { results } = await this.getUnits([this.courseId])\n      this.units = results.map(u => { return { ...u } }).sort(function(a, b) {\n        return a.priority - b.priority\n      })\n    }\n  }\n}\n</script>\n\n<style>\n.table {\n  text-align: left !important;\n}\n</style>\n"]}]}