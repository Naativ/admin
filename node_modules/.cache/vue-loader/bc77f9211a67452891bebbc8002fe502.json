{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/users/appointments/ParticipantDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/users/appointments/ParticipantDialog.vue","mtime":1570835920000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\n\nexport default {\n  props: {\n    open: Boolean\n  },\n  data() {\n    return {\n      newParticipantId: undefined,\n      newParticipant: {},\n      error: undefined,\n      name: 'No Match'\n    }\n  },\n  methods: {\n    ...mapActions({\n      getUser: UsersActions.GET_USER\n    }),\n    async loadHost() {\n      if (!this.newParticipantId || this.newParticipantId.length < 0) {\n        this.newParticipant = {}\n        return\n      }\n      this.newParticipant = await this.getUser({ id: ~~this.newParticipantId })\n      if (this.newParticipant && this.newParticipant.displayName) {\n        this.name = this.newParticipant.displayName\n      } else {\n        this.name = 'No Match'\n      }\n    },\n    async close() {\n      this.$emit('close', this.newParticipantId)\n    }\n  }\n}\n",{"version":3,"sources":["ParticipantDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ParticipantDialog.vue","sourceRoot":"src/views/users/appointments","sourcesContent":["<template>\n  <v-layout row justify-center>\n    <v-dialog v-model=\"open\" persistent max-width=\"600px\">\n      <v-card>\n        <v-card-title>\n          <span class=\"headline\">Choose New User</span>\n        </v-card-title>\n        <v-card-text>\n          <v-container grid-list-md>\n            <v-layout wrap>\n              <v-flex xs12 sm6 md4>\n                <v-text-field\n                  v-model=\"newParticipantId\"\n                  label=\"New System ID\"\n                  @keyup=\"loadHost\"\n                  required\n                ></v-text-field>\n              </v-flex>\n              <v-flex xs12 sm6 md8>\n                <v-text-field v-model=\"name\" label=\"New User\" disabled></v-text-field>\n              </v-flex>\n            </v-layout>\n          </v-container>\n          <v-alert color=\"error\" :value=\"!!error\">{{error}}</v-alert>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"red darken-1\" flat @click=\"$emit('cancel')\">Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn :disabled=\"name === 'No Match'\" color=\"blue darken-1\" flat @click=\"close()\">Done</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-layout>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\n\nexport default {\n  props: {\n    open: Boolean\n  },\n  data() {\n    return {\n      newParticipantId: undefined,\n      newParticipant: {},\n      error: undefined,\n      name: 'No Match'\n    }\n  },\n  methods: {\n    ...mapActions({\n      getUser: UsersActions.GET_USER\n    }),\n    async loadHost() {\n      if (!this.newParticipantId || this.newParticipantId.length < 0) {\n        this.newParticipant = {}\n        return\n      }\n      this.newParticipant = await this.getUser({ id: ~~this.newParticipantId })\n      if (this.newParticipant && this.newParticipant.displayName) {\n        this.name = this.newParticipant.displayName\n      } else {\n        this.name = 'No Match'\n      }\n    },\n    async close() {\n      this.$emit('close', this.newParticipantId)\n    }\n  }\n}\n</script>\n"]}]}