{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/assets/AssetList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/assets/AssetList.vue","mtime":1559148307000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AssetDialog from '@/content/AssetDialog.vue'\nimport { processingStatus } from '@/content/content.gql.js'\n\nimport { mapActions, mapGetters } from 'vuex'\nimport { ContentActions, ContentGetters } from '@/content/ContentStore'\nexport default {\n  name: 'Assets',\n  components: {\n    AssetDialog\n  },\n  data() {\n    return {\n      showAssetDialog: false,\n      selectedAsset: {},\n      statuses: {\n        200: 'Available',\n        202: 'Pending',\n        203: 'Processing',\n        204: 'Failed',\n        301: 'Archived'\n      }\n    }\n  },\n  mounted() {\n    this.assets.forEach(async _ => {\n      if (this.isPending(_)) {\n        this.refresh(_)\n      }\n    })\n  },\n  props: {\n    assets: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    manage: {\n      type: Boolean,\n      default: false\n    },\n    profile: {\n      type: Array\n    },\n    profilePic: {\n      type: Number\n    }\n  },\n  computed: {\n    ...mapGetters({\n      assetMeta: ContentGetters.assetMeta\n    })\n  },\n  methods: {\n    ...mapActions({\n      setTags: ContentActions.ADD_ASSET_TAG,\n      removeAsset: ContentActions.REMOVE_ASSET\n    }),\n    filterTags(asset, key) {\n      if (asset.tags === null) { return false }\n      return asset.tags.filter(_ => _.key.indexOf(key) > -1).map(_ => _.name)\n    },\n    showAsset(asset) {\n      this.showAssetDialog = true\n      this.selectedAsset = asset\n    },\n    closeAssetDialog() {\n      this.showAssetDialog = false\n      this.selectedAsset = {}\n    },\n    async addTag(asset, tag) {\n      const tagData = this.assetMeta.approval.find(e => e.key === `approval:${tag}`)\n      const pendingData = this.assetMeta.approval.find(e => e.key === `approval:pending`)\n      const filteredTags = asset.tags.filter(_ => _.id !== pendingData.id)\n      await this.setTags({\n        asset,\n        tags: [\n          ...filteredTags.map(_ => _.id),\n          tagData.id\n        ]\n      })\n      await this.removeAsset(asset)\n      this.$emit('tagAdded', asset)\n    },\n    async refresh(_asset) {\n      const { data } = await this.$apollo.query({\n        query: processingStatus,\n        variables: {\n          input: {\n            assetId: _asset.id\n          }\n        },\n        fetchPolicy: 'network-only'\n      })\n\n      const { asset } = data.assetProcessingStatus\n      if (asset) this.$emit('updated', asset)\n      if (this.isPending(asset)) {\n        window.setTimeout(() => { this.refresh(asset) }, 15 * 1000)\n      }\n    },\n    isPending(asset) {\n      return [202, 203].indexOf(asset.visibilityId) > -1\n    }\n  },\n  watch: {\n    assets(val) {\n      val.forEach(async _ => {\n        if (this.isPending(_)) {\n          this.refresh(_)\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["AssetList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"AssetList.vue","sourceRoot":"src/views/assets","sourcesContent":["<template>\n  <v-layout row wrap>\n    <AssetDialog\n      :showAssetDialog=\"showAssetDialog\"\n      :asset=\"this.selectedAsset\"\n      @closeAssetDialog=\"closeAssetDialog\"\n    />\n    <v-flex xs12 sm6 md4 lg3 xl2 pa-1 v-for=\"(asset, index) in assets\" :key=\"index\">\n      <v-card>\n        <div v-if=\"isPending(asset)\" class=\"v-responsive v-image bordered\">\n          <div class=\"v-responsive__sizer\" style=\"padding-bottom: 36.3636%;\"></div>\n          <div class=\"v-image__image v-image__image--cover image-missing\">\n            <strong>File is still processing</strong>\n          </div>\n          <div class=\"v-responsive__content\"></div>\n        </div>\n        <div v-else-if=\"asset.visibilityId === 204\" class=\"v-responsive v-image bordered\">\n          <div class=\"v-responsive__sizer\" style=\"padding-bottom: 36.3636%;\"></div>\n          <div class=\"v-image__image v-image__image--cover image-missing\">Failed. Please try reporcessing</div>\n          <div class=\"v-responsive__content\"></div>\n        </div>\n        <v-img v-else-if=\"asset.thumbnailUrl\" :src=\"asset.thumbnailUrl\" aspect-ratio=\"2.75\"></v-img>\n        <v-img\n          v-else-if=\"asset.url && asset.categoryKey === 'image'\"\n          :src=\"asset.url\"\n          aspect-ratio=\"2.75\"\n        ></v-img>\n        <div v-else-if=\"asset.categoryKey === 'doc'\" class=\"v-responsive v-image bordered\">\n          <v-spacer/>\n          <object :data=\"asset.url\" type=\"application/pdf\">\n            <embed v-if=\"!$browser.isMobile\" :src=\"asset.url\" type=\"application/pdf\" target=\"_blank\"/>\n            <p class=\"pdf\">Preview not available</p>\n          </object>\n          <v-spacer />\n        </div>\n        <div v-else class=\"v-responsive v-image bordered\">\n          <div class=\"v-responsive__sizer\" style=\"padding-bottom: 36.3636%;\"></div>\n          <div class=\"v-image__image v-image__image--cover image-missing\">Preview not available</div>\n          <div class=\"v-responsive__content\"></div>\n        </div>\n        <v-card-title primary-title style=\"overflow: hidden;\">\n          <div>\n            <v-chip class=\"profile-chip\" v-if=\"profile && inProfile(asset)\" color=\"green\" text-color=\"white\">In Profile</v-chip>\n            <v-chip class=\"profile-chip\" v-if=\"profile && asset.id === profilePic\" color=\"green\" text-color=\"white\">Profile Pic</v-chip>\n            <h3 class=\"headline mb-0\" style=\"text-overflow: ellipsis;\">{{asset.name}}</h3>\n            <div>\n              <small>{{asset.owner.displayName}} (#{{asset.owner.mrn}})</small>\n              <div v-if=\"filterTags(asset, 'search').length\">\n                <small>Tags: </small>\n                <small>{{filterTags(asset, 'search').join(', ')}}</small>\n              </div>\n              <div v-if=\"filterTags(asset, 'aud').length\">\n                <small>Audience: </small>\n                <small>{{filterTags(asset, 'aud').join(', ')}}</small>\n              </div>\n            </div>\n            <div style=\"height: 50px;\">{{asset.description}}</div>\n          </div>\n        </v-card-title>\n        <v-card-actions>\n          <v-btn flat color=\"primary\" :disabled=\"asset.visibilityId !== 200\" @click=\"showAsset(asset)\">Show</v-btn>\n          <v-btn flat disabled>{{statuses[asset.visibilityId]}}</v-btn>\n          <v-spacer></v-spacer>\n          <v-menu transition=\"slide-y-transition\" bottom>\n            <v-btn fab flat slot=\"activator\">\n              <v-icon>more_vert</v-icon>\n            </v-btn>\n            <v-list>\n              <v-list-tile @click=\"addTag(asset, 'approved')\">\n                <v-list-tile-title>Approve</v-list-tile-title>\n              </v-list-tile>\n              <v-list-tile @click=\"addTag(asset, 'rejected')\">\n                <v-list-tile-title>Reject</v-list-tile-title>\n              </v-list-tile>\n            </v-list>\n          </v-menu>\n        </v-card-actions>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport AssetDialog from '@/content/AssetDialog.vue'\nimport { processingStatus } from '@/content/content.gql.js'\n\nimport { mapActions, mapGetters } from 'vuex'\nimport { ContentActions, ContentGetters } from '@/content/ContentStore'\nexport default {\n  name: 'Assets',\n  components: {\n    AssetDialog\n  },\n  data() {\n    return {\n      showAssetDialog: false,\n      selectedAsset: {},\n      statuses: {\n        200: 'Available',\n        202: 'Pending',\n        203: 'Processing',\n        204: 'Failed',\n        301: 'Archived'\n      }\n    }\n  },\n  mounted() {\n    this.assets.forEach(async _ => {\n      if (this.isPending(_)) {\n        this.refresh(_)\n      }\n    })\n  },\n  props: {\n    assets: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    manage: {\n      type: Boolean,\n      default: false\n    },\n    profile: {\n      type: Array\n    },\n    profilePic: {\n      type: Number\n    }\n  },\n  computed: {\n    ...mapGetters({\n      assetMeta: ContentGetters.assetMeta\n    })\n  },\n  methods: {\n    ...mapActions({\n      setTags: ContentActions.ADD_ASSET_TAG,\n      removeAsset: ContentActions.REMOVE_ASSET\n    }),\n    filterTags(asset, key) {\n      if (asset.tags === null) { return false }\n      return asset.tags.filter(_ => _.key.indexOf(key) > -1).map(_ => _.name)\n    },\n    showAsset(asset) {\n      this.showAssetDialog = true\n      this.selectedAsset = asset\n    },\n    closeAssetDialog() {\n      this.showAssetDialog = false\n      this.selectedAsset = {}\n    },\n    async addTag(asset, tag) {\n      const tagData = this.assetMeta.approval.find(e => e.key === `approval:${tag}`)\n      const pendingData = this.assetMeta.approval.find(e => e.key === `approval:pending`)\n      const filteredTags = asset.tags.filter(_ => _.id !== pendingData.id)\n      await this.setTags({\n        asset,\n        tags: [\n          ...filteredTags.map(_ => _.id),\n          tagData.id\n        ]\n      })\n      await this.removeAsset(asset)\n      this.$emit('tagAdded', asset)\n    },\n    async refresh(_asset) {\n      const { data } = await this.$apollo.query({\n        query: processingStatus,\n        variables: {\n          input: {\n            assetId: _asset.id\n          }\n        },\n        fetchPolicy: 'network-only'\n      })\n\n      const { asset } = data.assetProcessingStatus\n      if (asset) this.$emit('updated', asset)\n      if (this.isPending(asset)) {\n        window.setTimeout(() => { this.refresh(asset) }, 15 * 1000)\n      }\n    },\n    isPending(asset) {\n      return [202, 203].indexOf(asset.visibilityId) > -1\n    }\n  },\n  watch: {\n    assets(val) {\n      val.forEach(async _ => {\n        if (this.isPending(_)) {\n          this.refresh(_)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.bordered {\n  border-bottom: 1px solid #eee;\n}\n.image-missing {\n  text-align: center;\n  margin: auto;\n  position: relative;\n  height: 100%;\n}\n.pdf {\n  margin: 15px 0;\n}\n.profile-chip{\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n</style>\n"]}]}