{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/appointments/AppointmentsFrame.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/appointments/AppointmentsFrame.vue","mtime":1573194803000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as R from 'ramda'\nimport { mapActions, mapState } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\n\nexport default {\n  data() {\n    return {\n      target: undefined\n    }\n  },\n  methods: {\n    ...mapActions({\n      removeAppointment: UsersActions.STOP_VIEWING_APT,\n      getUser: UsersActions.GET_USER\n    }),\n    closeUser(appointment) {\n      this.removeAppointment(appointment.id)\n      const route = ~~R.pathOr(-1, ['$route', 'params', 'id'], this)\n      if (route === appointment.id) {\n        this.$router.push('/appointments/')\n      }\n    },\n    navigateUser(item) {\n      this.$router.push('/appointments/' + item.id)\n    },\n    navigateSearch() {\n      this.$router.push('/appointments/')\n    },\n    nil() { }\n  },\n  computed: {\n    ...mapState({\n      viewing: state => state.users.searchedAppointment\n    })\n  },\n  async beforeRouteUpdate(to, from, next) {\n    const { id } = to.params\n    if (id) {\n      this.target = await this.getUser({ id })\n    } else {\n      this.target = undefined\n    }\n    next()\n  }\n}\n",{"version":3,"sources":["AppointmentsFrame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppointmentsFrame.vue","sourceRoot":"src/views/appointments","sourcesContent":["<template>\n  <div>\n    <v-layout row wrap>\n      <v-flex xs12 sm4>\n        <v-card>\n          <v-list two-line class=\"mouse-pointer\">\n            <v-list-tile avatar @click=\"navigateSearch()\">\n              <v-list-tile-avatar>\n                <v-btn icon>\n                  <v-icon>search</v-icon>\n                </v-btn>\n              </v-list-tile-avatar>\n\n              <v-list-tile-content>\n                <v-list-tile-title>Search Appointments</v-list-tile-title>\n                <v-list-tile-sub-title>Search Appointments</v-list-tile-sub-title>\n              </v-list-tile-content>\n            </v-list-tile>\n            <template v-for=\"(item, index) in viewing\">\n              <v-subheader v-if=\"item.header\" :key=\"item.header\">{{ item.header }}</v-subheader>\n              <v-divider v-else-if=\"item.divider\" :inset=\"item.inset\" :key=\"index\"></v-divider>\n              <v-list-tile v-else :key=\"item.id\" avatar @click=\"navigateUser(item)\">\n                <v-list-tile-avatar>\n                  <v-btn icon>\n                    <v-icon>calendar_today</v-icon>\n                  </v-btn>\n                </v-list-tile-avatar>\n\n                <v-list-tile-content>\n                  <!-- <v-list-tile-title>{{item.displayName}}</v-list-tile-title> -->\n                  <v-list-tile-title v-if=\"item.appointment\">Apt Id: {{item.appointment.id}} </v-list-tile-title>\n                  <v-list-tile-title v-else-if=\"item.booking\">Booking Id: {{item.booking.id}} </v-list-tile-title>\n                  <v-list-tile-sub-title>\n                    <v-layout row>\n                      <v-flex xs6 v-if=\"item.appointment\">Host: {{item.appointment.host.name}}</v-flex>\n                      <v-flex xs6 v-else-if=\"item.booking\">Host: {{item.booking.host.name}}</v-flex>\n                      <!-- <v-flex xs6>System: {{item.id}}</v-flex> -->\n                    </v-layout>\n                  </v-list-tile-sub-title>\n                </v-list-tile-content>\n\n                <v-list-tile-action @click.stop=\"closeUser(item)\">\n                  <v-icon>close</v-icon>\n                </v-list-tile-action>\n              </v-list-tile>\n            </template>\n          </v-list>\n        </v-card>\n      </v-flex>\n      <v-flex xs12 sm8>\n        <router-view></router-view>\n      </v-flex>\n    </v-layout>\n  </div>\n</template>\n\n<script>\nimport * as R from 'ramda'\nimport { mapActions, mapState } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\n\nexport default {\n  data() {\n    return {\n      target: undefined\n    }\n  },\n  methods: {\n    ...mapActions({\n      removeAppointment: UsersActions.STOP_VIEWING_APT,\n      getUser: UsersActions.GET_USER\n    }),\n    closeUser(appointment) {\n      this.removeAppointment(appointment.id)\n      const route = ~~R.pathOr(-1, ['$route', 'params', 'id'], this)\n      if (route === appointment.id) {\n        this.$router.push('/appointments/')\n      }\n    },\n    navigateUser(item) {\n      this.$router.push('/appointments/' + item.id)\n    },\n    navigateSearch() {\n      this.$router.push('/appointments/')\n    },\n    nil() { }\n  },\n  computed: {\n    ...mapState({\n      viewing: state => state.users.searchedAppointment\n    })\n  },\n  async beforeRouteUpdate(to, from, next) {\n    const { id } = to.params\n    if (id) {\n      this.target = await this.getUser({ id })\n    } else {\n      this.target = undefined\n    }\n    next()\n  }\n}\n</script>\n\n<style>\n</style>\n"]}]}