{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/views/appointments/AppointmentsDashboard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/views/appointments/AppointmentsDashboard.vue","mtime":1552022137000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.full-height {\n  height: 77% !important;\n}\n",{"version":3,"sources":["AppointmentsDashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA","file":"AppointmentsDashboard.vue","sourceRoot":"src/views/appointments","sourcesContent":["<template>\n  <v-card>\n    <v-card-title primary-title>\n      <v-flex xs12>\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation @submit.prevent=\"search()\">\n          <v-layout>\n            <v-flex xs9>\n              <v-flex xs12>\n                <v-text-field\n                  required\n                  v-model=\"term\"\n                  label=\"Search Term\"\n                  v-on:keyup.enter=\"search()\"\n                ></v-text-field>\n              </v-flex>\n            </v-flex>\n            <v-flex d-flex xs3 child-flex>\n              <v-btn :disabled=\"!valid\" class=\"full-height\" @click=\"search()\">submit</v-btn>\n            </v-flex>\n          </v-layout>\n        </v-form>\n      </v-flex>\n    </v-card-title>\n    <!-- Sear h Results -->\n    <v-card-text>\n      <v-list two-line>\n        <template v-for=\"item in results.results\">\n          <v-layout :key=\"item.id\">\n            <v-list-tile :key=\"item.id\" avatar @click=\"open(item)\">\n              <v-list-tile-avatar>\n                <v-icon>calendar_today</v-icon>\n              </v-list-tile-avatar>\n              <v-list-tile-content>\n                <v-list-tile-title v-if=\"item.appointment\">Appointment ID: {{item.appointment.id}}</v-list-tile-title>\n                <v-list-tile-title v-else-if=\"item.booking\">Booking ID: {{item.booking.id}}</v-list-tile-title>\n                <v-list-tile-sub-title>\n                  <v-layout row wrap>\n                    <v-flex xs3 sm3 v-if=\"item.appointment\">Host: {{item.appointment.host.firstName}}</v-flex>\n                    <v-flex xs3 sm3 v-else-if=\"item.booking\">Host: {{item.booking.host.firstName}}</v-flex>\n                  </v-layout>\n                </v-list-tile-sub-title>\n              </v-list-tile-content>\n            </v-list-tile>\n          </v-layout>\n        </template>\n      </v-list>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { UsersActions } from '@/users/UsersStore'\nimport { appointmentSearch } from '@/appointments/appointments.gql'\n\nexport default {\n  data() {\n    return {\n      valid: true,\n      term: '',\n      tags: [],\n      results: []\n    }\n  },\n  methods: {\n    ...mapActions([UsersActions.PUSH_APT_SEARCH]),\n    open(item) {\n      const { appointment = {}, booking = {} } = item\n      const aid = appointment ? appointment.id : ''\n      const bid = booking ? booking.id : ''\n\n      const searchItem = {\n        ...item,\n        id: aid + '_' + bid\n      }\n      this.pushAppointment(searchItem)\n      this.$router.push(`/appointments/${aid}_${bid}`)\n    },\n    async search() {\n      const { term } = this\n      const { data } = await this.$apollo.query({\n        query: appointmentSearch,\n        variables: { input: { term: term, page: 1, pageSize: 100 } },\n        fetchPolicy: 'network-only'\n      })\n      this.results = data.appointmentSearch\n    },\n    remove(item) {\n      this.tags.splice(this.tags.indexOf(item), 1)\n      this.tags = [...this.tags]\n    }\n  },\n  computed: {\n    ...mapState({\n      searched: state => state.users.searchedAppointment\n    })\n  }\n}\n</script>\n\n<style>\n.full-height {\n  height: 77% !important;\n}\n</style>\n"]}]}