{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/AssociationsDataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/AssociationsDataTable.vue","mtime":1575760925477},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataTableInputField from '@/components/DataTableInputField.vue'\n\nconst screenEnum = {\n  dashboard: 0,\n  membersInAssociation: 1,\n  associationsByMember: 2\n}\nconst nameColText = [\n  'Member Name',\n  'Member Name',\n  'Association Name'\n]\nconst typeColText = [\n  '',\n  'Role',\n  'Type'\n]\nconst typeObjText = [\n  '',\n  'role',\n  'type'\n]\nconst idColText = [\n  'Id',\n  'Member Id',\n  'Id'\n]\nconst idObjText = [\n  'id',\n  'id',\n  'id'\n]\nconst metadataObjText = [\n  'metadata',\n  'metadata',\n  'metadata'\n]\n\nexport default {\n  name: 'AssociationsDataTable',\n  components: {\n    DataTableInputField\n  },\n  props: {\n    currentScreen: {\n      type: String,\n      required: true\n    },\n    associations: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      headers: [\n        { text: idColText[screenEnum[this.currentScreen]], value: 'id', sortable: false },\n        { text: nameColText[screenEnum[this.currentScreen]], value: 'name', sortable: false }\n      ],\n      idObjName: idObjText[screenEnum[this.currentScreen]],\n      typeObjName: typeObjText[screenEnum[this.currentScreen]],\n      metadataObjName: metadataObjText[screenEnum[this.currentScreen]],\n      loading: false\n    }\n  },\n  mounted() {\n    if (this.currentScreen !== 'dashboard') {\n      this.headers.push({ text: typeColText[screenEnum[this.currentScreen]], value: 'type', sortable: false })\n    }\n  }\n}\n",{"version":3,"sources":["AssociationsDataTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AssociationsDataTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-data-table class=\"association-table\" :loading=\"loading\" :items=\"associations\" :headers=\"headers\" hide-actions>\n    <template slot=\"items\" slot-scope=\"props\">\n      <tr @click=\"$emit('view', currentScreen === 'dashboard' ? props.item.id : props, props.item.id)\">\n        <td class=\"text-xs\">{{ props.item[idObjName] }}</td>\n        <td class=\"text-xs\">{{ props.item.name }}</td>\n        <td v-if=\"currentScreen !== 'dashboard'\" class=\"text-xs\">{{ props.item[typeObjName] }}</td>\n        <td v-if=\"currentScreen !== 'dashboard'\" class=\"text-xs\">{{ props.item[metadataObjName] }}</td>\n      </tr>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nimport DataTableInputField from '@/components/DataTableInputField.vue'\n\nconst screenEnum = {\n  dashboard: 0,\n  membersInAssociation: 1,\n  associationsByMember: 2\n}\nconst nameColText = [\n  'Member Name',\n  'Member Name',\n  'Association Name'\n]\nconst typeColText = [\n  '',\n  'Role',\n  'Type'\n]\nconst typeObjText = [\n  '',\n  'role',\n  'type'\n]\nconst idColText = [\n  'Id',\n  'Member Id',\n  'Id'\n]\nconst idObjText = [\n  'id',\n  'id',\n  'id'\n]\nconst metadataObjText = [\n  'metadata',\n  'metadata',\n  'metadata'\n]\n\nexport default {\n  name: 'AssociationsDataTable',\n  components: {\n    DataTableInputField\n  },\n  props: {\n    currentScreen: {\n      type: String,\n      required: true\n    },\n    associations: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      headers: [\n        { text: idColText[screenEnum[this.currentScreen]], value: 'id', sortable: false },\n        { text: nameColText[screenEnum[this.currentScreen]], value: 'name', sortable: false }\n      ],\n      idObjName: idObjText[screenEnum[this.currentScreen]],\n      typeObjName: typeObjText[screenEnum[this.currentScreen]],\n      metadataObjName: metadataObjText[screenEnum[this.currentScreen]],\n      loading: false\n    }\n  },\n  mounted() {\n    if (this.currentScreen !== 'dashboard') {\n      this.headers.push({ text: typeColText[screenEnum[this.currentScreen]], value: 'type', sortable: false })\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}