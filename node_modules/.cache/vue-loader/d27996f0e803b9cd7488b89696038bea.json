{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/PayoutDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/PayoutDialog.vue","mtime":1574205294000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createMemberPayout, linkAppointmentToPayout } from '@/users/users.gql'\n\nexport default {\n  props: {\n    addDialog: { type: Boolean, default: false },\n    integrationId: Number\n  },\n  data() {\n    return {\n      currencyList: [\n        'USD', 'CAD'\n      ],\n      statusList: [\n        { value: 'PENDING', text: 'Pending' },\n        { value: 'APPROVAL_PENDING', text: 'Approval Pending' },\n        { value: 'PENDING_RELEASE', text: 'Pending Release' },\n        { value: 'RELEASED', text: 'Released' }\n      ],\n      currency: 'USD',\n      status: 'PENDING',\n      amount: '',\n      note: '',\n      appointmentId: null,\n      loading: false\n    }\n  },\n  computed: {\n    show: {\n      get() { return this.addDialog },\n      set(v) { this.$emit('closeDialog') }\n    },\n    id () { return ~~this.$route.params.id }\n  },\n  methods: {\n    async createPayout() {\n      if (this.$refs.form.validate()) {\n        this.loading = true\n        const data = await this.$apollo.mutate({\n          mutation: createMemberPayout,\n          variables: {\n            input: {\n              status: this.status,\n              currency: this.currency,\n              amount: parseFloat(this.amount) * 100,\n              note: this.note,\n              params: {},\n              memberId: this.id,\n              tenantIntegrationId: this.integrationId\n            }\n          }\n        })\n\n        if (this.appointmentId) {\n          await this.$apollo.mutate({\n            mutation: linkAppointmentToPayout,\n            variables: {\n              input: {\n                appointmentId: ~~this.appointmentId,\n                payoutId: ~~data.data.createPayoutForMember.id\n              }\n            }\n          })\n        }\n        this.loading = false\n        this.show = false\n        this.$emit('submitted')\n      }\n    }\n  }\n\n}\n",{"version":3,"sources":["PayoutDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"PayoutDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog v-model=\"show\" max-width=\"768\" persistent>\n      <v-card class=\"dialog\">\n        <v-flex pa-4>\n          <h1>Add Payouts</h1>\n          <v-form ref=\"form\" lazy-validation>\n            <v-layout row>\n              <v-select\n                class=\"currency\"\n                px-2\n                :items=\"currencyList\"\n                label=\"Currency\"\n                v-model=\"currency\"\n              ></v-select>\n              <v-text-field\n                label=\"Amount\"\n                prefix=\"$\"\n                placeholder=\"0.00\"\n                :rules=\"[v => !!v || 'Amount is required!']\"\n                v-model=\"amount\"\n              >\n              </v-text-field>\n            </v-layout>\n            <v-layout column>\n              <v-select\n                class=\"status\"\n                px-2\n                :items=\"statusList\"\n                label=\"Status\"\n                v-model=\"status\"\n              ></v-select>\n            </v-layout>\n            <v-layout column>\n              <v-textarea\n                :auto-grow=\"true\"\n                row-height=\"1\"\n                label=\"Description of Payment\"\n                :rules=\"[v => !!v || 'Discription is required!']\"\n                v-model=\"note\"\n              >\n              </v-textarea>\n            </v-layout>\n            <!-- <v-divider/>\n            <h3>Optional</h3> -->\n            <v-text-field\n              label=\"Enter Appointment ID (Optional)\"\n              v-model=\"appointmentId\"\n            ></v-text-field>\n          </v-form>\n          <v-card-actions>\n            <v-btn\n              flat\n              @click=\"$emit('closeDialog')\"\n            >Close</v-btn>\n            <v-spacer/>\n            <v-btn\n              :loading=\"loading\"\n              flat\n              class=\"primary\"\n              @click=\"createPayout\"\n            >Submit</v-btn>\n          </v-card-actions>\n        </v-flex>\n      </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { createMemberPayout, linkAppointmentToPayout } from '@/users/users.gql'\n\nexport default {\n  props: {\n    addDialog: { type: Boolean, default: false },\n    integrationId: Number\n  },\n  data() {\n    return {\n      currencyList: [\n        'USD', 'CAD'\n      ],\n      statusList: [\n        { value: 'PENDING', text: 'Pending' },\n        { value: 'APPROVAL_PENDING', text: 'Approval Pending' },\n        { value: 'PENDING_RELEASE', text: 'Pending Release' },\n        { value: 'RELEASED', text: 'Released' }\n      ],\n      currency: 'USD',\n      status: 'PENDING',\n      amount: '',\n      note: '',\n      appointmentId: null,\n      loading: false\n    }\n  },\n  computed: {\n    show: {\n      get() { return this.addDialog },\n      set(v) { this.$emit('closeDialog') }\n    },\n    id () { return ~~this.$route.params.id }\n  },\n  methods: {\n    async createPayout() {\n      if (this.$refs.form.validate()) {\n        this.loading = true\n        const data = await this.$apollo.mutate({\n          mutation: createMemberPayout,\n          variables: {\n            input: {\n              status: this.status,\n              currency: this.currency,\n              amount: parseFloat(this.amount) * 100,\n              note: this.note,\n              params: {},\n              memberId: this.id,\n              tenantIntegrationId: this.integrationId\n            }\n          }\n        })\n\n        if (this.appointmentId) {\n          await this.$apollo.mutate({\n            mutation: linkAppointmentToPayout,\n            variables: {\n              input: {\n                appointmentId: ~~this.appointmentId,\n                payoutId: ~~data.data.createPayoutForMember.id\n              }\n            }\n          })\n        }\n        this.loading = false\n        this.show = false\n        this.$emit('submitted')\n      }\n    }\n  }\n\n}\n</script>\n\n<style>\n.dialog {\n  padding: 10px;\n}\n.currency {\n  max-width: 100px;\n  margin-right: 20px;\n}\n</style>\n"]}]}