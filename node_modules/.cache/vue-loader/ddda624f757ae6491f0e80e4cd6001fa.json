{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/booking/Create.vue?vue&type=style&index=0&id=2a508ebc&scoped=true&lang=css&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/booking/Create.vue","mtime":1559146293000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.card-wrapper {\n  padding: 20px;\n}\n.snackbar a {\n  color: #ff4a9d;\n  margin-left: 3px;\n}\n",{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmVA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Create.vue","sourceRoot":"src/components/booking","sourcesContent":["<template>\n  <v-flex xs12>\n    <v-snackbar\n      :timeout=\"8000\"\n      :top=\"true\"\n      :right=\"true\"\n      v-model=\"snackbar.show\"\n      class=\"snackbar\"\n    >\n      {{snackbar.message}}\n      <a\n        v-if=\"snackbar.callback\"\n        @click=\"snackbar.callback.fn\"\n      >\n        {{snackbar.callback.label}}\n      </a>\n      <v-btn\n        flat\n        color=\"pink\"\n        @click.native=\"snackbar.show = false\"\n      >Close</v-btn>\n    </v-snackbar>\n    <div class=\"team main-container\">\n      <v-layout\n        row\n        justify-end\n      >\n        <v-btn\n          @click=\"show = true\"\n          class=\"primary text-capitalize\"\n          flat\n          right\n          slot=\"activator\"\n        >\n          Create Booking\n        </v-btn>\n      </v-layout>\n      <v-dialog\n        v-model=\"show\"\n        width=\"50%\"\n        persistent\n      >\n        <v-card class=\"card-wrapper\">\n          <v-layout\n            row\n            justify-center\n          >\n            <h2>Create a New Booking</h2>\n          </v-layout>\n          <UserAutocomplete\n            :disabled=\"locked\"\n            @selected=\"assignHost\"\n            label=\"Host\"\n          />\n          <UserAutocomplete\n            :disabled=\"locked\"\n            @selected=\"assignGuest\"\n            label=\"Guest\"\n          />\n          <v-select\n            label=\"Learning Profile\"\n            :loading=\"locked\"\n            item-text=\"displayName\"\n            item-value=\"id\"\n            return-object\n            :disabled=\"profileList.length < 1 || locked\"\n            :items=\"profileList\"\n            v-model=\"booking.profile\"\n          />\n          <v-layout\n            row\n            justify-space-around\n          >\n            <DateSelector\n              :disabled=\"locked\"\n              @selected=\"updateStartDate\"\n              :selectedDate=\"booking.start.date\"\n              label=\"Select Date\"\n            />\n            <TimeSelector\n              @selected=\"updateStartTime\"\n              :disabled=\"!booking.start.date || locked\"\n              label=\"Select Start Time\"\n            />\n            <TimeSelector\n              @selected=\"updateEndTime\"\n              :disabled=\"!booking.start.date || locked\"\n              label=\"Select End Time\"\n            />\n          </v-layout>\n          <v-select\n            :disabled=\"locked\"\n            :items=\"statusList\"\n            label=\"Booking Status\"\n            item-text=\"name\"\n            item-value=\"id\"\n            v-model=\"booking.statusId\"\n          />\n          <v-select\n            :disabled=\"locked\"\n            :items=\"typeList\"\n            label=\"Booking Type\"\n            item-text=\"name\"\n            item-value=\"key\"\n            v-model=\"booking.typeKey\"\n          />\n          <v-layout\n            row\n            justify-space-around\n          >\n            <v-checkbox\n              :disabled=\"locked\"\n              v-model=\"booking.costFree\"\n              label=\"Cost Free\"\n            ></v-checkbox>\n            <v-select\n              :disabled=\"locked\"\n              v-if=\"!booking.costFree\"\n              :items=\"ledgerUnits\"\n              label=\"Cost Unit\"\n              item-text=\"name\"\n              item-value=\"id\"\n              v-model=\"booking.costUnitId\"\n            />\n          </v-layout>\n          <v-text-field\n            type=\"number\"\n            v-model=\"booking.cooldown\"\n            label=\"Cooldown\"\n            :persistent-hint=\"true\"\n            hint=\"In Seconds\"\n          />\n          <v-card-actions>\n            <v-layout\n              row\n              justify-end\n            >\n              <v-btn\n                class=\"primary text-capitalize\"\n                @click=\"create\"\n                :disabled=\"locked\"\n              >\n                Create\n              </v-btn>\n              <v-btn\n                class=\"error text-capitalize\"\n                @click=\"show = false\"\n                :disabled=\"locked\"\n              >\n                Cancel\n              </v-btn>\n            </v-layout>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n  </v-flex>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport moment from 'moment'\nimport { mapState } from 'vuex'\nimport DateSelector from '@/components/DateSelector.vue'\nimport TimeSelector from '@/components/TimeSelector.vue'\nimport UserAutocomplete from '@/components/UserAutocomplete.vue'\n\nimport { PROFILES_BY_MEMBER_IDS } from '@/graphql/member.gql'\nimport { GET_STATUS_LIST, GET_TYPE_LIST, SCHEDULE_BOOKING } from '@/graphql/Booking'\n\nexport default {\n  name: 'BookingCreateDialog',\n  components: { DateSelector, TimeSelector, UserAutocomplete },\n\n  data () {\n    return {\n      locked: false,\n      snackbar: {\n        show: false,\n        message: undefined,\n        callback: undefined\n      },\n      booking: {\n        availabilityId: '',\n        end: { date: null, time: null },\n        guest: null,\n        host: null,\n        profile: null,\n        start: { date: null, time: null },\n        statusId: null,\n        typeKey: null,\n        costUnitId: null,\n        costFree: true,\n        cooldown: 0\n      },\n      search: {\n        guest: { term: null, results: [] },\n        host: { term: null, results: [] },\n        guestProfiles: []\n      },\n      show: false,\n      statusList: [],\n      typeList: [],\n      profileList: []\n    }\n  },\n  methods: {\n    assignHost (user) { this.booking.host = user },\n    async assignGuest (user) {\n      this.booking.guest = user\n      delete this.booking.profile\n      this.profileList.length = 0\n      const input = {\n        memberIds: [user.id]\n      }\n      this.locked = true\n      try {\n        const result = await this.$apollo.query({\n          query: PROFILES_BY_MEMBER_IDS,\n          variables: { input },\n          fetchPolicy: 'network-only'\n        })\n        const profiles = _.get(result, 'data.lmsProfiles.results', [])\n        profiles.forEach(p => this.profileList.push(p))\n      } catch (err) {\n        console.warn('Failed loading profiles', err)\n        window.alert('Failed loading profiles')\n      } finally {\n        this.locked = false\n      }\n    },\n    async create () {\n      const {\n        start, end, typeKey, statusId,\n        host, guest, profile,\n        costFree, costUnitId, cooldown = 0\n      } = this.booking\n\n      const theStart = moment(`${start.date}T${start.time}`).utc()\n      let theEnd = moment(`${start.date}T${end.time}`).utc()\n      while (theEnd.isBefore(theEnd)) {\n        theEnd = theEnd.add(1, 'days')\n      }\n\n      const startDate = theStart.toISOString()\n      const endDate = theEnd.toISOString()\n\n      const input = {\n        typeKey,\n        statusId,\n        costFree,\n        profileId: profile && profile.memberId === guest.id ? profile.id : undefined,\n        costUnitId: costFree ? undefined : costUnitId,\n        hostId: host.id,\n        guestId: guest.id,\n        start: startDate,\n        end: endDate,\n        cooldown: ~~cooldown\n      }\n      this.locked = true\n      try {\n        const result = await this.$apollo.mutate({\n          mutation: SCHEDULE_BOOKING,\n          variables: {\n            input\n          }\n        })\n        const { data: { schedulingBookingUpsert: booking } } = result\n        this.snackbar = {\n          show: true,\n          message: 'Successfully created ',\n          callback: {\n            label: `Booking ${booking.id}`,\n            fn: () => this.$router.push({ path: `/appointments/_${booking.id}/booking` })\n          }\n        }\n        this.show = false\n      } catch (err) {\n        console.warn({ err })\n        this.snackbar = {\n          show: true,\n          message: 'Failed creating booking: ' + err.message.replace('GraphQL error: ', '')\n        }\n      } finally {\n        this.locked = false\n      }\n    },\n    updateStartDate (date) {\n      this.booking.start.date = this.booking.end.date = date\n    },\n    updateStartTime (time) { this.booking.start.time = time },\n    updateEndTime (time) { this.booking.end.time = time }\n  },\n  computed: {\n    ...mapState({\n      principal: state => state.user.principal\n    }),\n    ledgerUnits () {\n      const units = [{\n        id: 1,\n        name: 'US Dollar',\n        key: 'usd'\n      }, {\n        id: 1000,\n        tenantId: 1006,\n        name: 'Classroom token',\n        key: 'lesson'\n      }]\n      return units.filter(u => !u.tenantId || u.tenantId === this.principal.tenantId)\n    }\n  },\n  watch: {\n    snackbar: {\n      handler (updated, old) {\n        const { show, message, callback } = updated\n        if (!show && (message || callback)) {\n          this.snackbar = {\n            show: false,\n            message: undefined,\n            callback: undefined\n          }\n        }\n      },\n      deep: true\n    }\n  },\n  apollo: {\n    statusList: {\n      query: GET_STATUS_LIST,\n      update ({ bookingStatusList }) { return bookingStatusList }\n    },\n    typeList: {\n      query: GET_TYPE_LIST,\n      update ({ bookingTypeList }) { return bookingTypeList }\n    }\n  }\n}\n</script>\n<style scoped>\n.card-wrapper {\n  padding: 20px;\n}\n.snackbar a {\n  color: #ff4a9d;\n  margin-left: 3px;\n}\n</style>\n"]}]}