{"remainingRequest":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narfdre/Code/hexly/admin/src/components/ReportParameterInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narfdre/Code/hexly/admin/src/components/ReportParameterInput.vue","mtime":1546923832000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/narfdre/Code/hexly/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// {\"name\":\"Tenant ID\",\"type\":\"int\",\"implicit\":true,\"nullable\":false,\"parameterId\":1,\"isCollection\":false}\n\nexport default {\n  name: 'ReportParameterInput',\n  props: {\n    parameter: Object\n  },\n  methods: {\n    onChange() {\n      const { parameter, value } = this\n      this.$emit('change', {\n        parameter,\n        value\n      })\n    }\n  },\n  data() {\n    return {\n      value: ''\n    }\n  }\n}\n",{"version":3,"sources":["ReportParameterInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReportParameterInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-layout row wrap>\n      <v-flex xs12>\n        <v-text-field\n          v-model=\"value\"\n          :label=\"parameter.name\"\n          @input=\"onChange($event)\"\n          :disabled=\"parameter.implicit\"></v-text-field>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n<script>\n// {\"name\":\"Tenant ID\",\"type\":\"int\",\"implicit\":true,\"nullable\":false,\"parameterId\":1,\"isCollection\":false}\n\nexport default {\n  name: 'ReportParameterInput',\n  props: {\n    parameter: Object\n  },\n  methods: {\n    onChange() {\n      const { parameter, value } = this\n      this.$emit('change', {\n        parameter,\n        value\n      })\n    }\n  },\n  data() {\n    return {\n      value: ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n"]}]}